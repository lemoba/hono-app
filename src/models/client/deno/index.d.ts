
/**
 * Client
**/

import * as runtime from '.././runtime/library.d.ts';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model sp_admin_menus
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sp_admin_menus = $Result.DefaultSelection<Prisma.$sp_admin_menusPayload>
/**
 * Model sp_admin_roles
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sp_admin_roles = $Result.DefaultSelection<Prisma.$sp_admin_rolesPayload>
/**
 * Model sp_admin_tokens
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sp_admin_tokens = $Result.DefaultSelection<Prisma.$sp_admin_tokensPayload>
/**
 * Model sp_admins
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sp_admins = $Result.DefaultSelection<Prisma.$sp_adminsPayload>
/**
 * Model sp_failed_jobs
 * 
 */
export type sp_failed_jobs = $Result.DefaultSelection<Prisma.$sp_failed_jobsPayload>
/**
 * Model sp_files
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sp_files = $Result.DefaultSelection<Prisma.$sp_filesPayload>
/**
 * Model sp_goods
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sp_goods = $Result.DefaultSelection<Prisma.$sp_goodsPayload>
/**
 * Model sp_home_series
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sp_home_series = $Result.DefaultSelection<Prisma.$sp_home_seriesPayload>
/**
 * Model sp_login_logs
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sp_login_logs = $Result.DefaultSelection<Prisma.$sp_login_logsPayload>
/**
 * Model sp_migrations
 * 
 */
export type sp_migrations = $Result.DefaultSelection<Prisma.$sp_migrationsPayload>
/**
 * Model sp_orders
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sp_orders = $Result.DefaultSelection<Prisma.$sp_ordersPayload>
/**
 * Model sp_payment_records
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sp_payment_records = $Result.DefaultSelection<Prisma.$sp_payment_recordsPayload>
/**
 * Model sp_privacy_settings
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sp_privacy_settings = $Result.DefaultSelection<Prisma.$sp_privacy_settingsPayload>
/**
 * Model sp_purchase_records
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sp_purchase_records = $Result.DefaultSelection<Prisma.$sp_purchase_recordsPayload>
/**
 * Model sp_reward_records
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sp_reward_records = $Result.DefaultSelection<Prisma.$sp_reward_recordsPayload>
/**
 * Model sp_rewards_list
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sp_rewards_list = $Result.DefaultSelection<Prisma.$sp_rewards_listPayload>
/**
 * Model sp_rewards_type
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sp_rewards_type = $Result.DefaultSelection<Prisma.$sp_rewards_typePayload>
/**
 * Model sp_tokens
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sp_tokens = $Result.DefaultSelection<Prisma.$sp_tokensPayload>
/**
 * Model sp_upload_logs
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sp_upload_logs = $Result.DefaultSelection<Prisma.$sp_upload_logsPayload>
/**
 * Model sp_user_check_in
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sp_user_check_in = $Result.DefaultSelection<Prisma.$sp_user_check_inPayload>
/**
 * Model sp_user_collections
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sp_user_collections = $Result.DefaultSelection<Prisma.$sp_user_collectionsPayload>
/**
 * Model sp_user_likes
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sp_user_likes = $Result.DefaultSelection<Prisma.$sp_user_likesPayload>
/**
 * Model sp_user_my_lists
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sp_user_my_lists = $Result.DefaultSelection<Prisma.$sp_user_my_listsPayload>
/**
 * Model sp_user_suggests
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sp_user_suggests = $Result.DefaultSelection<Prisma.$sp_user_suggestsPayload>
/**
 * Model sp_users
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sp_users = $Result.DefaultSelection<Prisma.$sp_usersPayload>
/**
 * Model sp_video_categories
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sp_video_categories = $Result.DefaultSelection<Prisma.$sp_video_categoriesPayload>
/**
 * Model sp_video_group_categories
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sp_video_group_categories = $Result.DefaultSelection<Prisma.$sp_video_group_categoriesPayload>
/**
 * Model sp_video_groups
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sp_video_groups = $Result.DefaultSelection<Prisma.$sp_video_groupsPayload>
/**
 * Model sp_videos
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sp_videos = $Result.DefaultSelection<Prisma.$sp_videosPayload>
/**
 * Model sp_view_histories
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type sp_view_histories = $Result.DefaultSelection<Prisma.$sp_view_historiesPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Sp_admin_menus
 * const sp_admin_menus = await prisma.sp_admin_menus.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Sp_admin_menus
   * const sp_admin_menus = await prisma.sp_admin_menus.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.sp_admin_menus`: Exposes CRUD operations for the **sp_admin_menus** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sp_admin_menus
    * const sp_admin_menus = await prisma.sp_admin_menus.findMany()
    * ```
    */
  get sp_admin_menus(): Prisma.sp_admin_menusDelegate<ExtArgs>;

  /**
   * `prisma.sp_admin_roles`: Exposes CRUD operations for the **sp_admin_roles** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sp_admin_roles
    * const sp_admin_roles = await prisma.sp_admin_roles.findMany()
    * ```
    */
  get sp_admin_roles(): Prisma.sp_admin_rolesDelegate<ExtArgs>;

  /**
   * `prisma.sp_admin_tokens`: Exposes CRUD operations for the **sp_admin_tokens** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sp_admin_tokens
    * const sp_admin_tokens = await prisma.sp_admin_tokens.findMany()
    * ```
    */
  get sp_admin_tokens(): Prisma.sp_admin_tokensDelegate<ExtArgs>;

  /**
   * `prisma.sp_admins`: Exposes CRUD operations for the **sp_admins** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sp_admins
    * const sp_admins = await prisma.sp_admins.findMany()
    * ```
    */
  get sp_admins(): Prisma.sp_adminsDelegate<ExtArgs>;

  /**
   * `prisma.sp_failed_jobs`: Exposes CRUD operations for the **sp_failed_jobs** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sp_failed_jobs
    * const sp_failed_jobs = await prisma.sp_failed_jobs.findMany()
    * ```
    */
  get sp_failed_jobs(): Prisma.sp_failed_jobsDelegate<ExtArgs>;

  /**
   * `prisma.sp_files`: Exposes CRUD operations for the **sp_files** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sp_files
    * const sp_files = await prisma.sp_files.findMany()
    * ```
    */
  get sp_files(): Prisma.sp_filesDelegate<ExtArgs>;

  /**
   * `prisma.sp_goods`: Exposes CRUD operations for the **sp_goods** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sp_goods
    * const sp_goods = await prisma.sp_goods.findMany()
    * ```
    */
  get sp_goods(): Prisma.sp_goodsDelegate<ExtArgs>;

  /**
   * `prisma.sp_home_series`: Exposes CRUD operations for the **sp_home_series** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sp_home_series
    * const sp_home_series = await prisma.sp_home_series.findMany()
    * ```
    */
  get sp_home_series(): Prisma.sp_home_seriesDelegate<ExtArgs>;

  /**
   * `prisma.sp_login_logs`: Exposes CRUD operations for the **sp_login_logs** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sp_login_logs
    * const sp_login_logs = await prisma.sp_login_logs.findMany()
    * ```
    */
  get sp_login_logs(): Prisma.sp_login_logsDelegate<ExtArgs>;

  /**
   * `prisma.sp_migrations`: Exposes CRUD operations for the **sp_migrations** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sp_migrations
    * const sp_migrations = await prisma.sp_migrations.findMany()
    * ```
    */
  get sp_migrations(): Prisma.sp_migrationsDelegate<ExtArgs>;

  /**
   * `prisma.sp_orders`: Exposes CRUD operations for the **sp_orders** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sp_orders
    * const sp_orders = await prisma.sp_orders.findMany()
    * ```
    */
  get sp_orders(): Prisma.sp_ordersDelegate<ExtArgs>;

  /**
   * `prisma.sp_payment_records`: Exposes CRUD operations for the **sp_payment_records** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sp_payment_records
    * const sp_payment_records = await prisma.sp_payment_records.findMany()
    * ```
    */
  get sp_payment_records(): Prisma.sp_payment_recordsDelegate<ExtArgs>;

  /**
   * `prisma.sp_privacy_settings`: Exposes CRUD operations for the **sp_privacy_settings** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sp_privacy_settings
    * const sp_privacy_settings = await prisma.sp_privacy_settings.findMany()
    * ```
    */
  get sp_privacy_settings(): Prisma.sp_privacy_settingsDelegate<ExtArgs>;

  /**
   * `prisma.sp_purchase_records`: Exposes CRUD operations for the **sp_purchase_records** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sp_purchase_records
    * const sp_purchase_records = await prisma.sp_purchase_records.findMany()
    * ```
    */
  get sp_purchase_records(): Prisma.sp_purchase_recordsDelegate<ExtArgs>;

  /**
   * `prisma.sp_reward_records`: Exposes CRUD operations for the **sp_reward_records** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sp_reward_records
    * const sp_reward_records = await prisma.sp_reward_records.findMany()
    * ```
    */
  get sp_reward_records(): Prisma.sp_reward_recordsDelegate<ExtArgs>;

  /**
   * `prisma.sp_rewards_list`: Exposes CRUD operations for the **sp_rewards_list** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sp_rewards_lists
    * const sp_rewards_lists = await prisma.sp_rewards_list.findMany()
    * ```
    */
  get sp_rewards_list(): Prisma.sp_rewards_listDelegate<ExtArgs>;

  /**
   * `prisma.sp_rewards_type`: Exposes CRUD operations for the **sp_rewards_type** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sp_rewards_types
    * const sp_rewards_types = await prisma.sp_rewards_type.findMany()
    * ```
    */
  get sp_rewards_type(): Prisma.sp_rewards_typeDelegate<ExtArgs>;

  /**
   * `prisma.sp_tokens`: Exposes CRUD operations for the **sp_tokens** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sp_tokens
    * const sp_tokens = await prisma.sp_tokens.findMany()
    * ```
    */
  get sp_tokens(): Prisma.sp_tokensDelegate<ExtArgs>;

  /**
   * `prisma.sp_upload_logs`: Exposes CRUD operations for the **sp_upload_logs** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sp_upload_logs
    * const sp_upload_logs = await prisma.sp_upload_logs.findMany()
    * ```
    */
  get sp_upload_logs(): Prisma.sp_upload_logsDelegate<ExtArgs>;

  /**
   * `prisma.sp_user_check_in`: Exposes CRUD operations for the **sp_user_check_in** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sp_user_check_ins
    * const sp_user_check_ins = await prisma.sp_user_check_in.findMany()
    * ```
    */
  get sp_user_check_in(): Prisma.sp_user_check_inDelegate<ExtArgs>;

  /**
   * `prisma.sp_user_collections`: Exposes CRUD operations for the **sp_user_collections** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sp_user_collections
    * const sp_user_collections = await prisma.sp_user_collections.findMany()
    * ```
    */
  get sp_user_collections(): Prisma.sp_user_collectionsDelegate<ExtArgs>;

  /**
   * `prisma.sp_user_likes`: Exposes CRUD operations for the **sp_user_likes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sp_user_likes
    * const sp_user_likes = await prisma.sp_user_likes.findMany()
    * ```
    */
  get sp_user_likes(): Prisma.sp_user_likesDelegate<ExtArgs>;

  /**
   * `prisma.sp_user_my_lists`: Exposes CRUD operations for the **sp_user_my_lists** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sp_user_my_lists
    * const sp_user_my_lists = await prisma.sp_user_my_lists.findMany()
    * ```
    */
  get sp_user_my_lists(): Prisma.sp_user_my_listsDelegate<ExtArgs>;

  /**
   * `prisma.sp_user_suggests`: Exposes CRUD operations for the **sp_user_suggests** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sp_user_suggests
    * const sp_user_suggests = await prisma.sp_user_suggests.findMany()
    * ```
    */
  get sp_user_suggests(): Prisma.sp_user_suggestsDelegate<ExtArgs>;

  /**
   * `prisma.sp_users`: Exposes CRUD operations for the **sp_users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sp_users
    * const sp_users = await prisma.sp_users.findMany()
    * ```
    */
  get sp_users(): Prisma.sp_usersDelegate<ExtArgs>;

  /**
   * `prisma.sp_video_categories`: Exposes CRUD operations for the **sp_video_categories** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sp_video_categories
    * const sp_video_categories = await prisma.sp_video_categories.findMany()
    * ```
    */
  get sp_video_categories(): Prisma.sp_video_categoriesDelegate<ExtArgs>;

  /**
   * `prisma.sp_video_group_categories`: Exposes CRUD operations for the **sp_video_group_categories** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sp_video_group_categories
    * const sp_video_group_categories = await prisma.sp_video_group_categories.findMany()
    * ```
    */
  get sp_video_group_categories(): Prisma.sp_video_group_categoriesDelegate<ExtArgs>;

  /**
   * `prisma.sp_video_groups`: Exposes CRUD operations for the **sp_video_groups** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sp_video_groups
    * const sp_video_groups = await prisma.sp_video_groups.findMany()
    * ```
    */
  get sp_video_groups(): Prisma.sp_video_groupsDelegate<ExtArgs>;

  /**
   * `prisma.sp_videos`: Exposes CRUD operations for the **sp_videos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sp_videos
    * const sp_videos = await prisma.sp_videos.findMany()
    * ```
    */
  get sp_videos(): Prisma.sp_videosDelegate<ExtArgs>;

  /**
   * `prisma.sp_view_histories`: Exposes CRUD operations for the **sp_view_histories** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sp_view_histories
    * const sp_view_histories = await prisma.sp_view_histories.findMany()
    * ```
    */
  get sp_view_histories(): Prisma.sp_view_historiesDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.0.1
   * Query Engine version: 5dbef10bdbfb579e07d35cc85fb1518d357cb99e
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    sp_admin_menus: 'sp_admin_menus',
    sp_admin_roles: 'sp_admin_roles',
    sp_admin_tokens: 'sp_admin_tokens',
    sp_admins: 'sp_admins',
    sp_failed_jobs: 'sp_failed_jobs',
    sp_files: 'sp_files',
    sp_goods: 'sp_goods',
    sp_home_series: 'sp_home_series',
    sp_login_logs: 'sp_login_logs',
    sp_migrations: 'sp_migrations',
    sp_orders: 'sp_orders',
    sp_payment_records: 'sp_payment_records',
    sp_privacy_settings: 'sp_privacy_settings',
    sp_purchase_records: 'sp_purchase_records',
    sp_reward_records: 'sp_reward_records',
    sp_rewards_list: 'sp_rewards_list',
    sp_rewards_type: 'sp_rewards_type',
    sp_tokens: 'sp_tokens',
    sp_upload_logs: 'sp_upload_logs',
    sp_user_check_in: 'sp_user_check_in',
    sp_user_collections: 'sp_user_collections',
    sp_user_likes: 'sp_user_likes',
    sp_user_my_lists: 'sp_user_my_lists',
    sp_user_suggests: 'sp_user_suggests',
    sp_users: 'sp_users',
    sp_video_categories: 'sp_video_categories',
    sp_video_group_categories: 'sp_video_group_categories',
    sp_video_groups: 'sp_video_groups',
    sp_videos: 'sp_videos',
    sp_view_histories: 'sp_view_histories'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "sp_admin_menus" | "sp_admin_roles" | "sp_admin_tokens" | "sp_admins" | "sp_failed_jobs" | "sp_files" | "sp_goods" | "sp_home_series" | "sp_login_logs" | "sp_migrations" | "sp_orders" | "sp_payment_records" | "sp_privacy_settings" | "sp_purchase_records" | "sp_reward_records" | "sp_rewards_list" | "sp_rewards_type" | "sp_tokens" | "sp_upload_logs" | "sp_user_check_in" | "sp_user_collections" | "sp_user_likes" | "sp_user_my_lists" | "sp_user_suggests" | "sp_users" | "sp_video_categories" | "sp_video_group_categories" | "sp_video_groups" | "sp_videos" | "sp_view_histories"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      sp_admin_menus: {
        payload: Prisma.$sp_admin_menusPayload<ExtArgs>
        fields: Prisma.sp_admin_menusFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sp_admin_menusFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_admin_menusPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sp_admin_menusFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_admin_menusPayload>
          }
          findFirst: {
            args: Prisma.sp_admin_menusFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_admin_menusPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sp_admin_menusFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_admin_menusPayload>
          }
          findMany: {
            args: Prisma.sp_admin_menusFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_admin_menusPayload>[]
          }
          create: {
            args: Prisma.sp_admin_menusCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_admin_menusPayload>
          }
          createMany: {
            args: Prisma.sp_admin_menusCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sp_admin_menusDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_admin_menusPayload>
          }
          update: {
            args: Prisma.sp_admin_menusUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_admin_menusPayload>
          }
          deleteMany: {
            args: Prisma.sp_admin_menusDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sp_admin_menusUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sp_admin_menusUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_admin_menusPayload>
          }
          aggregate: {
            args: Prisma.Sp_admin_menusAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSp_admin_menus>
          }
          groupBy: {
            args: Prisma.sp_admin_menusGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sp_admin_menusGroupByOutputType>[]
          }
          count: {
            args: Prisma.sp_admin_menusCountArgs<ExtArgs>
            result: $Utils.Optional<Sp_admin_menusCountAggregateOutputType> | number
          }
        }
      }
      sp_admin_roles: {
        payload: Prisma.$sp_admin_rolesPayload<ExtArgs>
        fields: Prisma.sp_admin_rolesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sp_admin_rolesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_admin_rolesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sp_admin_rolesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_admin_rolesPayload>
          }
          findFirst: {
            args: Prisma.sp_admin_rolesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_admin_rolesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sp_admin_rolesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_admin_rolesPayload>
          }
          findMany: {
            args: Prisma.sp_admin_rolesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_admin_rolesPayload>[]
          }
          create: {
            args: Prisma.sp_admin_rolesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_admin_rolesPayload>
          }
          createMany: {
            args: Prisma.sp_admin_rolesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sp_admin_rolesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_admin_rolesPayload>
          }
          update: {
            args: Prisma.sp_admin_rolesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_admin_rolesPayload>
          }
          deleteMany: {
            args: Prisma.sp_admin_rolesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sp_admin_rolesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sp_admin_rolesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_admin_rolesPayload>
          }
          aggregate: {
            args: Prisma.Sp_admin_rolesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSp_admin_roles>
          }
          groupBy: {
            args: Prisma.sp_admin_rolesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sp_admin_rolesGroupByOutputType>[]
          }
          count: {
            args: Prisma.sp_admin_rolesCountArgs<ExtArgs>
            result: $Utils.Optional<Sp_admin_rolesCountAggregateOutputType> | number
          }
        }
      }
      sp_admin_tokens: {
        payload: Prisma.$sp_admin_tokensPayload<ExtArgs>
        fields: Prisma.sp_admin_tokensFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sp_admin_tokensFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_admin_tokensPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sp_admin_tokensFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_admin_tokensPayload>
          }
          findFirst: {
            args: Prisma.sp_admin_tokensFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_admin_tokensPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sp_admin_tokensFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_admin_tokensPayload>
          }
          findMany: {
            args: Prisma.sp_admin_tokensFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_admin_tokensPayload>[]
          }
          create: {
            args: Prisma.sp_admin_tokensCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_admin_tokensPayload>
          }
          createMany: {
            args: Prisma.sp_admin_tokensCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sp_admin_tokensDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_admin_tokensPayload>
          }
          update: {
            args: Prisma.sp_admin_tokensUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_admin_tokensPayload>
          }
          deleteMany: {
            args: Prisma.sp_admin_tokensDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sp_admin_tokensUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sp_admin_tokensUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_admin_tokensPayload>
          }
          aggregate: {
            args: Prisma.Sp_admin_tokensAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSp_admin_tokens>
          }
          groupBy: {
            args: Prisma.sp_admin_tokensGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sp_admin_tokensGroupByOutputType>[]
          }
          count: {
            args: Prisma.sp_admin_tokensCountArgs<ExtArgs>
            result: $Utils.Optional<Sp_admin_tokensCountAggregateOutputType> | number
          }
        }
      }
      sp_admins: {
        payload: Prisma.$sp_adminsPayload<ExtArgs>
        fields: Prisma.sp_adminsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sp_adminsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_adminsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sp_adminsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_adminsPayload>
          }
          findFirst: {
            args: Prisma.sp_adminsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_adminsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sp_adminsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_adminsPayload>
          }
          findMany: {
            args: Prisma.sp_adminsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_adminsPayload>[]
          }
          create: {
            args: Prisma.sp_adminsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_adminsPayload>
          }
          createMany: {
            args: Prisma.sp_adminsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sp_adminsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_adminsPayload>
          }
          update: {
            args: Prisma.sp_adminsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_adminsPayload>
          }
          deleteMany: {
            args: Prisma.sp_adminsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sp_adminsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sp_adminsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_adminsPayload>
          }
          aggregate: {
            args: Prisma.Sp_adminsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSp_admins>
          }
          groupBy: {
            args: Prisma.sp_adminsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sp_adminsGroupByOutputType>[]
          }
          count: {
            args: Prisma.sp_adminsCountArgs<ExtArgs>
            result: $Utils.Optional<Sp_adminsCountAggregateOutputType> | number
          }
        }
      }
      sp_failed_jobs: {
        payload: Prisma.$sp_failed_jobsPayload<ExtArgs>
        fields: Prisma.sp_failed_jobsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sp_failed_jobsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_failed_jobsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sp_failed_jobsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_failed_jobsPayload>
          }
          findFirst: {
            args: Prisma.sp_failed_jobsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_failed_jobsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sp_failed_jobsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_failed_jobsPayload>
          }
          findMany: {
            args: Prisma.sp_failed_jobsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_failed_jobsPayload>[]
          }
          create: {
            args: Prisma.sp_failed_jobsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_failed_jobsPayload>
          }
          createMany: {
            args: Prisma.sp_failed_jobsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sp_failed_jobsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_failed_jobsPayload>
          }
          update: {
            args: Prisma.sp_failed_jobsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_failed_jobsPayload>
          }
          deleteMany: {
            args: Prisma.sp_failed_jobsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sp_failed_jobsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sp_failed_jobsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_failed_jobsPayload>
          }
          aggregate: {
            args: Prisma.Sp_failed_jobsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSp_failed_jobs>
          }
          groupBy: {
            args: Prisma.sp_failed_jobsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sp_failed_jobsGroupByOutputType>[]
          }
          count: {
            args: Prisma.sp_failed_jobsCountArgs<ExtArgs>
            result: $Utils.Optional<Sp_failed_jobsCountAggregateOutputType> | number
          }
        }
      }
      sp_files: {
        payload: Prisma.$sp_filesPayload<ExtArgs>
        fields: Prisma.sp_filesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sp_filesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_filesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sp_filesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_filesPayload>
          }
          findFirst: {
            args: Prisma.sp_filesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_filesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sp_filesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_filesPayload>
          }
          findMany: {
            args: Prisma.sp_filesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_filesPayload>[]
          }
          create: {
            args: Prisma.sp_filesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_filesPayload>
          }
          createMany: {
            args: Prisma.sp_filesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sp_filesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_filesPayload>
          }
          update: {
            args: Prisma.sp_filesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_filesPayload>
          }
          deleteMany: {
            args: Prisma.sp_filesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sp_filesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sp_filesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_filesPayload>
          }
          aggregate: {
            args: Prisma.Sp_filesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSp_files>
          }
          groupBy: {
            args: Prisma.sp_filesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sp_filesGroupByOutputType>[]
          }
          count: {
            args: Prisma.sp_filesCountArgs<ExtArgs>
            result: $Utils.Optional<Sp_filesCountAggregateOutputType> | number
          }
        }
      }
      sp_goods: {
        payload: Prisma.$sp_goodsPayload<ExtArgs>
        fields: Prisma.sp_goodsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sp_goodsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_goodsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sp_goodsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_goodsPayload>
          }
          findFirst: {
            args: Prisma.sp_goodsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_goodsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sp_goodsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_goodsPayload>
          }
          findMany: {
            args: Prisma.sp_goodsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_goodsPayload>[]
          }
          create: {
            args: Prisma.sp_goodsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_goodsPayload>
          }
          createMany: {
            args: Prisma.sp_goodsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sp_goodsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_goodsPayload>
          }
          update: {
            args: Prisma.sp_goodsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_goodsPayload>
          }
          deleteMany: {
            args: Prisma.sp_goodsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sp_goodsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sp_goodsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_goodsPayload>
          }
          aggregate: {
            args: Prisma.Sp_goodsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSp_goods>
          }
          groupBy: {
            args: Prisma.sp_goodsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sp_goodsGroupByOutputType>[]
          }
          count: {
            args: Prisma.sp_goodsCountArgs<ExtArgs>
            result: $Utils.Optional<Sp_goodsCountAggregateOutputType> | number
          }
        }
      }
      sp_home_series: {
        payload: Prisma.$sp_home_seriesPayload<ExtArgs>
        fields: Prisma.sp_home_seriesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sp_home_seriesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_home_seriesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sp_home_seriesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_home_seriesPayload>
          }
          findFirst: {
            args: Prisma.sp_home_seriesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_home_seriesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sp_home_seriesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_home_seriesPayload>
          }
          findMany: {
            args: Prisma.sp_home_seriesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_home_seriesPayload>[]
          }
          create: {
            args: Prisma.sp_home_seriesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_home_seriesPayload>
          }
          createMany: {
            args: Prisma.sp_home_seriesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sp_home_seriesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_home_seriesPayload>
          }
          update: {
            args: Prisma.sp_home_seriesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_home_seriesPayload>
          }
          deleteMany: {
            args: Prisma.sp_home_seriesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sp_home_seriesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sp_home_seriesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_home_seriesPayload>
          }
          aggregate: {
            args: Prisma.Sp_home_seriesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSp_home_series>
          }
          groupBy: {
            args: Prisma.sp_home_seriesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sp_home_seriesGroupByOutputType>[]
          }
          count: {
            args: Prisma.sp_home_seriesCountArgs<ExtArgs>
            result: $Utils.Optional<Sp_home_seriesCountAggregateOutputType> | number
          }
        }
      }
      sp_login_logs: {
        payload: Prisma.$sp_login_logsPayload<ExtArgs>
        fields: Prisma.sp_login_logsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sp_login_logsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_login_logsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sp_login_logsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_login_logsPayload>
          }
          findFirst: {
            args: Prisma.sp_login_logsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_login_logsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sp_login_logsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_login_logsPayload>
          }
          findMany: {
            args: Prisma.sp_login_logsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_login_logsPayload>[]
          }
          create: {
            args: Prisma.sp_login_logsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_login_logsPayload>
          }
          createMany: {
            args: Prisma.sp_login_logsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sp_login_logsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_login_logsPayload>
          }
          update: {
            args: Prisma.sp_login_logsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_login_logsPayload>
          }
          deleteMany: {
            args: Prisma.sp_login_logsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sp_login_logsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sp_login_logsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_login_logsPayload>
          }
          aggregate: {
            args: Prisma.Sp_login_logsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSp_login_logs>
          }
          groupBy: {
            args: Prisma.sp_login_logsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sp_login_logsGroupByOutputType>[]
          }
          count: {
            args: Prisma.sp_login_logsCountArgs<ExtArgs>
            result: $Utils.Optional<Sp_login_logsCountAggregateOutputType> | number
          }
        }
      }
      sp_migrations: {
        payload: Prisma.$sp_migrationsPayload<ExtArgs>
        fields: Prisma.sp_migrationsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sp_migrationsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_migrationsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sp_migrationsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_migrationsPayload>
          }
          findFirst: {
            args: Prisma.sp_migrationsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_migrationsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sp_migrationsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_migrationsPayload>
          }
          findMany: {
            args: Prisma.sp_migrationsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_migrationsPayload>[]
          }
          create: {
            args: Prisma.sp_migrationsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_migrationsPayload>
          }
          createMany: {
            args: Prisma.sp_migrationsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sp_migrationsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_migrationsPayload>
          }
          update: {
            args: Prisma.sp_migrationsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_migrationsPayload>
          }
          deleteMany: {
            args: Prisma.sp_migrationsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sp_migrationsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sp_migrationsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_migrationsPayload>
          }
          aggregate: {
            args: Prisma.Sp_migrationsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSp_migrations>
          }
          groupBy: {
            args: Prisma.sp_migrationsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sp_migrationsGroupByOutputType>[]
          }
          count: {
            args: Prisma.sp_migrationsCountArgs<ExtArgs>
            result: $Utils.Optional<Sp_migrationsCountAggregateOutputType> | number
          }
        }
      }
      sp_orders: {
        payload: Prisma.$sp_ordersPayload<ExtArgs>
        fields: Prisma.sp_ordersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sp_ordersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_ordersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sp_ordersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_ordersPayload>
          }
          findFirst: {
            args: Prisma.sp_ordersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_ordersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sp_ordersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_ordersPayload>
          }
          findMany: {
            args: Prisma.sp_ordersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_ordersPayload>[]
          }
          create: {
            args: Prisma.sp_ordersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_ordersPayload>
          }
          createMany: {
            args: Prisma.sp_ordersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sp_ordersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_ordersPayload>
          }
          update: {
            args: Prisma.sp_ordersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_ordersPayload>
          }
          deleteMany: {
            args: Prisma.sp_ordersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sp_ordersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sp_ordersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_ordersPayload>
          }
          aggregate: {
            args: Prisma.Sp_ordersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSp_orders>
          }
          groupBy: {
            args: Prisma.sp_ordersGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sp_ordersGroupByOutputType>[]
          }
          count: {
            args: Prisma.sp_ordersCountArgs<ExtArgs>
            result: $Utils.Optional<Sp_ordersCountAggregateOutputType> | number
          }
        }
      }
      sp_payment_records: {
        payload: Prisma.$sp_payment_recordsPayload<ExtArgs>
        fields: Prisma.sp_payment_recordsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sp_payment_recordsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_payment_recordsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sp_payment_recordsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_payment_recordsPayload>
          }
          findFirst: {
            args: Prisma.sp_payment_recordsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_payment_recordsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sp_payment_recordsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_payment_recordsPayload>
          }
          findMany: {
            args: Prisma.sp_payment_recordsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_payment_recordsPayload>[]
          }
          create: {
            args: Prisma.sp_payment_recordsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_payment_recordsPayload>
          }
          createMany: {
            args: Prisma.sp_payment_recordsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sp_payment_recordsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_payment_recordsPayload>
          }
          update: {
            args: Prisma.sp_payment_recordsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_payment_recordsPayload>
          }
          deleteMany: {
            args: Prisma.sp_payment_recordsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sp_payment_recordsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sp_payment_recordsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_payment_recordsPayload>
          }
          aggregate: {
            args: Prisma.Sp_payment_recordsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSp_payment_records>
          }
          groupBy: {
            args: Prisma.sp_payment_recordsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sp_payment_recordsGroupByOutputType>[]
          }
          count: {
            args: Prisma.sp_payment_recordsCountArgs<ExtArgs>
            result: $Utils.Optional<Sp_payment_recordsCountAggregateOutputType> | number
          }
        }
      }
      sp_privacy_settings: {
        payload: Prisma.$sp_privacy_settingsPayload<ExtArgs>
        fields: Prisma.sp_privacy_settingsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sp_privacy_settingsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_privacy_settingsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sp_privacy_settingsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_privacy_settingsPayload>
          }
          findFirst: {
            args: Prisma.sp_privacy_settingsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_privacy_settingsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sp_privacy_settingsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_privacy_settingsPayload>
          }
          findMany: {
            args: Prisma.sp_privacy_settingsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_privacy_settingsPayload>[]
          }
          create: {
            args: Prisma.sp_privacy_settingsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_privacy_settingsPayload>
          }
          createMany: {
            args: Prisma.sp_privacy_settingsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sp_privacy_settingsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_privacy_settingsPayload>
          }
          update: {
            args: Prisma.sp_privacy_settingsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_privacy_settingsPayload>
          }
          deleteMany: {
            args: Prisma.sp_privacy_settingsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sp_privacy_settingsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sp_privacy_settingsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_privacy_settingsPayload>
          }
          aggregate: {
            args: Prisma.Sp_privacy_settingsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSp_privacy_settings>
          }
          groupBy: {
            args: Prisma.sp_privacy_settingsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sp_privacy_settingsGroupByOutputType>[]
          }
          count: {
            args: Prisma.sp_privacy_settingsCountArgs<ExtArgs>
            result: $Utils.Optional<Sp_privacy_settingsCountAggregateOutputType> | number
          }
        }
      }
      sp_purchase_records: {
        payload: Prisma.$sp_purchase_recordsPayload<ExtArgs>
        fields: Prisma.sp_purchase_recordsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sp_purchase_recordsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_purchase_recordsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sp_purchase_recordsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_purchase_recordsPayload>
          }
          findFirst: {
            args: Prisma.sp_purchase_recordsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_purchase_recordsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sp_purchase_recordsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_purchase_recordsPayload>
          }
          findMany: {
            args: Prisma.sp_purchase_recordsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_purchase_recordsPayload>[]
          }
          create: {
            args: Prisma.sp_purchase_recordsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_purchase_recordsPayload>
          }
          createMany: {
            args: Prisma.sp_purchase_recordsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sp_purchase_recordsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_purchase_recordsPayload>
          }
          update: {
            args: Prisma.sp_purchase_recordsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_purchase_recordsPayload>
          }
          deleteMany: {
            args: Prisma.sp_purchase_recordsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sp_purchase_recordsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sp_purchase_recordsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_purchase_recordsPayload>
          }
          aggregate: {
            args: Prisma.Sp_purchase_recordsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSp_purchase_records>
          }
          groupBy: {
            args: Prisma.sp_purchase_recordsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sp_purchase_recordsGroupByOutputType>[]
          }
          count: {
            args: Prisma.sp_purchase_recordsCountArgs<ExtArgs>
            result: $Utils.Optional<Sp_purchase_recordsCountAggregateOutputType> | number
          }
        }
      }
      sp_reward_records: {
        payload: Prisma.$sp_reward_recordsPayload<ExtArgs>
        fields: Prisma.sp_reward_recordsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sp_reward_recordsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_reward_recordsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sp_reward_recordsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_reward_recordsPayload>
          }
          findFirst: {
            args: Prisma.sp_reward_recordsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_reward_recordsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sp_reward_recordsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_reward_recordsPayload>
          }
          findMany: {
            args: Prisma.sp_reward_recordsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_reward_recordsPayload>[]
          }
          create: {
            args: Prisma.sp_reward_recordsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_reward_recordsPayload>
          }
          createMany: {
            args: Prisma.sp_reward_recordsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sp_reward_recordsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_reward_recordsPayload>
          }
          update: {
            args: Prisma.sp_reward_recordsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_reward_recordsPayload>
          }
          deleteMany: {
            args: Prisma.sp_reward_recordsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sp_reward_recordsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sp_reward_recordsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_reward_recordsPayload>
          }
          aggregate: {
            args: Prisma.Sp_reward_recordsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSp_reward_records>
          }
          groupBy: {
            args: Prisma.sp_reward_recordsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sp_reward_recordsGroupByOutputType>[]
          }
          count: {
            args: Prisma.sp_reward_recordsCountArgs<ExtArgs>
            result: $Utils.Optional<Sp_reward_recordsCountAggregateOutputType> | number
          }
        }
      }
      sp_rewards_list: {
        payload: Prisma.$sp_rewards_listPayload<ExtArgs>
        fields: Prisma.sp_rewards_listFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sp_rewards_listFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_rewards_listPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sp_rewards_listFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_rewards_listPayload>
          }
          findFirst: {
            args: Prisma.sp_rewards_listFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_rewards_listPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sp_rewards_listFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_rewards_listPayload>
          }
          findMany: {
            args: Prisma.sp_rewards_listFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_rewards_listPayload>[]
          }
          create: {
            args: Prisma.sp_rewards_listCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_rewards_listPayload>
          }
          createMany: {
            args: Prisma.sp_rewards_listCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sp_rewards_listDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_rewards_listPayload>
          }
          update: {
            args: Prisma.sp_rewards_listUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_rewards_listPayload>
          }
          deleteMany: {
            args: Prisma.sp_rewards_listDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sp_rewards_listUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sp_rewards_listUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_rewards_listPayload>
          }
          aggregate: {
            args: Prisma.Sp_rewards_listAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSp_rewards_list>
          }
          groupBy: {
            args: Prisma.sp_rewards_listGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sp_rewards_listGroupByOutputType>[]
          }
          count: {
            args: Prisma.sp_rewards_listCountArgs<ExtArgs>
            result: $Utils.Optional<Sp_rewards_listCountAggregateOutputType> | number
          }
        }
      }
      sp_rewards_type: {
        payload: Prisma.$sp_rewards_typePayload<ExtArgs>
        fields: Prisma.sp_rewards_typeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sp_rewards_typeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_rewards_typePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sp_rewards_typeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_rewards_typePayload>
          }
          findFirst: {
            args: Prisma.sp_rewards_typeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_rewards_typePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sp_rewards_typeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_rewards_typePayload>
          }
          findMany: {
            args: Prisma.sp_rewards_typeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_rewards_typePayload>[]
          }
          create: {
            args: Prisma.sp_rewards_typeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_rewards_typePayload>
          }
          createMany: {
            args: Prisma.sp_rewards_typeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sp_rewards_typeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_rewards_typePayload>
          }
          update: {
            args: Prisma.sp_rewards_typeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_rewards_typePayload>
          }
          deleteMany: {
            args: Prisma.sp_rewards_typeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sp_rewards_typeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sp_rewards_typeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_rewards_typePayload>
          }
          aggregate: {
            args: Prisma.Sp_rewards_typeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSp_rewards_type>
          }
          groupBy: {
            args: Prisma.sp_rewards_typeGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sp_rewards_typeGroupByOutputType>[]
          }
          count: {
            args: Prisma.sp_rewards_typeCountArgs<ExtArgs>
            result: $Utils.Optional<Sp_rewards_typeCountAggregateOutputType> | number
          }
        }
      }
      sp_tokens: {
        payload: Prisma.$sp_tokensPayload<ExtArgs>
        fields: Prisma.sp_tokensFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sp_tokensFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_tokensPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sp_tokensFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_tokensPayload>
          }
          findFirst: {
            args: Prisma.sp_tokensFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_tokensPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sp_tokensFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_tokensPayload>
          }
          findMany: {
            args: Prisma.sp_tokensFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_tokensPayload>[]
          }
          create: {
            args: Prisma.sp_tokensCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_tokensPayload>
          }
          createMany: {
            args: Prisma.sp_tokensCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sp_tokensDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_tokensPayload>
          }
          update: {
            args: Prisma.sp_tokensUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_tokensPayload>
          }
          deleteMany: {
            args: Prisma.sp_tokensDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sp_tokensUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sp_tokensUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_tokensPayload>
          }
          aggregate: {
            args: Prisma.Sp_tokensAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSp_tokens>
          }
          groupBy: {
            args: Prisma.sp_tokensGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sp_tokensGroupByOutputType>[]
          }
          count: {
            args: Prisma.sp_tokensCountArgs<ExtArgs>
            result: $Utils.Optional<Sp_tokensCountAggregateOutputType> | number
          }
        }
      }
      sp_upload_logs: {
        payload: Prisma.$sp_upload_logsPayload<ExtArgs>
        fields: Prisma.sp_upload_logsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sp_upload_logsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_upload_logsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sp_upload_logsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_upload_logsPayload>
          }
          findFirst: {
            args: Prisma.sp_upload_logsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_upload_logsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sp_upload_logsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_upload_logsPayload>
          }
          findMany: {
            args: Prisma.sp_upload_logsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_upload_logsPayload>[]
          }
          create: {
            args: Prisma.sp_upload_logsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_upload_logsPayload>
          }
          createMany: {
            args: Prisma.sp_upload_logsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sp_upload_logsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_upload_logsPayload>
          }
          update: {
            args: Prisma.sp_upload_logsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_upload_logsPayload>
          }
          deleteMany: {
            args: Prisma.sp_upload_logsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sp_upload_logsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sp_upload_logsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_upload_logsPayload>
          }
          aggregate: {
            args: Prisma.Sp_upload_logsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSp_upload_logs>
          }
          groupBy: {
            args: Prisma.sp_upload_logsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sp_upload_logsGroupByOutputType>[]
          }
          count: {
            args: Prisma.sp_upload_logsCountArgs<ExtArgs>
            result: $Utils.Optional<Sp_upload_logsCountAggregateOutputType> | number
          }
        }
      }
      sp_user_check_in: {
        payload: Prisma.$sp_user_check_inPayload<ExtArgs>
        fields: Prisma.sp_user_check_inFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sp_user_check_inFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_user_check_inPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sp_user_check_inFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_user_check_inPayload>
          }
          findFirst: {
            args: Prisma.sp_user_check_inFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_user_check_inPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sp_user_check_inFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_user_check_inPayload>
          }
          findMany: {
            args: Prisma.sp_user_check_inFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_user_check_inPayload>[]
          }
          create: {
            args: Prisma.sp_user_check_inCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_user_check_inPayload>
          }
          createMany: {
            args: Prisma.sp_user_check_inCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sp_user_check_inDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_user_check_inPayload>
          }
          update: {
            args: Prisma.sp_user_check_inUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_user_check_inPayload>
          }
          deleteMany: {
            args: Prisma.sp_user_check_inDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sp_user_check_inUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sp_user_check_inUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_user_check_inPayload>
          }
          aggregate: {
            args: Prisma.Sp_user_check_inAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSp_user_check_in>
          }
          groupBy: {
            args: Prisma.sp_user_check_inGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sp_user_check_inGroupByOutputType>[]
          }
          count: {
            args: Prisma.sp_user_check_inCountArgs<ExtArgs>
            result: $Utils.Optional<Sp_user_check_inCountAggregateOutputType> | number
          }
        }
      }
      sp_user_collections: {
        payload: Prisma.$sp_user_collectionsPayload<ExtArgs>
        fields: Prisma.sp_user_collectionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sp_user_collectionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_user_collectionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sp_user_collectionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_user_collectionsPayload>
          }
          findFirst: {
            args: Prisma.sp_user_collectionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_user_collectionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sp_user_collectionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_user_collectionsPayload>
          }
          findMany: {
            args: Prisma.sp_user_collectionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_user_collectionsPayload>[]
          }
          create: {
            args: Prisma.sp_user_collectionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_user_collectionsPayload>
          }
          createMany: {
            args: Prisma.sp_user_collectionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sp_user_collectionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_user_collectionsPayload>
          }
          update: {
            args: Prisma.sp_user_collectionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_user_collectionsPayload>
          }
          deleteMany: {
            args: Prisma.sp_user_collectionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sp_user_collectionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sp_user_collectionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_user_collectionsPayload>
          }
          aggregate: {
            args: Prisma.Sp_user_collectionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSp_user_collections>
          }
          groupBy: {
            args: Prisma.sp_user_collectionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sp_user_collectionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.sp_user_collectionsCountArgs<ExtArgs>
            result: $Utils.Optional<Sp_user_collectionsCountAggregateOutputType> | number
          }
        }
      }
      sp_user_likes: {
        payload: Prisma.$sp_user_likesPayload<ExtArgs>
        fields: Prisma.sp_user_likesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sp_user_likesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_user_likesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sp_user_likesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_user_likesPayload>
          }
          findFirst: {
            args: Prisma.sp_user_likesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_user_likesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sp_user_likesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_user_likesPayload>
          }
          findMany: {
            args: Prisma.sp_user_likesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_user_likesPayload>[]
          }
          create: {
            args: Prisma.sp_user_likesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_user_likesPayload>
          }
          createMany: {
            args: Prisma.sp_user_likesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sp_user_likesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_user_likesPayload>
          }
          update: {
            args: Prisma.sp_user_likesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_user_likesPayload>
          }
          deleteMany: {
            args: Prisma.sp_user_likesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sp_user_likesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sp_user_likesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_user_likesPayload>
          }
          aggregate: {
            args: Prisma.Sp_user_likesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSp_user_likes>
          }
          groupBy: {
            args: Prisma.sp_user_likesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sp_user_likesGroupByOutputType>[]
          }
          count: {
            args: Prisma.sp_user_likesCountArgs<ExtArgs>
            result: $Utils.Optional<Sp_user_likesCountAggregateOutputType> | number
          }
        }
      }
      sp_user_my_lists: {
        payload: Prisma.$sp_user_my_listsPayload<ExtArgs>
        fields: Prisma.sp_user_my_listsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sp_user_my_listsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_user_my_listsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sp_user_my_listsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_user_my_listsPayload>
          }
          findFirst: {
            args: Prisma.sp_user_my_listsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_user_my_listsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sp_user_my_listsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_user_my_listsPayload>
          }
          findMany: {
            args: Prisma.sp_user_my_listsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_user_my_listsPayload>[]
          }
          create: {
            args: Prisma.sp_user_my_listsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_user_my_listsPayload>
          }
          createMany: {
            args: Prisma.sp_user_my_listsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sp_user_my_listsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_user_my_listsPayload>
          }
          update: {
            args: Prisma.sp_user_my_listsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_user_my_listsPayload>
          }
          deleteMany: {
            args: Prisma.sp_user_my_listsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sp_user_my_listsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sp_user_my_listsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_user_my_listsPayload>
          }
          aggregate: {
            args: Prisma.Sp_user_my_listsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSp_user_my_lists>
          }
          groupBy: {
            args: Prisma.sp_user_my_listsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sp_user_my_listsGroupByOutputType>[]
          }
          count: {
            args: Prisma.sp_user_my_listsCountArgs<ExtArgs>
            result: $Utils.Optional<Sp_user_my_listsCountAggregateOutputType> | number
          }
        }
      }
      sp_user_suggests: {
        payload: Prisma.$sp_user_suggestsPayload<ExtArgs>
        fields: Prisma.sp_user_suggestsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sp_user_suggestsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_user_suggestsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sp_user_suggestsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_user_suggestsPayload>
          }
          findFirst: {
            args: Prisma.sp_user_suggestsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_user_suggestsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sp_user_suggestsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_user_suggestsPayload>
          }
          findMany: {
            args: Prisma.sp_user_suggestsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_user_suggestsPayload>[]
          }
          create: {
            args: Prisma.sp_user_suggestsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_user_suggestsPayload>
          }
          createMany: {
            args: Prisma.sp_user_suggestsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sp_user_suggestsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_user_suggestsPayload>
          }
          update: {
            args: Prisma.sp_user_suggestsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_user_suggestsPayload>
          }
          deleteMany: {
            args: Prisma.sp_user_suggestsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sp_user_suggestsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sp_user_suggestsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_user_suggestsPayload>
          }
          aggregate: {
            args: Prisma.Sp_user_suggestsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSp_user_suggests>
          }
          groupBy: {
            args: Prisma.sp_user_suggestsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sp_user_suggestsGroupByOutputType>[]
          }
          count: {
            args: Prisma.sp_user_suggestsCountArgs<ExtArgs>
            result: $Utils.Optional<Sp_user_suggestsCountAggregateOutputType> | number
          }
        }
      }
      sp_users: {
        payload: Prisma.$sp_usersPayload<ExtArgs>
        fields: Prisma.sp_usersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sp_usersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_usersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sp_usersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_usersPayload>
          }
          findFirst: {
            args: Prisma.sp_usersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_usersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sp_usersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_usersPayload>
          }
          findMany: {
            args: Prisma.sp_usersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_usersPayload>[]
          }
          create: {
            args: Prisma.sp_usersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_usersPayload>
          }
          createMany: {
            args: Prisma.sp_usersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sp_usersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_usersPayload>
          }
          update: {
            args: Prisma.sp_usersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_usersPayload>
          }
          deleteMany: {
            args: Prisma.sp_usersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sp_usersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sp_usersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_usersPayload>
          }
          aggregate: {
            args: Prisma.Sp_usersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSp_users>
          }
          groupBy: {
            args: Prisma.sp_usersGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sp_usersGroupByOutputType>[]
          }
          count: {
            args: Prisma.sp_usersCountArgs<ExtArgs>
            result: $Utils.Optional<Sp_usersCountAggregateOutputType> | number
          }
        }
      }
      sp_video_categories: {
        payload: Prisma.$sp_video_categoriesPayload<ExtArgs>
        fields: Prisma.sp_video_categoriesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sp_video_categoriesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_video_categoriesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sp_video_categoriesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_video_categoriesPayload>
          }
          findFirst: {
            args: Prisma.sp_video_categoriesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_video_categoriesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sp_video_categoriesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_video_categoriesPayload>
          }
          findMany: {
            args: Prisma.sp_video_categoriesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_video_categoriesPayload>[]
          }
          create: {
            args: Prisma.sp_video_categoriesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_video_categoriesPayload>
          }
          createMany: {
            args: Prisma.sp_video_categoriesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sp_video_categoriesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_video_categoriesPayload>
          }
          update: {
            args: Prisma.sp_video_categoriesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_video_categoriesPayload>
          }
          deleteMany: {
            args: Prisma.sp_video_categoriesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sp_video_categoriesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sp_video_categoriesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_video_categoriesPayload>
          }
          aggregate: {
            args: Prisma.Sp_video_categoriesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSp_video_categories>
          }
          groupBy: {
            args: Prisma.sp_video_categoriesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sp_video_categoriesGroupByOutputType>[]
          }
          count: {
            args: Prisma.sp_video_categoriesCountArgs<ExtArgs>
            result: $Utils.Optional<Sp_video_categoriesCountAggregateOutputType> | number
          }
        }
      }
      sp_video_group_categories: {
        payload: Prisma.$sp_video_group_categoriesPayload<ExtArgs>
        fields: Prisma.sp_video_group_categoriesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sp_video_group_categoriesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_video_group_categoriesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sp_video_group_categoriesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_video_group_categoriesPayload>
          }
          findFirst: {
            args: Prisma.sp_video_group_categoriesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_video_group_categoriesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sp_video_group_categoriesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_video_group_categoriesPayload>
          }
          findMany: {
            args: Prisma.sp_video_group_categoriesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_video_group_categoriesPayload>[]
          }
          create: {
            args: Prisma.sp_video_group_categoriesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_video_group_categoriesPayload>
          }
          createMany: {
            args: Prisma.sp_video_group_categoriesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sp_video_group_categoriesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_video_group_categoriesPayload>
          }
          update: {
            args: Prisma.sp_video_group_categoriesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_video_group_categoriesPayload>
          }
          deleteMany: {
            args: Prisma.sp_video_group_categoriesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sp_video_group_categoriesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sp_video_group_categoriesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_video_group_categoriesPayload>
          }
          aggregate: {
            args: Prisma.Sp_video_group_categoriesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSp_video_group_categories>
          }
          groupBy: {
            args: Prisma.sp_video_group_categoriesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sp_video_group_categoriesGroupByOutputType>[]
          }
          count: {
            args: Prisma.sp_video_group_categoriesCountArgs<ExtArgs>
            result: $Utils.Optional<Sp_video_group_categoriesCountAggregateOutputType> | number
          }
        }
      }
      sp_video_groups: {
        payload: Prisma.$sp_video_groupsPayload<ExtArgs>
        fields: Prisma.sp_video_groupsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sp_video_groupsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_video_groupsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sp_video_groupsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_video_groupsPayload>
          }
          findFirst: {
            args: Prisma.sp_video_groupsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_video_groupsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sp_video_groupsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_video_groupsPayload>
          }
          findMany: {
            args: Prisma.sp_video_groupsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_video_groupsPayload>[]
          }
          create: {
            args: Prisma.sp_video_groupsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_video_groupsPayload>
          }
          createMany: {
            args: Prisma.sp_video_groupsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sp_video_groupsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_video_groupsPayload>
          }
          update: {
            args: Prisma.sp_video_groupsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_video_groupsPayload>
          }
          deleteMany: {
            args: Prisma.sp_video_groupsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sp_video_groupsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sp_video_groupsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_video_groupsPayload>
          }
          aggregate: {
            args: Prisma.Sp_video_groupsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSp_video_groups>
          }
          groupBy: {
            args: Prisma.sp_video_groupsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sp_video_groupsGroupByOutputType>[]
          }
          count: {
            args: Prisma.sp_video_groupsCountArgs<ExtArgs>
            result: $Utils.Optional<Sp_video_groupsCountAggregateOutputType> | number
          }
        }
      }
      sp_videos: {
        payload: Prisma.$sp_videosPayload<ExtArgs>
        fields: Prisma.sp_videosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sp_videosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_videosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sp_videosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_videosPayload>
          }
          findFirst: {
            args: Prisma.sp_videosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_videosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sp_videosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_videosPayload>
          }
          findMany: {
            args: Prisma.sp_videosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_videosPayload>[]
          }
          create: {
            args: Prisma.sp_videosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_videosPayload>
          }
          createMany: {
            args: Prisma.sp_videosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sp_videosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_videosPayload>
          }
          update: {
            args: Prisma.sp_videosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_videosPayload>
          }
          deleteMany: {
            args: Prisma.sp_videosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sp_videosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sp_videosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_videosPayload>
          }
          aggregate: {
            args: Prisma.Sp_videosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSp_videos>
          }
          groupBy: {
            args: Prisma.sp_videosGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sp_videosGroupByOutputType>[]
          }
          count: {
            args: Prisma.sp_videosCountArgs<ExtArgs>
            result: $Utils.Optional<Sp_videosCountAggregateOutputType> | number
          }
        }
      }
      sp_view_histories: {
        payload: Prisma.$sp_view_historiesPayload<ExtArgs>
        fields: Prisma.sp_view_historiesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sp_view_historiesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_view_historiesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sp_view_historiesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_view_historiesPayload>
          }
          findFirst: {
            args: Prisma.sp_view_historiesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_view_historiesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sp_view_historiesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_view_historiesPayload>
          }
          findMany: {
            args: Prisma.sp_view_historiesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_view_historiesPayload>[]
          }
          create: {
            args: Prisma.sp_view_historiesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_view_historiesPayload>
          }
          createMany: {
            args: Prisma.sp_view_historiesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sp_view_historiesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_view_historiesPayload>
          }
          update: {
            args: Prisma.sp_view_historiesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_view_historiesPayload>
          }
          deleteMany: {
            args: Prisma.sp_view_historiesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sp_view_historiesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sp_view_historiesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sp_view_historiesPayload>
          }
          aggregate: {
            args: Prisma.Sp_view_historiesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSp_view_histories>
          }
          groupBy: {
            args: Prisma.sp_view_historiesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sp_view_historiesGroupByOutputType>[]
          }
          count: {
            args: Prisma.sp_view_historiesCountArgs<ExtArgs>
            result: $Utils.Optional<Sp_view_historiesCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */



  /**
   * Models
   */

  /**
   * Model sp_admin_menus
   */

  export type AggregateSp_admin_menus = {
    _count: Sp_admin_menusCountAggregateOutputType | null
    _avg: Sp_admin_menusAvgAggregateOutputType | null
    _sum: Sp_admin_menusSumAggregateOutputType | null
    _min: Sp_admin_menusMinAggregateOutputType | null
    _max: Sp_admin_menusMaxAggregateOutputType | null
  }

  export type Sp_admin_menusAvgAggregateOutputType = {
    id: number | null
    parent_id: number | null
    sort: number | null
  }

  export type Sp_admin_menusSumAggregateOutputType = {
    id: number | null
    parent_id: number | null
    sort: number | null
  }

  export type Sp_admin_menusMinAggregateOutputType = {
    id: number | null
    parent_id: number | null
    path: string | null
    name: string | null
    type_name: string | null
    component: string | null
    sort: number | null
    icon: string | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_admin_menusMaxAggregateOutputType = {
    id: number | null
    parent_id: number | null
    path: string | null
    name: string | null
    type_name: string | null
    component: string | null
    sort: number | null
    icon: string | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_admin_menusCountAggregateOutputType = {
    id: number
    parent_id: number
    path: number
    name: number
    type_name: number
    component: number
    sort: number
    icon: number
    created_at: number
    updated_at: number
    deleted_at: number
    _all: number
  }


  export type Sp_admin_menusAvgAggregateInputType = {
    id?: true
    parent_id?: true
    sort?: true
  }

  export type Sp_admin_menusSumAggregateInputType = {
    id?: true
    parent_id?: true
    sort?: true
  }

  export type Sp_admin_menusMinAggregateInputType = {
    id?: true
    parent_id?: true
    path?: true
    name?: true
    type_name?: true
    component?: true
    sort?: true
    icon?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sp_admin_menusMaxAggregateInputType = {
    id?: true
    parent_id?: true
    path?: true
    name?: true
    type_name?: true
    component?: true
    sort?: true
    icon?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sp_admin_menusCountAggregateInputType = {
    id?: true
    parent_id?: true
    path?: true
    name?: true
    type_name?: true
    component?: true
    sort?: true
    icon?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    _all?: true
  }

  export type Sp_admin_menusAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_admin_menus to aggregate.
     */
    where?: sp_admin_menusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_admin_menus to fetch.
     */
    orderBy?: sp_admin_menusOrderByWithRelationInput | sp_admin_menusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sp_admin_menusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_admin_menus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_admin_menus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sp_admin_menus
    **/
    _count?: true | Sp_admin_menusCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sp_admin_menusAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sp_admin_menusSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sp_admin_menusMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sp_admin_menusMaxAggregateInputType
  }

  export type GetSp_admin_menusAggregateType<T extends Sp_admin_menusAggregateArgs> = {
        [P in keyof T & keyof AggregateSp_admin_menus]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSp_admin_menus[P]>
      : GetScalarType<T[P], AggregateSp_admin_menus[P]>
  }




  export type sp_admin_menusGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sp_admin_menusWhereInput
    orderBy?: sp_admin_menusOrderByWithAggregationInput | sp_admin_menusOrderByWithAggregationInput[]
    by: Sp_admin_menusScalarFieldEnum[] | Sp_admin_menusScalarFieldEnum
    having?: sp_admin_menusScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sp_admin_menusCountAggregateInputType | true
    _avg?: Sp_admin_menusAvgAggregateInputType
    _sum?: Sp_admin_menusSumAggregateInputType
    _min?: Sp_admin_menusMinAggregateInputType
    _max?: Sp_admin_menusMaxAggregateInputType
  }

  export type Sp_admin_menusGroupByOutputType = {
    id: number
    parent_id: number
    path: string
    name: string
    type_name: string
    component: string
    sort: number
    icon: string
    created_at: Date
    updated_at: Date | null
    deleted_at: Date | null
    _count: Sp_admin_menusCountAggregateOutputType | null
    _avg: Sp_admin_menusAvgAggregateOutputType | null
    _sum: Sp_admin_menusSumAggregateOutputType | null
    _min: Sp_admin_menusMinAggregateOutputType | null
    _max: Sp_admin_menusMaxAggregateOutputType | null
  }

  type GetSp_admin_menusGroupByPayload<T extends sp_admin_menusGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sp_admin_menusGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sp_admin_menusGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sp_admin_menusGroupByOutputType[P]>
            : GetScalarType<T[P], Sp_admin_menusGroupByOutputType[P]>
        }
      >
    >


  export type sp_admin_menusSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    parent_id?: boolean
    path?: boolean
    name?: boolean
    type_name?: boolean
    component?: boolean
    sort?: boolean
    icon?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }, ExtArgs["result"]["sp_admin_menus"]>


  export type sp_admin_menusSelectScalar = {
    id?: boolean
    parent_id?: boolean
    path?: boolean
    name?: boolean
    type_name?: boolean
    component?: boolean
    sort?: boolean
    icon?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }


  export type $sp_admin_menusPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sp_admin_menus"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      parent_id: number
      path: string
      name: string
      type_name: string
      component: string
      sort: number
      icon: string
      created_at: Date
      updated_at: Date | null
      deleted_at: Date | null
    }, ExtArgs["result"]["sp_admin_menus"]>
    composites: {}
  }

  type sp_admin_menusGetPayload<S extends boolean | null | undefined | sp_admin_menusDefaultArgs> = $Result.GetResult<Prisma.$sp_admin_menusPayload, S>

  type sp_admin_menusCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<sp_admin_menusFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Sp_admin_menusCountAggregateInputType | true
    }

  export interface sp_admin_menusDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sp_admin_menus'], meta: { name: 'sp_admin_menus' } }
    /**
     * Find zero or one Sp_admin_menus that matches the filter.
     * @param {sp_admin_menusFindUniqueArgs} args - Arguments to find a Sp_admin_menus
     * @example
     * // Get one Sp_admin_menus
     * const sp_admin_menus = await prisma.sp_admin_menus.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sp_admin_menusFindUniqueArgs>(args: SelectSubset<T, sp_admin_menusFindUniqueArgs<ExtArgs>>): Prisma__sp_admin_menusClient<$Result.GetResult<Prisma.$sp_admin_menusPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Sp_admin_menus that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {sp_admin_menusFindUniqueOrThrowArgs} args - Arguments to find a Sp_admin_menus
     * @example
     * // Get one Sp_admin_menus
     * const sp_admin_menus = await prisma.sp_admin_menus.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sp_admin_menusFindUniqueOrThrowArgs>(args: SelectSubset<T, sp_admin_menusFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sp_admin_menusClient<$Result.GetResult<Prisma.$sp_admin_menusPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Sp_admin_menus that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_admin_menusFindFirstArgs} args - Arguments to find a Sp_admin_menus
     * @example
     * // Get one Sp_admin_menus
     * const sp_admin_menus = await prisma.sp_admin_menus.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sp_admin_menusFindFirstArgs>(args?: SelectSubset<T, sp_admin_menusFindFirstArgs<ExtArgs>>): Prisma__sp_admin_menusClient<$Result.GetResult<Prisma.$sp_admin_menusPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Sp_admin_menus that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_admin_menusFindFirstOrThrowArgs} args - Arguments to find a Sp_admin_menus
     * @example
     * // Get one Sp_admin_menus
     * const sp_admin_menus = await prisma.sp_admin_menus.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sp_admin_menusFindFirstOrThrowArgs>(args?: SelectSubset<T, sp_admin_menusFindFirstOrThrowArgs<ExtArgs>>): Prisma__sp_admin_menusClient<$Result.GetResult<Prisma.$sp_admin_menusPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Sp_admin_menus that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_admin_menusFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sp_admin_menus
     * const sp_admin_menus = await prisma.sp_admin_menus.findMany()
     * 
     * // Get first 10 Sp_admin_menus
     * const sp_admin_menus = await prisma.sp_admin_menus.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sp_admin_menusWithIdOnly = await prisma.sp_admin_menus.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sp_admin_menusFindManyArgs>(args?: SelectSubset<T, sp_admin_menusFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sp_admin_menusPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Sp_admin_menus.
     * @param {sp_admin_menusCreateArgs} args - Arguments to create a Sp_admin_menus.
     * @example
     * // Create one Sp_admin_menus
     * const Sp_admin_menus = await prisma.sp_admin_menus.create({
     *   data: {
     *     // ... data to create a Sp_admin_menus
     *   }
     * })
     * 
     */
    create<T extends sp_admin_menusCreateArgs>(args: SelectSubset<T, sp_admin_menusCreateArgs<ExtArgs>>): Prisma__sp_admin_menusClient<$Result.GetResult<Prisma.$sp_admin_menusPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Sp_admin_menus.
     * @param {sp_admin_menusCreateManyArgs} args - Arguments to create many Sp_admin_menus.
     * @example
     * // Create many Sp_admin_menus
     * const sp_admin_menus = await prisma.sp_admin_menus.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sp_admin_menusCreateManyArgs>(args?: SelectSubset<T, sp_admin_menusCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sp_admin_menus.
     * @param {sp_admin_menusDeleteArgs} args - Arguments to delete one Sp_admin_menus.
     * @example
     * // Delete one Sp_admin_menus
     * const Sp_admin_menus = await prisma.sp_admin_menus.delete({
     *   where: {
     *     // ... filter to delete one Sp_admin_menus
     *   }
     * })
     * 
     */
    delete<T extends sp_admin_menusDeleteArgs>(args: SelectSubset<T, sp_admin_menusDeleteArgs<ExtArgs>>): Prisma__sp_admin_menusClient<$Result.GetResult<Prisma.$sp_admin_menusPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Sp_admin_menus.
     * @param {sp_admin_menusUpdateArgs} args - Arguments to update one Sp_admin_menus.
     * @example
     * // Update one Sp_admin_menus
     * const sp_admin_menus = await prisma.sp_admin_menus.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sp_admin_menusUpdateArgs>(args: SelectSubset<T, sp_admin_menusUpdateArgs<ExtArgs>>): Prisma__sp_admin_menusClient<$Result.GetResult<Prisma.$sp_admin_menusPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Sp_admin_menus.
     * @param {sp_admin_menusDeleteManyArgs} args - Arguments to filter Sp_admin_menus to delete.
     * @example
     * // Delete a few Sp_admin_menus
     * const { count } = await prisma.sp_admin_menus.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sp_admin_menusDeleteManyArgs>(args?: SelectSubset<T, sp_admin_menusDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sp_admin_menus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_admin_menusUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sp_admin_menus
     * const sp_admin_menus = await prisma.sp_admin_menus.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sp_admin_menusUpdateManyArgs>(args: SelectSubset<T, sp_admin_menusUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sp_admin_menus.
     * @param {sp_admin_menusUpsertArgs} args - Arguments to update or create a Sp_admin_menus.
     * @example
     * // Update or create a Sp_admin_menus
     * const sp_admin_menus = await prisma.sp_admin_menus.upsert({
     *   create: {
     *     // ... data to create a Sp_admin_menus
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sp_admin_menus we want to update
     *   }
     * })
     */
    upsert<T extends sp_admin_menusUpsertArgs>(args: SelectSubset<T, sp_admin_menusUpsertArgs<ExtArgs>>): Prisma__sp_admin_menusClient<$Result.GetResult<Prisma.$sp_admin_menusPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Sp_admin_menus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_admin_menusCountArgs} args - Arguments to filter Sp_admin_menus to count.
     * @example
     * // Count the number of Sp_admin_menus
     * const count = await prisma.sp_admin_menus.count({
     *   where: {
     *     // ... the filter for the Sp_admin_menus we want to count
     *   }
     * })
    **/
    count<T extends sp_admin_menusCountArgs>(
      args?: Subset<T, sp_admin_menusCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sp_admin_menusCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sp_admin_menus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sp_admin_menusAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sp_admin_menusAggregateArgs>(args: Subset<T, Sp_admin_menusAggregateArgs>): Prisma.PrismaPromise<GetSp_admin_menusAggregateType<T>>

    /**
     * Group by Sp_admin_menus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_admin_menusGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sp_admin_menusGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sp_admin_menusGroupByArgs['orderBy'] }
        : { orderBy?: sp_admin_menusGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sp_admin_menusGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSp_admin_menusGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sp_admin_menus model
   */
  readonly fields: sp_admin_menusFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sp_admin_menus.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sp_admin_menusClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sp_admin_menus model
   */ 
  interface sp_admin_menusFieldRefs {
    readonly id: FieldRef<"sp_admin_menus", 'Int'>
    readonly parent_id: FieldRef<"sp_admin_menus", 'Int'>
    readonly path: FieldRef<"sp_admin_menus", 'String'>
    readonly name: FieldRef<"sp_admin_menus", 'String'>
    readonly type_name: FieldRef<"sp_admin_menus", 'String'>
    readonly component: FieldRef<"sp_admin_menus", 'String'>
    readonly sort: FieldRef<"sp_admin_menus", 'Int'>
    readonly icon: FieldRef<"sp_admin_menus", 'String'>
    readonly created_at: FieldRef<"sp_admin_menus", 'DateTime'>
    readonly updated_at: FieldRef<"sp_admin_menus", 'DateTime'>
    readonly deleted_at: FieldRef<"sp_admin_menus", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sp_admin_menus findUnique
   */
  export type sp_admin_menusFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_admin_menus
     */
    select?: sp_admin_menusSelect<ExtArgs> | null
    /**
     * Filter, which sp_admin_menus to fetch.
     */
    where: sp_admin_menusWhereUniqueInput
  }

  /**
   * sp_admin_menus findUniqueOrThrow
   */
  export type sp_admin_menusFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_admin_menus
     */
    select?: sp_admin_menusSelect<ExtArgs> | null
    /**
     * Filter, which sp_admin_menus to fetch.
     */
    where: sp_admin_menusWhereUniqueInput
  }

  /**
   * sp_admin_menus findFirst
   */
  export type sp_admin_menusFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_admin_menus
     */
    select?: sp_admin_menusSelect<ExtArgs> | null
    /**
     * Filter, which sp_admin_menus to fetch.
     */
    where?: sp_admin_menusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_admin_menus to fetch.
     */
    orderBy?: sp_admin_menusOrderByWithRelationInput | sp_admin_menusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_admin_menus.
     */
    cursor?: sp_admin_menusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_admin_menus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_admin_menus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_admin_menus.
     */
    distinct?: Sp_admin_menusScalarFieldEnum | Sp_admin_menusScalarFieldEnum[]
  }

  /**
   * sp_admin_menus findFirstOrThrow
   */
  export type sp_admin_menusFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_admin_menus
     */
    select?: sp_admin_menusSelect<ExtArgs> | null
    /**
     * Filter, which sp_admin_menus to fetch.
     */
    where?: sp_admin_menusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_admin_menus to fetch.
     */
    orderBy?: sp_admin_menusOrderByWithRelationInput | sp_admin_menusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_admin_menus.
     */
    cursor?: sp_admin_menusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_admin_menus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_admin_menus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_admin_menus.
     */
    distinct?: Sp_admin_menusScalarFieldEnum | Sp_admin_menusScalarFieldEnum[]
  }

  /**
   * sp_admin_menus findMany
   */
  export type sp_admin_menusFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_admin_menus
     */
    select?: sp_admin_menusSelect<ExtArgs> | null
    /**
     * Filter, which sp_admin_menus to fetch.
     */
    where?: sp_admin_menusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_admin_menus to fetch.
     */
    orderBy?: sp_admin_menusOrderByWithRelationInput | sp_admin_menusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sp_admin_menus.
     */
    cursor?: sp_admin_menusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_admin_menus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_admin_menus.
     */
    skip?: number
    distinct?: Sp_admin_menusScalarFieldEnum | Sp_admin_menusScalarFieldEnum[]
  }

  /**
   * sp_admin_menus create
   */
  export type sp_admin_menusCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_admin_menus
     */
    select?: sp_admin_menusSelect<ExtArgs> | null
    /**
     * The data needed to create a sp_admin_menus.
     */
    data?: XOR<sp_admin_menusCreateInput, sp_admin_menusUncheckedCreateInput>
  }

  /**
   * sp_admin_menus createMany
   */
  export type sp_admin_menusCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sp_admin_menus.
     */
    data: sp_admin_menusCreateManyInput | sp_admin_menusCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sp_admin_menus update
   */
  export type sp_admin_menusUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_admin_menus
     */
    select?: sp_admin_menusSelect<ExtArgs> | null
    /**
     * The data needed to update a sp_admin_menus.
     */
    data: XOR<sp_admin_menusUpdateInput, sp_admin_menusUncheckedUpdateInput>
    /**
     * Choose, which sp_admin_menus to update.
     */
    where: sp_admin_menusWhereUniqueInput
  }

  /**
   * sp_admin_menus updateMany
   */
  export type sp_admin_menusUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sp_admin_menus.
     */
    data: XOR<sp_admin_menusUpdateManyMutationInput, sp_admin_menusUncheckedUpdateManyInput>
    /**
     * Filter which sp_admin_menus to update
     */
    where?: sp_admin_menusWhereInput
  }

  /**
   * sp_admin_menus upsert
   */
  export type sp_admin_menusUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_admin_menus
     */
    select?: sp_admin_menusSelect<ExtArgs> | null
    /**
     * The filter to search for the sp_admin_menus to update in case it exists.
     */
    where: sp_admin_menusWhereUniqueInput
    /**
     * In case the sp_admin_menus found by the `where` argument doesn't exist, create a new sp_admin_menus with this data.
     */
    create: XOR<sp_admin_menusCreateInput, sp_admin_menusUncheckedCreateInput>
    /**
     * In case the sp_admin_menus was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sp_admin_menusUpdateInput, sp_admin_menusUncheckedUpdateInput>
  }

  /**
   * sp_admin_menus delete
   */
  export type sp_admin_menusDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_admin_menus
     */
    select?: sp_admin_menusSelect<ExtArgs> | null
    /**
     * Filter which sp_admin_menus to delete.
     */
    where: sp_admin_menusWhereUniqueInput
  }

  /**
   * sp_admin_menus deleteMany
   */
  export type sp_admin_menusDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_admin_menus to delete
     */
    where?: sp_admin_menusWhereInput
  }

  /**
   * sp_admin_menus without action
   */
  export type sp_admin_menusDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_admin_menus
     */
    select?: sp_admin_menusSelect<ExtArgs> | null
  }


  /**
   * Model sp_admin_roles
   */

  export type AggregateSp_admin_roles = {
    _count: Sp_admin_rolesCountAggregateOutputType | null
    _avg: Sp_admin_rolesAvgAggregateOutputType | null
    _sum: Sp_admin_rolesSumAggregateOutputType | null
    _min: Sp_admin_rolesMinAggregateOutputType | null
    _max: Sp_admin_rolesMaxAggregateOutputType | null
  }

  export type Sp_admin_rolesAvgAggregateOutputType = {
    id: number | null
  }

  export type Sp_admin_rolesSumAggregateOutputType = {
    id: number | null
  }

  export type Sp_admin_rolesMinAggregateOutputType = {
    id: number | null
    name: string | null
    status: boolean | null
    desc: string | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_admin_rolesMaxAggregateOutputType = {
    id: number | null
    name: string | null
    status: boolean | null
    desc: string | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_admin_rolesCountAggregateOutputType = {
    id: number
    name: number
    status: number
    desc: number
    rules: number
    created_at: number
    updated_at: number
    deleted_at: number
    _all: number
  }


  export type Sp_admin_rolesAvgAggregateInputType = {
    id?: true
  }

  export type Sp_admin_rolesSumAggregateInputType = {
    id?: true
  }

  export type Sp_admin_rolesMinAggregateInputType = {
    id?: true
    name?: true
    status?: true
    desc?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sp_admin_rolesMaxAggregateInputType = {
    id?: true
    name?: true
    status?: true
    desc?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sp_admin_rolesCountAggregateInputType = {
    id?: true
    name?: true
    status?: true
    desc?: true
    rules?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    _all?: true
  }

  export type Sp_admin_rolesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_admin_roles to aggregate.
     */
    where?: sp_admin_rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_admin_roles to fetch.
     */
    orderBy?: sp_admin_rolesOrderByWithRelationInput | sp_admin_rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sp_admin_rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_admin_roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_admin_roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sp_admin_roles
    **/
    _count?: true | Sp_admin_rolesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sp_admin_rolesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sp_admin_rolesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sp_admin_rolesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sp_admin_rolesMaxAggregateInputType
  }

  export type GetSp_admin_rolesAggregateType<T extends Sp_admin_rolesAggregateArgs> = {
        [P in keyof T & keyof AggregateSp_admin_roles]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSp_admin_roles[P]>
      : GetScalarType<T[P], AggregateSp_admin_roles[P]>
  }




  export type sp_admin_rolesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sp_admin_rolesWhereInput
    orderBy?: sp_admin_rolesOrderByWithAggregationInput | sp_admin_rolesOrderByWithAggregationInput[]
    by: Sp_admin_rolesScalarFieldEnum[] | Sp_admin_rolesScalarFieldEnum
    having?: sp_admin_rolesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sp_admin_rolesCountAggregateInputType | true
    _avg?: Sp_admin_rolesAvgAggregateInputType
    _sum?: Sp_admin_rolesSumAggregateInputType
    _min?: Sp_admin_rolesMinAggregateInputType
    _max?: Sp_admin_rolesMaxAggregateInputType
  }

  export type Sp_admin_rolesGroupByOutputType = {
    id: number
    name: string
    status: boolean | null
    desc: string
    rules: JsonValue | null
    created_at: Date
    updated_at: Date | null
    deleted_at: Date | null
    _count: Sp_admin_rolesCountAggregateOutputType | null
    _avg: Sp_admin_rolesAvgAggregateOutputType | null
    _sum: Sp_admin_rolesSumAggregateOutputType | null
    _min: Sp_admin_rolesMinAggregateOutputType | null
    _max: Sp_admin_rolesMaxAggregateOutputType | null
  }

  type GetSp_admin_rolesGroupByPayload<T extends sp_admin_rolesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sp_admin_rolesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sp_admin_rolesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sp_admin_rolesGroupByOutputType[P]>
            : GetScalarType<T[P], Sp_admin_rolesGroupByOutputType[P]>
        }
      >
    >


  export type sp_admin_rolesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    status?: boolean
    desc?: boolean
    rules?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }, ExtArgs["result"]["sp_admin_roles"]>


  export type sp_admin_rolesSelectScalar = {
    id?: boolean
    name?: boolean
    status?: boolean
    desc?: boolean
    rules?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }


  export type $sp_admin_rolesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sp_admin_roles"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      status: boolean | null
      desc: string
      rules: Prisma.JsonValue | null
      created_at: Date
      updated_at: Date | null
      deleted_at: Date | null
    }, ExtArgs["result"]["sp_admin_roles"]>
    composites: {}
  }

  type sp_admin_rolesGetPayload<S extends boolean | null | undefined | sp_admin_rolesDefaultArgs> = $Result.GetResult<Prisma.$sp_admin_rolesPayload, S>

  type sp_admin_rolesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<sp_admin_rolesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Sp_admin_rolesCountAggregateInputType | true
    }

  export interface sp_admin_rolesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sp_admin_roles'], meta: { name: 'sp_admin_roles' } }
    /**
     * Find zero or one Sp_admin_roles that matches the filter.
     * @param {sp_admin_rolesFindUniqueArgs} args - Arguments to find a Sp_admin_roles
     * @example
     * // Get one Sp_admin_roles
     * const sp_admin_roles = await prisma.sp_admin_roles.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sp_admin_rolesFindUniqueArgs>(args: SelectSubset<T, sp_admin_rolesFindUniqueArgs<ExtArgs>>): Prisma__sp_admin_rolesClient<$Result.GetResult<Prisma.$sp_admin_rolesPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Sp_admin_roles that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {sp_admin_rolesFindUniqueOrThrowArgs} args - Arguments to find a Sp_admin_roles
     * @example
     * // Get one Sp_admin_roles
     * const sp_admin_roles = await prisma.sp_admin_roles.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sp_admin_rolesFindUniqueOrThrowArgs>(args: SelectSubset<T, sp_admin_rolesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sp_admin_rolesClient<$Result.GetResult<Prisma.$sp_admin_rolesPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Sp_admin_roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_admin_rolesFindFirstArgs} args - Arguments to find a Sp_admin_roles
     * @example
     * // Get one Sp_admin_roles
     * const sp_admin_roles = await prisma.sp_admin_roles.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sp_admin_rolesFindFirstArgs>(args?: SelectSubset<T, sp_admin_rolesFindFirstArgs<ExtArgs>>): Prisma__sp_admin_rolesClient<$Result.GetResult<Prisma.$sp_admin_rolesPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Sp_admin_roles that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_admin_rolesFindFirstOrThrowArgs} args - Arguments to find a Sp_admin_roles
     * @example
     * // Get one Sp_admin_roles
     * const sp_admin_roles = await prisma.sp_admin_roles.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sp_admin_rolesFindFirstOrThrowArgs>(args?: SelectSubset<T, sp_admin_rolesFindFirstOrThrowArgs<ExtArgs>>): Prisma__sp_admin_rolesClient<$Result.GetResult<Prisma.$sp_admin_rolesPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Sp_admin_roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_admin_rolesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sp_admin_roles
     * const sp_admin_roles = await prisma.sp_admin_roles.findMany()
     * 
     * // Get first 10 Sp_admin_roles
     * const sp_admin_roles = await prisma.sp_admin_roles.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sp_admin_rolesWithIdOnly = await prisma.sp_admin_roles.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sp_admin_rolesFindManyArgs>(args?: SelectSubset<T, sp_admin_rolesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sp_admin_rolesPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Sp_admin_roles.
     * @param {sp_admin_rolesCreateArgs} args - Arguments to create a Sp_admin_roles.
     * @example
     * // Create one Sp_admin_roles
     * const Sp_admin_roles = await prisma.sp_admin_roles.create({
     *   data: {
     *     // ... data to create a Sp_admin_roles
     *   }
     * })
     * 
     */
    create<T extends sp_admin_rolesCreateArgs>(args: SelectSubset<T, sp_admin_rolesCreateArgs<ExtArgs>>): Prisma__sp_admin_rolesClient<$Result.GetResult<Prisma.$sp_admin_rolesPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Sp_admin_roles.
     * @param {sp_admin_rolesCreateManyArgs} args - Arguments to create many Sp_admin_roles.
     * @example
     * // Create many Sp_admin_roles
     * const sp_admin_roles = await prisma.sp_admin_roles.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sp_admin_rolesCreateManyArgs>(args?: SelectSubset<T, sp_admin_rolesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sp_admin_roles.
     * @param {sp_admin_rolesDeleteArgs} args - Arguments to delete one Sp_admin_roles.
     * @example
     * // Delete one Sp_admin_roles
     * const Sp_admin_roles = await prisma.sp_admin_roles.delete({
     *   where: {
     *     // ... filter to delete one Sp_admin_roles
     *   }
     * })
     * 
     */
    delete<T extends sp_admin_rolesDeleteArgs>(args: SelectSubset<T, sp_admin_rolesDeleteArgs<ExtArgs>>): Prisma__sp_admin_rolesClient<$Result.GetResult<Prisma.$sp_admin_rolesPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Sp_admin_roles.
     * @param {sp_admin_rolesUpdateArgs} args - Arguments to update one Sp_admin_roles.
     * @example
     * // Update one Sp_admin_roles
     * const sp_admin_roles = await prisma.sp_admin_roles.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sp_admin_rolesUpdateArgs>(args: SelectSubset<T, sp_admin_rolesUpdateArgs<ExtArgs>>): Prisma__sp_admin_rolesClient<$Result.GetResult<Prisma.$sp_admin_rolesPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Sp_admin_roles.
     * @param {sp_admin_rolesDeleteManyArgs} args - Arguments to filter Sp_admin_roles to delete.
     * @example
     * // Delete a few Sp_admin_roles
     * const { count } = await prisma.sp_admin_roles.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sp_admin_rolesDeleteManyArgs>(args?: SelectSubset<T, sp_admin_rolesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sp_admin_roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_admin_rolesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sp_admin_roles
     * const sp_admin_roles = await prisma.sp_admin_roles.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sp_admin_rolesUpdateManyArgs>(args: SelectSubset<T, sp_admin_rolesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sp_admin_roles.
     * @param {sp_admin_rolesUpsertArgs} args - Arguments to update or create a Sp_admin_roles.
     * @example
     * // Update or create a Sp_admin_roles
     * const sp_admin_roles = await prisma.sp_admin_roles.upsert({
     *   create: {
     *     // ... data to create a Sp_admin_roles
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sp_admin_roles we want to update
     *   }
     * })
     */
    upsert<T extends sp_admin_rolesUpsertArgs>(args: SelectSubset<T, sp_admin_rolesUpsertArgs<ExtArgs>>): Prisma__sp_admin_rolesClient<$Result.GetResult<Prisma.$sp_admin_rolesPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Sp_admin_roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_admin_rolesCountArgs} args - Arguments to filter Sp_admin_roles to count.
     * @example
     * // Count the number of Sp_admin_roles
     * const count = await prisma.sp_admin_roles.count({
     *   where: {
     *     // ... the filter for the Sp_admin_roles we want to count
     *   }
     * })
    **/
    count<T extends sp_admin_rolesCountArgs>(
      args?: Subset<T, sp_admin_rolesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sp_admin_rolesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sp_admin_roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sp_admin_rolesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sp_admin_rolesAggregateArgs>(args: Subset<T, Sp_admin_rolesAggregateArgs>): Prisma.PrismaPromise<GetSp_admin_rolesAggregateType<T>>

    /**
     * Group by Sp_admin_roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_admin_rolesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sp_admin_rolesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sp_admin_rolesGroupByArgs['orderBy'] }
        : { orderBy?: sp_admin_rolesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sp_admin_rolesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSp_admin_rolesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sp_admin_roles model
   */
  readonly fields: sp_admin_rolesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sp_admin_roles.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sp_admin_rolesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sp_admin_roles model
   */ 
  interface sp_admin_rolesFieldRefs {
    readonly id: FieldRef<"sp_admin_roles", 'Int'>
    readonly name: FieldRef<"sp_admin_roles", 'String'>
    readonly status: FieldRef<"sp_admin_roles", 'Boolean'>
    readonly desc: FieldRef<"sp_admin_roles", 'String'>
    readonly rules: FieldRef<"sp_admin_roles", 'Json'>
    readonly created_at: FieldRef<"sp_admin_roles", 'DateTime'>
    readonly updated_at: FieldRef<"sp_admin_roles", 'DateTime'>
    readonly deleted_at: FieldRef<"sp_admin_roles", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sp_admin_roles findUnique
   */
  export type sp_admin_rolesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_admin_roles
     */
    select?: sp_admin_rolesSelect<ExtArgs> | null
    /**
     * Filter, which sp_admin_roles to fetch.
     */
    where: sp_admin_rolesWhereUniqueInput
  }

  /**
   * sp_admin_roles findUniqueOrThrow
   */
  export type sp_admin_rolesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_admin_roles
     */
    select?: sp_admin_rolesSelect<ExtArgs> | null
    /**
     * Filter, which sp_admin_roles to fetch.
     */
    where: sp_admin_rolesWhereUniqueInput
  }

  /**
   * sp_admin_roles findFirst
   */
  export type sp_admin_rolesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_admin_roles
     */
    select?: sp_admin_rolesSelect<ExtArgs> | null
    /**
     * Filter, which sp_admin_roles to fetch.
     */
    where?: sp_admin_rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_admin_roles to fetch.
     */
    orderBy?: sp_admin_rolesOrderByWithRelationInput | sp_admin_rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_admin_roles.
     */
    cursor?: sp_admin_rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_admin_roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_admin_roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_admin_roles.
     */
    distinct?: Sp_admin_rolesScalarFieldEnum | Sp_admin_rolesScalarFieldEnum[]
  }

  /**
   * sp_admin_roles findFirstOrThrow
   */
  export type sp_admin_rolesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_admin_roles
     */
    select?: sp_admin_rolesSelect<ExtArgs> | null
    /**
     * Filter, which sp_admin_roles to fetch.
     */
    where?: sp_admin_rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_admin_roles to fetch.
     */
    orderBy?: sp_admin_rolesOrderByWithRelationInput | sp_admin_rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_admin_roles.
     */
    cursor?: sp_admin_rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_admin_roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_admin_roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_admin_roles.
     */
    distinct?: Sp_admin_rolesScalarFieldEnum | Sp_admin_rolesScalarFieldEnum[]
  }

  /**
   * sp_admin_roles findMany
   */
  export type sp_admin_rolesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_admin_roles
     */
    select?: sp_admin_rolesSelect<ExtArgs> | null
    /**
     * Filter, which sp_admin_roles to fetch.
     */
    where?: sp_admin_rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_admin_roles to fetch.
     */
    orderBy?: sp_admin_rolesOrderByWithRelationInput | sp_admin_rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sp_admin_roles.
     */
    cursor?: sp_admin_rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_admin_roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_admin_roles.
     */
    skip?: number
    distinct?: Sp_admin_rolesScalarFieldEnum | Sp_admin_rolesScalarFieldEnum[]
  }

  /**
   * sp_admin_roles create
   */
  export type sp_admin_rolesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_admin_roles
     */
    select?: sp_admin_rolesSelect<ExtArgs> | null
    /**
     * The data needed to create a sp_admin_roles.
     */
    data?: XOR<sp_admin_rolesCreateInput, sp_admin_rolesUncheckedCreateInput>
  }

  /**
   * sp_admin_roles createMany
   */
  export type sp_admin_rolesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sp_admin_roles.
     */
    data: sp_admin_rolesCreateManyInput | sp_admin_rolesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sp_admin_roles update
   */
  export type sp_admin_rolesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_admin_roles
     */
    select?: sp_admin_rolesSelect<ExtArgs> | null
    /**
     * The data needed to update a sp_admin_roles.
     */
    data: XOR<sp_admin_rolesUpdateInput, sp_admin_rolesUncheckedUpdateInput>
    /**
     * Choose, which sp_admin_roles to update.
     */
    where: sp_admin_rolesWhereUniqueInput
  }

  /**
   * sp_admin_roles updateMany
   */
  export type sp_admin_rolesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sp_admin_roles.
     */
    data: XOR<sp_admin_rolesUpdateManyMutationInput, sp_admin_rolesUncheckedUpdateManyInput>
    /**
     * Filter which sp_admin_roles to update
     */
    where?: sp_admin_rolesWhereInput
  }

  /**
   * sp_admin_roles upsert
   */
  export type sp_admin_rolesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_admin_roles
     */
    select?: sp_admin_rolesSelect<ExtArgs> | null
    /**
     * The filter to search for the sp_admin_roles to update in case it exists.
     */
    where: sp_admin_rolesWhereUniqueInput
    /**
     * In case the sp_admin_roles found by the `where` argument doesn't exist, create a new sp_admin_roles with this data.
     */
    create: XOR<sp_admin_rolesCreateInput, sp_admin_rolesUncheckedCreateInput>
    /**
     * In case the sp_admin_roles was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sp_admin_rolesUpdateInput, sp_admin_rolesUncheckedUpdateInput>
  }

  /**
   * sp_admin_roles delete
   */
  export type sp_admin_rolesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_admin_roles
     */
    select?: sp_admin_rolesSelect<ExtArgs> | null
    /**
     * Filter which sp_admin_roles to delete.
     */
    where: sp_admin_rolesWhereUniqueInput
  }

  /**
   * sp_admin_roles deleteMany
   */
  export type sp_admin_rolesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_admin_roles to delete
     */
    where?: sp_admin_rolesWhereInput
  }

  /**
   * sp_admin_roles without action
   */
  export type sp_admin_rolesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_admin_roles
     */
    select?: sp_admin_rolesSelect<ExtArgs> | null
  }


  /**
   * Model sp_admin_tokens
   */

  export type AggregateSp_admin_tokens = {
    _count: Sp_admin_tokensCountAggregateOutputType | null
    _avg: Sp_admin_tokensAvgAggregateOutputType | null
    _sum: Sp_admin_tokensSumAggregateOutputType | null
    _min: Sp_admin_tokensMinAggregateOutputType | null
    _max: Sp_admin_tokensMaxAggregateOutputType | null
  }

  export type Sp_admin_tokensAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
  }

  export type Sp_admin_tokensSumAggregateOutputType = {
    id: bigint | null
    user_id: number | null
  }

  export type Sp_admin_tokensMinAggregateOutputType = {
    id: bigint | null
    user_id: number | null
    token: string | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_admin_tokensMaxAggregateOutputType = {
    id: bigint | null
    user_id: number | null
    token: string | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_admin_tokensCountAggregateOutputType = {
    id: number
    user_id: number
    token: number
    created_at: number
    updated_at: number
    deleted_at: number
    _all: number
  }


  export type Sp_admin_tokensAvgAggregateInputType = {
    id?: true
    user_id?: true
  }

  export type Sp_admin_tokensSumAggregateInputType = {
    id?: true
    user_id?: true
  }

  export type Sp_admin_tokensMinAggregateInputType = {
    id?: true
    user_id?: true
    token?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sp_admin_tokensMaxAggregateInputType = {
    id?: true
    user_id?: true
    token?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sp_admin_tokensCountAggregateInputType = {
    id?: true
    user_id?: true
    token?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    _all?: true
  }

  export type Sp_admin_tokensAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_admin_tokens to aggregate.
     */
    where?: sp_admin_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_admin_tokens to fetch.
     */
    orderBy?: sp_admin_tokensOrderByWithRelationInput | sp_admin_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sp_admin_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_admin_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_admin_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sp_admin_tokens
    **/
    _count?: true | Sp_admin_tokensCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sp_admin_tokensAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sp_admin_tokensSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sp_admin_tokensMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sp_admin_tokensMaxAggregateInputType
  }

  export type GetSp_admin_tokensAggregateType<T extends Sp_admin_tokensAggregateArgs> = {
        [P in keyof T & keyof AggregateSp_admin_tokens]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSp_admin_tokens[P]>
      : GetScalarType<T[P], AggregateSp_admin_tokens[P]>
  }




  export type sp_admin_tokensGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sp_admin_tokensWhereInput
    orderBy?: sp_admin_tokensOrderByWithAggregationInput | sp_admin_tokensOrderByWithAggregationInput[]
    by: Sp_admin_tokensScalarFieldEnum[] | Sp_admin_tokensScalarFieldEnum
    having?: sp_admin_tokensScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sp_admin_tokensCountAggregateInputType | true
    _avg?: Sp_admin_tokensAvgAggregateInputType
    _sum?: Sp_admin_tokensSumAggregateInputType
    _min?: Sp_admin_tokensMinAggregateInputType
    _max?: Sp_admin_tokensMaxAggregateInputType
  }

  export type Sp_admin_tokensGroupByOutputType = {
    id: bigint
    user_id: number
    token: string | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
    _count: Sp_admin_tokensCountAggregateOutputType | null
    _avg: Sp_admin_tokensAvgAggregateOutputType | null
    _sum: Sp_admin_tokensSumAggregateOutputType | null
    _min: Sp_admin_tokensMinAggregateOutputType | null
    _max: Sp_admin_tokensMaxAggregateOutputType | null
  }

  type GetSp_admin_tokensGroupByPayload<T extends sp_admin_tokensGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sp_admin_tokensGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sp_admin_tokensGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sp_admin_tokensGroupByOutputType[P]>
            : GetScalarType<T[P], Sp_admin_tokensGroupByOutputType[P]>
        }
      >
    >


  export type sp_admin_tokensSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    token?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }, ExtArgs["result"]["sp_admin_tokens"]>


  export type sp_admin_tokensSelectScalar = {
    id?: boolean
    user_id?: boolean
    token?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }


  export type $sp_admin_tokensPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sp_admin_tokens"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      user_id: number
      token: string | null
      created_at: Date | null
      updated_at: Date | null
      deleted_at: Date | null
    }, ExtArgs["result"]["sp_admin_tokens"]>
    composites: {}
  }

  type sp_admin_tokensGetPayload<S extends boolean | null | undefined | sp_admin_tokensDefaultArgs> = $Result.GetResult<Prisma.$sp_admin_tokensPayload, S>

  type sp_admin_tokensCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<sp_admin_tokensFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Sp_admin_tokensCountAggregateInputType | true
    }

  export interface sp_admin_tokensDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sp_admin_tokens'], meta: { name: 'sp_admin_tokens' } }
    /**
     * Find zero or one Sp_admin_tokens that matches the filter.
     * @param {sp_admin_tokensFindUniqueArgs} args - Arguments to find a Sp_admin_tokens
     * @example
     * // Get one Sp_admin_tokens
     * const sp_admin_tokens = await prisma.sp_admin_tokens.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sp_admin_tokensFindUniqueArgs>(args: SelectSubset<T, sp_admin_tokensFindUniqueArgs<ExtArgs>>): Prisma__sp_admin_tokensClient<$Result.GetResult<Prisma.$sp_admin_tokensPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Sp_admin_tokens that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {sp_admin_tokensFindUniqueOrThrowArgs} args - Arguments to find a Sp_admin_tokens
     * @example
     * // Get one Sp_admin_tokens
     * const sp_admin_tokens = await prisma.sp_admin_tokens.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sp_admin_tokensFindUniqueOrThrowArgs>(args: SelectSubset<T, sp_admin_tokensFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sp_admin_tokensClient<$Result.GetResult<Prisma.$sp_admin_tokensPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Sp_admin_tokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_admin_tokensFindFirstArgs} args - Arguments to find a Sp_admin_tokens
     * @example
     * // Get one Sp_admin_tokens
     * const sp_admin_tokens = await prisma.sp_admin_tokens.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sp_admin_tokensFindFirstArgs>(args?: SelectSubset<T, sp_admin_tokensFindFirstArgs<ExtArgs>>): Prisma__sp_admin_tokensClient<$Result.GetResult<Prisma.$sp_admin_tokensPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Sp_admin_tokens that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_admin_tokensFindFirstOrThrowArgs} args - Arguments to find a Sp_admin_tokens
     * @example
     * // Get one Sp_admin_tokens
     * const sp_admin_tokens = await prisma.sp_admin_tokens.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sp_admin_tokensFindFirstOrThrowArgs>(args?: SelectSubset<T, sp_admin_tokensFindFirstOrThrowArgs<ExtArgs>>): Prisma__sp_admin_tokensClient<$Result.GetResult<Prisma.$sp_admin_tokensPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Sp_admin_tokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_admin_tokensFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sp_admin_tokens
     * const sp_admin_tokens = await prisma.sp_admin_tokens.findMany()
     * 
     * // Get first 10 Sp_admin_tokens
     * const sp_admin_tokens = await prisma.sp_admin_tokens.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sp_admin_tokensWithIdOnly = await prisma.sp_admin_tokens.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sp_admin_tokensFindManyArgs>(args?: SelectSubset<T, sp_admin_tokensFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sp_admin_tokensPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Sp_admin_tokens.
     * @param {sp_admin_tokensCreateArgs} args - Arguments to create a Sp_admin_tokens.
     * @example
     * // Create one Sp_admin_tokens
     * const Sp_admin_tokens = await prisma.sp_admin_tokens.create({
     *   data: {
     *     // ... data to create a Sp_admin_tokens
     *   }
     * })
     * 
     */
    create<T extends sp_admin_tokensCreateArgs>(args: SelectSubset<T, sp_admin_tokensCreateArgs<ExtArgs>>): Prisma__sp_admin_tokensClient<$Result.GetResult<Prisma.$sp_admin_tokensPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Sp_admin_tokens.
     * @param {sp_admin_tokensCreateManyArgs} args - Arguments to create many Sp_admin_tokens.
     * @example
     * // Create many Sp_admin_tokens
     * const sp_admin_tokens = await prisma.sp_admin_tokens.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sp_admin_tokensCreateManyArgs>(args?: SelectSubset<T, sp_admin_tokensCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sp_admin_tokens.
     * @param {sp_admin_tokensDeleteArgs} args - Arguments to delete one Sp_admin_tokens.
     * @example
     * // Delete one Sp_admin_tokens
     * const Sp_admin_tokens = await prisma.sp_admin_tokens.delete({
     *   where: {
     *     // ... filter to delete one Sp_admin_tokens
     *   }
     * })
     * 
     */
    delete<T extends sp_admin_tokensDeleteArgs>(args: SelectSubset<T, sp_admin_tokensDeleteArgs<ExtArgs>>): Prisma__sp_admin_tokensClient<$Result.GetResult<Prisma.$sp_admin_tokensPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Sp_admin_tokens.
     * @param {sp_admin_tokensUpdateArgs} args - Arguments to update one Sp_admin_tokens.
     * @example
     * // Update one Sp_admin_tokens
     * const sp_admin_tokens = await prisma.sp_admin_tokens.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sp_admin_tokensUpdateArgs>(args: SelectSubset<T, sp_admin_tokensUpdateArgs<ExtArgs>>): Prisma__sp_admin_tokensClient<$Result.GetResult<Prisma.$sp_admin_tokensPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Sp_admin_tokens.
     * @param {sp_admin_tokensDeleteManyArgs} args - Arguments to filter Sp_admin_tokens to delete.
     * @example
     * // Delete a few Sp_admin_tokens
     * const { count } = await prisma.sp_admin_tokens.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sp_admin_tokensDeleteManyArgs>(args?: SelectSubset<T, sp_admin_tokensDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sp_admin_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_admin_tokensUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sp_admin_tokens
     * const sp_admin_tokens = await prisma.sp_admin_tokens.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sp_admin_tokensUpdateManyArgs>(args: SelectSubset<T, sp_admin_tokensUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sp_admin_tokens.
     * @param {sp_admin_tokensUpsertArgs} args - Arguments to update or create a Sp_admin_tokens.
     * @example
     * // Update or create a Sp_admin_tokens
     * const sp_admin_tokens = await prisma.sp_admin_tokens.upsert({
     *   create: {
     *     // ... data to create a Sp_admin_tokens
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sp_admin_tokens we want to update
     *   }
     * })
     */
    upsert<T extends sp_admin_tokensUpsertArgs>(args: SelectSubset<T, sp_admin_tokensUpsertArgs<ExtArgs>>): Prisma__sp_admin_tokensClient<$Result.GetResult<Prisma.$sp_admin_tokensPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Sp_admin_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_admin_tokensCountArgs} args - Arguments to filter Sp_admin_tokens to count.
     * @example
     * // Count the number of Sp_admin_tokens
     * const count = await prisma.sp_admin_tokens.count({
     *   where: {
     *     // ... the filter for the Sp_admin_tokens we want to count
     *   }
     * })
    **/
    count<T extends sp_admin_tokensCountArgs>(
      args?: Subset<T, sp_admin_tokensCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sp_admin_tokensCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sp_admin_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sp_admin_tokensAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sp_admin_tokensAggregateArgs>(args: Subset<T, Sp_admin_tokensAggregateArgs>): Prisma.PrismaPromise<GetSp_admin_tokensAggregateType<T>>

    /**
     * Group by Sp_admin_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_admin_tokensGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sp_admin_tokensGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sp_admin_tokensGroupByArgs['orderBy'] }
        : { orderBy?: sp_admin_tokensGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sp_admin_tokensGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSp_admin_tokensGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sp_admin_tokens model
   */
  readonly fields: sp_admin_tokensFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sp_admin_tokens.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sp_admin_tokensClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sp_admin_tokens model
   */ 
  interface sp_admin_tokensFieldRefs {
    readonly id: FieldRef<"sp_admin_tokens", 'BigInt'>
    readonly user_id: FieldRef<"sp_admin_tokens", 'Int'>
    readonly token: FieldRef<"sp_admin_tokens", 'String'>
    readonly created_at: FieldRef<"sp_admin_tokens", 'DateTime'>
    readonly updated_at: FieldRef<"sp_admin_tokens", 'DateTime'>
    readonly deleted_at: FieldRef<"sp_admin_tokens", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sp_admin_tokens findUnique
   */
  export type sp_admin_tokensFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_admin_tokens
     */
    select?: sp_admin_tokensSelect<ExtArgs> | null
    /**
     * Filter, which sp_admin_tokens to fetch.
     */
    where: sp_admin_tokensWhereUniqueInput
  }

  /**
   * sp_admin_tokens findUniqueOrThrow
   */
  export type sp_admin_tokensFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_admin_tokens
     */
    select?: sp_admin_tokensSelect<ExtArgs> | null
    /**
     * Filter, which sp_admin_tokens to fetch.
     */
    where: sp_admin_tokensWhereUniqueInput
  }

  /**
   * sp_admin_tokens findFirst
   */
  export type sp_admin_tokensFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_admin_tokens
     */
    select?: sp_admin_tokensSelect<ExtArgs> | null
    /**
     * Filter, which sp_admin_tokens to fetch.
     */
    where?: sp_admin_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_admin_tokens to fetch.
     */
    orderBy?: sp_admin_tokensOrderByWithRelationInput | sp_admin_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_admin_tokens.
     */
    cursor?: sp_admin_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_admin_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_admin_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_admin_tokens.
     */
    distinct?: Sp_admin_tokensScalarFieldEnum | Sp_admin_tokensScalarFieldEnum[]
  }

  /**
   * sp_admin_tokens findFirstOrThrow
   */
  export type sp_admin_tokensFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_admin_tokens
     */
    select?: sp_admin_tokensSelect<ExtArgs> | null
    /**
     * Filter, which sp_admin_tokens to fetch.
     */
    where?: sp_admin_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_admin_tokens to fetch.
     */
    orderBy?: sp_admin_tokensOrderByWithRelationInput | sp_admin_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_admin_tokens.
     */
    cursor?: sp_admin_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_admin_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_admin_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_admin_tokens.
     */
    distinct?: Sp_admin_tokensScalarFieldEnum | Sp_admin_tokensScalarFieldEnum[]
  }

  /**
   * sp_admin_tokens findMany
   */
  export type sp_admin_tokensFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_admin_tokens
     */
    select?: sp_admin_tokensSelect<ExtArgs> | null
    /**
     * Filter, which sp_admin_tokens to fetch.
     */
    where?: sp_admin_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_admin_tokens to fetch.
     */
    orderBy?: sp_admin_tokensOrderByWithRelationInput | sp_admin_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sp_admin_tokens.
     */
    cursor?: sp_admin_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_admin_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_admin_tokens.
     */
    skip?: number
    distinct?: Sp_admin_tokensScalarFieldEnum | Sp_admin_tokensScalarFieldEnum[]
  }

  /**
   * sp_admin_tokens create
   */
  export type sp_admin_tokensCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_admin_tokens
     */
    select?: sp_admin_tokensSelect<ExtArgs> | null
    /**
     * The data needed to create a sp_admin_tokens.
     */
    data: XOR<sp_admin_tokensCreateInput, sp_admin_tokensUncheckedCreateInput>
  }

  /**
   * sp_admin_tokens createMany
   */
  export type sp_admin_tokensCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sp_admin_tokens.
     */
    data: sp_admin_tokensCreateManyInput | sp_admin_tokensCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sp_admin_tokens update
   */
  export type sp_admin_tokensUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_admin_tokens
     */
    select?: sp_admin_tokensSelect<ExtArgs> | null
    /**
     * The data needed to update a sp_admin_tokens.
     */
    data: XOR<sp_admin_tokensUpdateInput, sp_admin_tokensUncheckedUpdateInput>
    /**
     * Choose, which sp_admin_tokens to update.
     */
    where: sp_admin_tokensWhereUniqueInput
  }

  /**
   * sp_admin_tokens updateMany
   */
  export type sp_admin_tokensUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sp_admin_tokens.
     */
    data: XOR<sp_admin_tokensUpdateManyMutationInput, sp_admin_tokensUncheckedUpdateManyInput>
    /**
     * Filter which sp_admin_tokens to update
     */
    where?: sp_admin_tokensWhereInput
  }

  /**
   * sp_admin_tokens upsert
   */
  export type sp_admin_tokensUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_admin_tokens
     */
    select?: sp_admin_tokensSelect<ExtArgs> | null
    /**
     * The filter to search for the sp_admin_tokens to update in case it exists.
     */
    where: sp_admin_tokensWhereUniqueInput
    /**
     * In case the sp_admin_tokens found by the `where` argument doesn't exist, create a new sp_admin_tokens with this data.
     */
    create: XOR<sp_admin_tokensCreateInput, sp_admin_tokensUncheckedCreateInput>
    /**
     * In case the sp_admin_tokens was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sp_admin_tokensUpdateInput, sp_admin_tokensUncheckedUpdateInput>
  }

  /**
   * sp_admin_tokens delete
   */
  export type sp_admin_tokensDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_admin_tokens
     */
    select?: sp_admin_tokensSelect<ExtArgs> | null
    /**
     * Filter which sp_admin_tokens to delete.
     */
    where: sp_admin_tokensWhereUniqueInput
  }

  /**
   * sp_admin_tokens deleteMany
   */
  export type sp_admin_tokensDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_admin_tokens to delete
     */
    where?: sp_admin_tokensWhereInput
  }

  /**
   * sp_admin_tokens without action
   */
  export type sp_admin_tokensDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_admin_tokens
     */
    select?: sp_admin_tokensSelect<ExtArgs> | null
  }


  /**
   * Model sp_admins
   */

  export type AggregateSp_admins = {
    _count: Sp_adminsCountAggregateOutputType | null
    _avg: Sp_adminsAvgAggregateOutputType | null
    _sum: Sp_adminsSumAggregateOutputType | null
    _min: Sp_adminsMinAggregateOutputType | null
    _max: Sp_adminsMaxAggregateOutputType | null
  }

  export type Sp_adminsAvgAggregateOutputType = {
    id: number | null
    password_modify: number | null
  }

  export type Sp_adminsSumAggregateOutputType = {
    id: number | null
    password_modify: number | null
  }

  export type Sp_adminsMinAggregateOutputType = {
    id: number | null
    username: string | null
    password: string | null
    password_modify: number | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
    status: boolean | null
  }

  export type Sp_adminsMaxAggregateOutputType = {
    id: number | null
    username: string | null
    password: string | null
    password_modify: number | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
    status: boolean | null
  }

  export type Sp_adminsCountAggregateOutputType = {
    id: number
    username: number
    password: number
    password_modify: number
    roles: number
    created_at: number
    updated_at: number
    deleted_at: number
    status: number
    _all: number
  }


  export type Sp_adminsAvgAggregateInputType = {
    id?: true
    password_modify?: true
  }

  export type Sp_adminsSumAggregateInputType = {
    id?: true
    password_modify?: true
  }

  export type Sp_adminsMinAggregateInputType = {
    id?: true
    username?: true
    password?: true
    password_modify?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    status?: true
  }

  export type Sp_adminsMaxAggregateInputType = {
    id?: true
    username?: true
    password?: true
    password_modify?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    status?: true
  }

  export type Sp_adminsCountAggregateInputType = {
    id?: true
    username?: true
    password?: true
    password_modify?: true
    roles?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    status?: true
    _all?: true
  }

  export type Sp_adminsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_admins to aggregate.
     */
    where?: sp_adminsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_admins to fetch.
     */
    orderBy?: sp_adminsOrderByWithRelationInput | sp_adminsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sp_adminsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_admins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sp_admins
    **/
    _count?: true | Sp_adminsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sp_adminsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sp_adminsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sp_adminsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sp_adminsMaxAggregateInputType
  }

  export type GetSp_adminsAggregateType<T extends Sp_adminsAggregateArgs> = {
        [P in keyof T & keyof AggregateSp_admins]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSp_admins[P]>
      : GetScalarType<T[P], AggregateSp_admins[P]>
  }




  export type sp_adminsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sp_adminsWhereInput
    orderBy?: sp_adminsOrderByWithAggregationInput | sp_adminsOrderByWithAggregationInput[]
    by: Sp_adminsScalarFieldEnum[] | Sp_adminsScalarFieldEnum
    having?: sp_adminsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sp_adminsCountAggregateInputType | true
    _avg?: Sp_adminsAvgAggregateInputType
    _sum?: Sp_adminsSumAggregateInputType
    _min?: Sp_adminsMinAggregateInputType
    _max?: Sp_adminsMaxAggregateInputType
  }

  export type Sp_adminsGroupByOutputType = {
    id: number
    username: string
    password: string
    password_modify: number
    roles: JsonValue | null
    created_at: Date
    updated_at: Date | null
    deleted_at: Date | null
    status: boolean
    _count: Sp_adminsCountAggregateOutputType | null
    _avg: Sp_adminsAvgAggregateOutputType | null
    _sum: Sp_adminsSumAggregateOutputType | null
    _min: Sp_adminsMinAggregateOutputType | null
    _max: Sp_adminsMaxAggregateOutputType | null
  }

  type GetSp_adminsGroupByPayload<T extends sp_adminsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sp_adminsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sp_adminsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sp_adminsGroupByOutputType[P]>
            : GetScalarType<T[P], Sp_adminsGroupByOutputType[P]>
        }
      >
    >


  export type sp_adminsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    password?: boolean
    password_modify?: boolean
    roles?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
    status?: boolean
  }, ExtArgs["result"]["sp_admins"]>


  export type sp_adminsSelectScalar = {
    id?: boolean
    username?: boolean
    password?: boolean
    password_modify?: boolean
    roles?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
    status?: boolean
  }


  export type $sp_adminsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sp_admins"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      username: string
      password: string
      password_modify: number
      roles: Prisma.JsonValue | null
      created_at: Date
      updated_at: Date | null
      deleted_at: Date | null
      status: boolean
    }, ExtArgs["result"]["sp_admins"]>
    composites: {}
  }

  type sp_adminsGetPayload<S extends boolean | null | undefined | sp_adminsDefaultArgs> = $Result.GetResult<Prisma.$sp_adminsPayload, S>

  type sp_adminsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<sp_adminsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Sp_adminsCountAggregateInputType | true
    }

  export interface sp_adminsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sp_admins'], meta: { name: 'sp_admins' } }
    /**
     * Find zero or one Sp_admins that matches the filter.
     * @param {sp_adminsFindUniqueArgs} args - Arguments to find a Sp_admins
     * @example
     * // Get one Sp_admins
     * const sp_admins = await prisma.sp_admins.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sp_adminsFindUniqueArgs>(args: SelectSubset<T, sp_adminsFindUniqueArgs<ExtArgs>>): Prisma__sp_adminsClient<$Result.GetResult<Prisma.$sp_adminsPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Sp_admins that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {sp_adminsFindUniqueOrThrowArgs} args - Arguments to find a Sp_admins
     * @example
     * // Get one Sp_admins
     * const sp_admins = await prisma.sp_admins.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sp_adminsFindUniqueOrThrowArgs>(args: SelectSubset<T, sp_adminsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sp_adminsClient<$Result.GetResult<Prisma.$sp_adminsPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Sp_admins that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_adminsFindFirstArgs} args - Arguments to find a Sp_admins
     * @example
     * // Get one Sp_admins
     * const sp_admins = await prisma.sp_admins.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sp_adminsFindFirstArgs>(args?: SelectSubset<T, sp_adminsFindFirstArgs<ExtArgs>>): Prisma__sp_adminsClient<$Result.GetResult<Prisma.$sp_adminsPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Sp_admins that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_adminsFindFirstOrThrowArgs} args - Arguments to find a Sp_admins
     * @example
     * // Get one Sp_admins
     * const sp_admins = await prisma.sp_admins.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sp_adminsFindFirstOrThrowArgs>(args?: SelectSubset<T, sp_adminsFindFirstOrThrowArgs<ExtArgs>>): Prisma__sp_adminsClient<$Result.GetResult<Prisma.$sp_adminsPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Sp_admins that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_adminsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sp_admins
     * const sp_admins = await prisma.sp_admins.findMany()
     * 
     * // Get first 10 Sp_admins
     * const sp_admins = await prisma.sp_admins.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sp_adminsWithIdOnly = await prisma.sp_admins.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sp_adminsFindManyArgs>(args?: SelectSubset<T, sp_adminsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sp_adminsPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Sp_admins.
     * @param {sp_adminsCreateArgs} args - Arguments to create a Sp_admins.
     * @example
     * // Create one Sp_admins
     * const Sp_admins = await prisma.sp_admins.create({
     *   data: {
     *     // ... data to create a Sp_admins
     *   }
     * })
     * 
     */
    create<T extends sp_adminsCreateArgs>(args: SelectSubset<T, sp_adminsCreateArgs<ExtArgs>>): Prisma__sp_adminsClient<$Result.GetResult<Prisma.$sp_adminsPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Sp_admins.
     * @param {sp_adminsCreateManyArgs} args - Arguments to create many Sp_admins.
     * @example
     * // Create many Sp_admins
     * const sp_admins = await prisma.sp_admins.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sp_adminsCreateManyArgs>(args?: SelectSubset<T, sp_adminsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sp_admins.
     * @param {sp_adminsDeleteArgs} args - Arguments to delete one Sp_admins.
     * @example
     * // Delete one Sp_admins
     * const Sp_admins = await prisma.sp_admins.delete({
     *   where: {
     *     // ... filter to delete one Sp_admins
     *   }
     * })
     * 
     */
    delete<T extends sp_adminsDeleteArgs>(args: SelectSubset<T, sp_adminsDeleteArgs<ExtArgs>>): Prisma__sp_adminsClient<$Result.GetResult<Prisma.$sp_adminsPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Sp_admins.
     * @param {sp_adminsUpdateArgs} args - Arguments to update one Sp_admins.
     * @example
     * // Update one Sp_admins
     * const sp_admins = await prisma.sp_admins.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sp_adminsUpdateArgs>(args: SelectSubset<T, sp_adminsUpdateArgs<ExtArgs>>): Prisma__sp_adminsClient<$Result.GetResult<Prisma.$sp_adminsPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Sp_admins.
     * @param {sp_adminsDeleteManyArgs} args - Arguments to filter Sp_admins to delete.
     * @example
     * // Delete a few Sp_admins
     * const { count } = await prisma.sp_admins.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sp_adminsDeleteManyArgs>(args?: SelectSubset<T, sp_adminsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sp_admins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_adminsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sp_admins
     * const sp_admins = await prisma.sp_admins.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sp_adminsUpdateManyArgs>(args: SelectSubset<T, sp_adminsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sp_admins.
     * @param {sp_adminsUpsertArgs} args - Arguments to update or create a Sp_admins.
     * @example
     * // Update or create a Sp_admins
     * const sp_admins = await prisma.sp_admins.upsert({
     *   create: {
     *     // ... data to create a Sp_admins
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sp_admins we want to update
     *   }
     * })
     */
    upsert<T extends sp_adminsUpsertArgs>(args: SelectSubset<T, sp_adminsUpsertArgs<ExtArgs>>): Prisma__sp_adminsClient<$Result.GetResult<Prisma.$sp_adminsPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Sp_admins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_adminsCountArgs} args - Arguments to filter Sp_admins to count.
     * @example
     * // Count the number of Sp_admins
     * const count = await prisma.sp_admins.count({
     *   where: {
     *     // ... the filter for the Sp_admins we want to count
     *   }
     * })
    **/
    count<T extends sp_adminsCountArgs>(
      args?: Subset<T, sp_adminsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sp_adminsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sp_admins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sp_adminsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sp_adminsAggregateArgs>(args: Subset<T, Sp_adminsAggregateArgs>): Prisma.PrismaPromise<GetSp_adminsAggregateType<T>>

    /**
     * Group by Sp_admins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_adminsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sp_adminsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sp_adminsGroupByArgs['orderBy'] }
        : { orderBy?: sp_adminsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sp_adminsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSp_adminsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sp_admins model
   */
  readonly fields: sp_adminsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sp_admins.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sp_adminsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sp_admins model
   */ 
  interface sp_adminsFieldRefs {
    readonly id: FieldRef<"sp_admins", 'Int'>
    readonly username: FieldRef<"sp_admins", 'String'>
    readonly password: FieldRef<"sp_admins", 'String'>
    readonly password_modify: FieldRef<"sp_admins", 'Int'>
    readonly roles: FieldRef<"sp_admins", 'Json'>
    readonly created_at: FieldRef<"sp_admins", 'DateTime'>
    readonly updated_at: FieldRef<"sp_admins", 'DateTime'>
    readonly deleted_at: FieldRef<"sp_admins", 'DateTime'>
    readonly status: FieldRef<"sp_admins", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * sp_admins findUnique
   */
  export type sp_adminsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_admins
     */
    select?: sp_adminsSelect<ExtArgs> | null
    /**
     * Filter, which sp_admins to fetch.
     */
    where: sp_adminsWhereUniqueInput
  }

  /**
   * sp_admins findUniqueOrThrow
   */
  export type sp_adminsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_admins
     */
    select?: sp_adminsSelect<ExtArgs> | null
    /**
     * Filter, which sp_admins to fetch.
     */
    where: sp_adminsWhereUniqueInput
  }

  /**
   * sp_admins findFirst
   */
  export type sp_adminsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_admins
     */
    select?: sp_adminsSelect<ExtArgs> | null
    /**
     * Filter, which sp_admins to fetch.
     */
    where?: sp_adminsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_admins to fetch.
     */
    orderBy?: sp_adminsOrderByWithRelationInput | sp_adminsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_admins.
     */
    cursor?: sp_adminsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_admins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_admins.
     */
    distinct?: Sp_adminsScalarFieldEnum | Sp_adminsScalarFieldEnum[]
  }

  /**
   * sp_admins findFirstOrThrow
   */
  export type sp_adminsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_admins
     */
    select?: sp_adminsSelect<ExtArgs> | null
    /**
     * Filter, which sp_admins to fetch.
     */
    where?: sp_adminsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_admins to fetch.
     */
    orderBy?: sp_adminsOrderByWithRelationInput | sp_adminsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_admins.
     */
    cursor?: sp_adminsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_admins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_admins.
     */
    distinct?: Sp_adminsScalarFieldEnum | Sp_adminsScalarFieldEnum[]
  }

  /**
   * sp_admins findMany
   */
  export type sp_adminsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_admins
     */
    select?: sp_adminsSelect<ExtArgs> | null
    /**
     * Filter, which sp_admins to fetch.
     */
    where?: sp_adminsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_admins to fetch.
     */
    orderBy?: sp_adminsOrderByWithRelationInput | sp_adminsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sp_admins.
     */
    cursor?: sp_adminsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_admins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_admins.
     */
    skip?: number
    distinct?: Sp_adminsScalarFieldEnum | Sp_adminsScalarFieldEnum[]
  }

  /**
   * sp_admins create
   */
  export type sp_adminsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_admins
     */
    select?: sp_adminsSelect<ExtArgs> | null
    /**
     * The data needed to create a sp_admins.
     */
    data: XOR<sp_adminsCreateInput, sp_adminsUncheckedCreateInput>
  }

  /**
   * sp_admins createMany
   */
  export type sp_adminsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sp_admins.
     */
    data: sp_adminsCreateManyInput | sp_adminsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sp_admins update
   */
  export type sp_adminsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_admins
     */
    select?: sp_adminsSelect<ExtArgs> | null
    /**
     * The data needed to update a sp_admins.
     */
    data: XOR<sp_adminsUpdateInput, sp_adminsUncheckedUpdateInput>
    /**
     * Choose, which sp_admins to update.
     */
    where: sp_adminsWhereUniqueInput
  }

  /**
   * sp_admins updateMany
   */
  export type sp_adminsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sp_admins.
     */
    data: XOR<sp_adminsUpdateManyMutationInput, sp_adminsUncheckedUpdateManyInput>
    /**
     * Filter which sp_admins to update
     */
    where?: sp_adminsWhereInput
  }

  /**
   * sp_admins upsert
   */
  export type sp_adminsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_admins
     */
    select?: sp_adminsSelect<ExtArgs> | null
    /**
     * The filter to search for the sp_admins to update in case it exists.
     */
    where: sp_adminsWhereUniqueInput
    /**
     * In case the sp_admins found by the `where` argument doesn't exist, create a new sp_admins with this data.
     */
    create: XOR<sp_adminsCreateInput, sp_adminsUncheckedCreateInput>
    /**
     * In case the sp_admins was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sp_adminsUpdateInput, sp_adminsUncheckedUpdateInput>
  }

  /**
   * sp_admins delete
   */
  export type sp_adminsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_admins
     */
    select?: sp_adminsSelect<ExtArgs> | null
    /**
     * Filter which sp_admins to delete.
     */
    where: sp_adminsWhereUniqueInput
  }

  /**
   * sp_admins deleteMany
   */
  export type sp_adminsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_admins to delete
     */
    where?: sp_adminsWhereInput
  }

  /**
   * sp_admins without action
   */
  export type sp_adminsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_admins
     */
    select?: sp_adminsSelect<ExtArgs> | null
  }


  /**
   * Model sp_failed_jobs
   */

  export type AggregateSp_failed_jobs = {
    _count: Sp_failed_jobsCountAggregateOutputType | null
    _avg: Sp_failed_jobsAvgAggregateOutputType | null
    _sum: Sp_failed_jobsSumAggregateOutputType | null
    _min: Sp_failed_jobsMinAggregateOutputType | null
    _max: Sp_failed_jobsMaxAggregateOutputType | null
  }

  export type Sp_failed_jobsAvgAggregateOutputType = {
    id: number | null
  }

  export type Sp_failed_jobsSumAggregateOutputType = {
    id: bigint | null
  }

  export type Sp_failed_jobsMinAggregateOutputType = {
    id: bigint | null
    uuid: string | null
    connection: string | null
    queue: string | null
    payload: string | null
    exception: string | null
    failed_at: Date | null
  }

  export type Sp_failed_jobsMaxAggregateOutputType = {
    id: bigint | null
    uuid: string | null
    connection: string | null
    queue: string | null
    payload: string | null
    exception: string | null
    failed_at: Date | null
  }

  export type Sp_failed_jobsCountAggregateOutputType = {
    id: number
    uuid: number
    connection: number
    queue: number
    payload: number
    exception: number
    failed_at: number
    _all: number
  }


  export type Sp_failed_jobsAvgAggregateInputType = {
    id?: true
  }

  export type Sp_failed_jobsSumAggregateInputType = {
    id?: true
  }

  export type Sp_failed_jobsMinAggregateInputType = {
    id?: true
    uuid?: true
    connection?: true
    queue?: true
    payload?: true
    exception?: true
    failed_at?: true
  }

  export type Sp_failed_jobsMaxAggregateInputType = {
    id?: true
    uuid?: true
    connection?: true
    queue?: true
    payload?: true
    exception?: true
    failed_at?: true
  }

  export type Sp_failed_jobsCountAggregateInputType = {
    id?: true
    uuid?: true
    connection?: true
    queue?: true
    payload?: true
    exception?: true
    failed_at?: true
    _all?: true
  }

  export type Sp_failed_jobsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_failed_jobs to aggregate.
     */
    where?: sp_failed_jobsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_failed_jobs to fetch.
     */
    orderBy?: sp_failed_jobsOrderByWithRelationInput | sp_failed_jobsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sp_failed_jobsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_failed_jobs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_failed_jobs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sp_failed_jobs
    **/
    _count?: true | Sp_failed_jobsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sp_failed_jobsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sp_failed_jobsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sp_failed_jobsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sp_failed_jobsMaxAggregateInputType
  }

  export type GetSp_failed_jobsAggregateType<T extends Sp_failed_jobsAggregateArgs> = {
        [P in keyof T & keyof AggregateSp_failed_jobs]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSp_failed_jobs[P]>
      : GetScalarType<T[P], AggregateSp_failed_jobs[P]>
  }




  export type sp_failed_jobsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sp_failed_jobsWhereInput
    orderBy?: sp_failed_jobsOrderByWithAggregationInput | sp_failed_jobsOrderByWithAggregationInput[]
    by: Sp_failed_jobsScalarFieldEnum[] | Sp_failed_jobsScalarFieldEnum
    having?: sp_failed_jobsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sp_failed_jobsCountAggregateInputType | true
    _avg?: Sp_failed_jobsAvgAggregateInputType
    _sum?: Sp_failed_jobsSumAggregateInputType
    _min?: Sp_failed_jobsMinAggregateInputType
    _max?: Sp_failed_jobsMaxAggregateInputType
  }

  export type Sp_failed_jobsGroupByOutputType = {
    id: bigint
    uuid: string
    connection: string
    queue: string
    payload: string
    exception: string
    failed_at: Date
    _count: Sp_failed_jobsCountAggregateOutputType | null
    _avg: Sp_failed_jobsAvgAggregateOutputType | null
    _sum: Sp_failed_jobsSumAggregateOutputType | null
    _min: Sp_failed_jobsMinAggregateOutputType | null
    _max: Sp_failed_jobsMaxAggregateOutputType | null
  }

  type GetSp_failed_jobsGroupByPayload<T extends sp_failed_jobsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sp_failed_jobsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sp_failed_jobsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sp_failed_jobsGroupByOutputType[P]>
            : GetScalarType<T[P], Sp_failed_jobsGroupByOutputType[P]>
        }
      >
    >


  export type sp_failed_jobsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    uuid?: boolean
    connection?: boolean
    queue?: boolean
    payload?: boolean
    exception?: boolean
    failed_at?: boolean
  }, ExtArgs["result"]["sp_failed_jobs"]>


  export type sp_failed_jobsSelectScalar = {
    id?: boolean
    uuid?: boolean
    connection?: boolean
    queue?: boolean
    payload?: boolean
    exception?: boolean
    failed_at?: boolean
  }


  export type $sp_failed_jobsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sp_failed_jobs"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      uuid: string
      connection: string
      queue: string
      payload: string
      exception: string
      failed_at: Date
    }, ExtArgs["result"]["sp_failed_jobs"]>
    composites: {}
  }

  type sp_failed_jobsGetPayload<S extends boolean | null | undefined | sp_failed_jobsDefaultArgs> = $Result.GetResult<Prisma.$sp_failed_jobsPayload, S>

  type sp_failed_jobsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<sp_failed_jobsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Sp_failed_jobsCountAggregateInputType | true
    }

  export interface sp_failed_jobsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sp_failed_jobs'], meta: { name: 'sp_failed_jobs' } }
    /**
     * Find zero or one Sp_failed_jobs that matches the filter.
     * @param {sp_failed_jobsFindUniqueArgs} args - Arguments to find a Sp_failed_jobs
     * @example
     * // Get one Sp_failed_jobs
     * const sp_failed_jobs = await prisma.sp_failed_jobs.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sp_failed_jobsFindUniqueArgs>(args: SelectSubset<T, sp_failed_jobsFindUniqueArgs<ExtArgs>>): Prisma__sp_failed_jobsClient<$Result.GetResult<Prisma.$sp_failed_jobsPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Sp_failed_jobs that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {sp_failed_jobsFindUniqueOrThrowArgs} args - Arguments to find a Sp_failed_jobs
     * @example
     * // Get one Sp_failed_jobs
     * const sp_failed_jobs = await prisma.sp_failed_jobs.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sp_failed_jobsFindUniqueOrThrowArgs>(args: SelectSubset<T, sp_failed_jobsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sp_failed_jobsClient<$Result.GetResult<Prisma.$sp_failed_jobsPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Sp_failed_jobs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_failed_jobsFindFirstArgs} args - Arguments to find a Sp_failed_jobs
     * @example
     * // Get one Sp_failed_jobs
     * const sp_failed_jobs = await prisma.sp_failed_jobs.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sp_failed_jobsFindFirstArgs>(args?: SelectSubset<T, sp_failed_jobsFindFirstArgs<ExtArgs>>): Prisma__sp_failed_jobsClient<$Result.GetResult<Prisma.$sp_failed_jobsPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Sp_failed_jobs that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_failed_jobsFindFirstOrThrowArgs} args - Arguments to find a Sp_failed_jobs
     * @example
     * // Get one Sp_failed_jobs
     * const sp_failed_jobs = await prisma.sp_failed_jobs.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sp_failed_jobsFindFirstOrThrowArgs>(args?: SelectSubset<T, sp_failed_jobsFindFirstOrThrowArgs<ExtArgs>>): Prisma__sp_failed_jobsClient<$Result.GetResult<Prisma.$sp_failed_jobsPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Sp_failed_jobs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_failed_jobsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sp_failed_jobs
     * const sp_failed_jobs = await prisma.sp_failed_jobs.findMany()
     * 
     * // Get first 10 Sp_failed_jobs
     * const sp_failed_jobs = await prisma.sp_failed_jobs.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sp_failed_jobsWithIdOnly = await prisma.sp_failed_jobs.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sp_failed_jobsFindManyArgs>(args?: SelectSubset<T, sp_failed_jobsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sp_failed_jobsPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Sp_failed_jobs.
     * @param {sp_failed_jobsCreateArgs} args - Arguments to create a Sp_failed_jobs.
     * @example
     * // Create one Sp_failed_jobs
     * const Sp_failed_jobs = await prisma.sp_failed_jobs.create({
     *   data: {
     *     // ... data to create a Sp_failed_jobs
     *   }
     * })
     * 
     */
    create<T extends sp_failed_jobsCreateArgs>(args: SelectSubset<T, sp_failed_jobsCreateArgs<ExtArgs>>): Prisma__sp_failed_jobsClient<$Result.GetResult<Prisma.$sp_failed_jobsPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Sp_failed_jobs.
     * @param {sp_failed_jobsCreateManyArgs} args - Arguments to create many Sp_failed_jobs.
     * @example
     * // Create many Sp_failed_jobs
     * const sp_failed_jobs = await prisma.sp_failed_jobs.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sp_failed_jobsCreateManyArgs>(args?: SelectSubset<T, sp_failed_jobsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sp_failed_jobs.
     * @param {sp_failed_jobsDeleteArgs} args - Arguments to delete one Sp_failed_jobs.
     * @example
     * // Delete one Sp_failed_jobs
     * const Sp_failed_jobs = await prisma.sp_failed_jobs.delete({
     *   where: {
     *     // ... filter to delete one Sp_failed_jobs
     *   }
     * })
     * 
     */
    delete<T extends sp_failed_jobsDeleteArgs>(args: SelectSubset<T, sp_failed_jobsDeleteArgs<ExtArgs>>): Prisma__sp_failed_jobsClient<$Result.GetResult<Prisma.$sp_failed_jobsPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Sp_failed_jobs.
     * @param {sp_failed_jobsUpdateArgs} args - Arguments to update one Sp_failed_jobs.
     * @example
     * // Update one Sp_failed_jobs
     * const sp_failed_jobs = await prisma.sp_failed_jobs.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sp_failed_jobsUpdateArgs>(args: SelectSubset<T, sp_failed_jobsUpdateArgs<ExtArgs>>): Prisma__sp_failed_jobsClient<$Result.GetResult<Prisma.$sp_failed_jobsPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Sp_failed_jobs.
     * @param {sp_failed_jobsDeleteManyArgs} args - Arguments to filter Sp_failed_jobs to delete.
     * @example
     * // Delete a few Sp_failed_jobs
     * const { count } = await prisma.sp_failed_jobs.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sp_failed_jobsDeleteManyArgs>(args?: SelectSubset<T, sp_failed_jobsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sp_failed_jobs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_failed_jobsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sp_failed_jobs
     * const sp_failed_jobs = await prisma.sp_failed_jobs.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sp_failed_jobsUpdateManyArgs>(args: SelectSubset<T, sp_failed_jobsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sp_failed_jobs.
     * @param {sp_failed_jobsUpsertArgs} args - Arguments to update or create a Sp_failed_jobs.
     * @example
     * // Update or create a Sp_failed_jobs
     * const sp_failed_jobs = await prisma.sp_failed_jobs.upsert({
     *   create: {
     *     // ... data to create a Sp_failed_jobs
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sp_failed_jobs we want to update
     *   }
     * })
     */
    upsert<T extends sp_failed_jobsUpsertArgs>(args: SelectSubset<T, sp_failed_jobsUpsertArgs<ExtArgs>>): Prisma__sp_failed_jobsClient<$Result.GetResult<Prisma.$sp_failed_jobsPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Sp_failed_jobs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_failed_jobsCountArgs} args - Arguments to filter Sp_failed_jobs to count.
     * @example
     * // Count the number of Sp_failed_jobs
     * const count = await prisma.sp_failed_jobs.count({
     *   where: {
     *     // ... the filter for the Sp_failed_jobs we want to count
     *   }
     * })
    **/
    count<T extends sp_failed_jobsCountArgs>(
      args?: Subset<T, sp_failed_jobsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sp_failed_jobsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sp_failed_jobs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sp_failed_jobsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sp_failed_jobsAggregateArgs>(args: Subset<T, Sp_failed_jobsAggregateArgs>): Prisma.PrismaPromise<GetSp_failed_jobsAggregateType<T>>

    /**
     * Group by Sp_failed_jobs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_failed_jobsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sp_failed_jobsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sp_failed_jobsGroupByArgs['orderBy'] }
        : { orderBy?: sp_failed_jobsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sp_failed_jobsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSp_failed_jobsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sp_failed_jobs model
   */
  readonly fields: sp_failed_jobsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sp_failed_jobs.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sp_failed_jobsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sp_failed_jobs model
   */ 
  interface sp_failed_jobsFieldRefs {
    readonly id: FieldRef<"sp_failed_jobs", 'BigInt'>
    readonly uuid: FieldRef<"sp_failed_jobs", 'String'>
    readonly connection: FieldRef<"sp_failed_jobs", 'String'>
    readonly queue: FieldRef<"sp_failed_jobs", 'String'>
    readonly payload: FieldRef<"sp_failed_jobs", 'String'>
    readonly exception: FieldRef<"sp_failed_jobs", 'String'>
    readonly failed_at: FieldRef<"sp_failed_jobs", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sp_failed_jobs findUnique
   */
  export type sp_failed_jobsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_failed_jobs
     */
    select?: sp_failed_jobsSelect<ExtArgs> | null
    /**
     * Filter, which sp_failed_jobs to fetch.
     */
    where: sp_failed_jobsWhereUniqueInput
  }

  /**
   * sp_failed_jobs findUniqueOrThrow
   */
  export type sp_failed_jobsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_failed_jobs
     */
    select?: sp_failed_jobsSelect<ExtArgs> | null
    /**
     * Filter, which sp_failed_jobs to fetch.
     */
    where: sp_failed_jobsWhereUniqueInput
  }

  /**
   * sp_failed_jobs findFirst
   */
  export type sp_failed_jobsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_failed_jobs
     */
    select?: sp_failed_jobsSelect<ExtArgs> | null
    /**
     * Filter, which sp_failed_jobs to fetch.
     */
    where?: sp_failed_jobsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_failed_jobs to fetch.
     */
    orderBy?: sp_failed_jobsOrderByWithRelationInput | sp_failed_jobsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_failed_jobs.
     */
    cursor?: sp_failed_jobsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_failed_jobs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_failed_jobs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_failed_jobs.
     */
    distinct?: Sp_failed_jobsScalarFieldEnum | Sp_failed_jobsScalarFieldEnum[]
  }

  /**
   * sp_failed_jobs findFirstOrThrow
   */
  export type sp_failed_jobsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_failed_jobs
     */
    select?: sp_failed_jobsSelect<ExtArgs> | null
    /**
     * Filter, which sp_failed_jobs to fetch.
     */
    where?: sp_failed_jobsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_failed_jobs to fetch.
     */
    orderBy?: sp_failed_jobsOrderByWithRelationInput | sp_failed_jobsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_failed_jobs.
     */
    cursor?: sp_failed_jobsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_failed_jobs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_failed_jobs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_failed_jobs.
     */
    distinct?: Sp_failed_jobsScalarFieldEnum | Sp_failed_jobsScalarFieldEnum[]
  }

  /**
   * sp_failed_jobs findMany
   */
  export type sp_failed_jobsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_failed_jobs
     */
    select?: sp_failed_jobsSelect<ExtArgs> | null
    /**
     * Filter, which sp_failed_jobs to fetch.
     */
    where?: sp_failed_jobsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_failed_jobs to fetch.
     */
    orderBy?: sp_failed_jobsOrderByWithRelationInput | sp_failed_jobsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sp_failed_jobs.
     */
    cursor?: sp_failed_jobsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_failed_jobs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_failed_jobs.
     */
    skip?: number
    distinct?: Sp_failed_jobsScalarFieldEnum | Sp_failed_jobsScalarFieldEnum[]
  }

  /**
   * sp_failed_jobs create
   */
  export type sp_failed_jobsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_failed_jobs
     */
    select?: sp_failed_jobsSelect<ExtArgs> | null
    /**
     * The data needed to create a sp_failed_jobs.
     */
    data: XOR<sp_failed_jobsCreateInput, sp_failed_jobsUncheckedCreateInput>
  }

  /**
   * sp_failed_jobs createMany
   */
  export type sp_failed_jobsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sp_failed_jobs.
     */
    data: sp_failed_jobsCreateManyInput | sp_failed_jobsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sp_failed_jobs update
   */
  export type sp_failed_jobsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_failed_jobs
     */
    select?: sp_failed_jobsSelect<ExtArgs> | null
    /**
     * The data needed to update a sp_failed_jobs.
     */
    data: XOR<sp_failed_jobsUpdateInput, sp_failed_jobsUncheckedUpdateInput>
    /**
     * Choose, which sp_failed_jobs to update.
     */
    where: sp_failed_jobsWhereUniqueInput
  }

  /**
   * sp_failed_jobs updateMany
   */
  export type sp_failed_jobsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sp_failed_jobs.
     */
    data: XOR<sp_failed_jobsUpdateManyMutationInput, sp_failed_jobsUncheckedUpdateManyInput>
    /**
     * Filter which sp_failed_jobs to update
     */
    where?: sp_failed_jobsWhereInput
  }

  /**
   * sp_failed_jobs upsert
   */
  export type sp_failed_jobsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_failed_jobs
     */
    select?: sp_failed_jobsSelect<ExtArgs> | null
    /**
     * The filter to search for the sp_failed_jobs to update in case it exists.
     */
    where: sp_failed_jobsWhereUniqueInput
    /**
     * In case the sp_failed_jobs found by the `where` argument doesn't exist, create a new sp_failed_jobs with this data.
     */
    create: XOR<sp_failed_jobsCreateInput, sp_failed_jobsUncheckedCreateInput>
    /**
     * In case the sp_failed_jobs was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sp_failed_jobsUpdateInput, sp_failed_jobsUncheckedUpdateInput>
  }

  /**
   * sp_failed_jobs delete
   */
  export type sp_failed_jobsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_failed_jobs
     */
    select?: sp_failed_jobsSelect<ExtArgs> | null
    /**
     * Filter which sp_failed_jobs to delete.
     */
    where: sp_failed_jobsWhereUniqueInput
  }

  /**
   * sp_failed_jobs deleteMany
   */
  export type sp_failed_jobsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_failed_jobs to delete
     */
    where?: sp_failed_jobsWhereInput
  }

  /**
   * sp_failed_jobs without action
   */
  export type sp_failed_jobsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_failed_jobs
     */
    select?: sp_failed_jobsSelect<ExtArgs> | null
  }


  /**
   * Model sp_files
   */

  export type AggregateSp_files = {
    _count: Sp_filesCountAggregateOutputType | null
    _avg: Sp_filesAvgAggregateOutputType | null
    _sum: Sp_filesSumAggregateOutputType | null
    _min: Sp_filesMinAggregateOutputType | null
    _max: Sp_filesMaxAggregateOutputType | null
  }

  export type Sp_filesAvgAggregateOutputType = {
    id: number | null
    type: number | null
    group_id: number | null
    sort: number | null
  }

  export type Sp_filesSumAggregateOutputType = {
    id: number | null
    type: number | null
    group_id: number | null
    sort: number | null
  }

  export type Sp_filesMinAggregateOutputType = {
    id: number | null
    file_id: string | null
    url: string | null
    title: string | null
    type: number | null
    group_id: number | null
    sort: number | null
    cover: string | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_filesMaxAggregateOutputType = {
    id: number | null
    file_id: string | null
    url: string | null
    title: string | null
    type: number | null
    group_id: number | null
    sort: number | null
    cover: string | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_filesCountAggregateOutputType = {
    id: number
    file_id: number
    url: number
    title: number
    type: number
    group_id: number
    sort: number
    cover: number
    info: number
    created_at: number
    updated_at: number
    deleted_at: number
    _all: number
  }


  export type Sp_filesAvgAggregateInputType = {
    id?: true
    type?: true
    group_id?: true
    sort?: true
  }

  export type Sp_filesSumAggregateInputType = {
    id?: true
    type?: true
    group_id?: true
    sort?: true
  }

  export type Sp_filesMinAggregateInputType = {
    id?: true
    file_id?: true
    url?: true
    title?: true
    type?: true
    group_id?: true
    sort?: true
    cover?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sp_filesMaxAggregateInputType = {
    id?: true
    file_id?: true
    url?: true
    title?: true
    type?: true
    group_id?: true
    sort?: true
    cover?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sp_filesCountAggregateInputType = {
    id?: true
    file_id?: true
    url?: true
    title?: true
    type?: true
    group_id?: true
    sort?: true
    cover?: true
    info?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    _all?: true
  }

  export type Sp_filesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_files to aggregate.
     */
    where?: sp_filesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_files to fetch.
     */
    orderBy?: sp_filesOrderByWithRelationInput | sp_filesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sp_filesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_files.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sp_files
    **/
    _count?: true | Sp_filesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sp_filesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sp_filesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sp_filesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sp_filesMaxAggregateInputType
  }

  export type GetSp_filesAggregateType<T extends Sp_filesAggregateArgs> = {
        [P in keyof T & keyof AggregateSp_files]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSp_files[P]>
      : GetScalarType<T[P], AggregateSp_files[P]>
  }




  export type sp_filesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sp_filesWhereInput
    orderBy?: sp_filesOrderByWithAggregationInput | sp_filesOrderByWithAggregationInput[]
    by: Sp_filesScalarFieldEnum[] | Sp_filesScalarFieldEnum
    having?: sp_filesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sp_filesCountAggregateInputType | true
    _avg?: Sp_filesAvgAggregateInputType
    _sum?: Sp_filesSumAggregateInputType
    _min?: Sp_filesMinAggregateInputType
    _max?: Sp_filesMaxAggregateInputType
  }

  export type Sp_filesGroupByOutputType = {
    id: number
    file_id: string
    url: string
    title: string
    type: number
    group_id: number
    sort: number | null
    cover: string | null
    info: JsonValue | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
    _count: Sp_filesCountAggregateOutputType | null
    _avg: Sp_filesAvgAggregateOutputType | null
    _sum: Sp_filesSumAggregateOutputType | null
    _min: Sp_filesMinAggregateOutputType | null
    _max: Sp_filesMaxAggregateOutputType | null
  }

  type GetSp_filesGroupByPayload<T extends sp_filesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sp_filesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sp_filesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sp_filesGroupByOutputType[P]>
            : GetScalarType<T[P], Sp_filesGroupByOutputType[P]>
        }
      >
    >


  export type sp_filesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    file_id?: boolean
    url?: boolean
    title?: boolean
    type?: boolean
    group_id?: boolean
    sort?: boolean
    cover?: boolean
    info?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }, ExtArgs["result"]["sp_files"]>


  export type sp_filesSelectScalar = {
    id?: boolean
    file_id?: boolean
    url?: boolean
    title?: boolean
    type?: boolean
    group_id?: boolean
    sort?: boolean
    cover?: boolean
    info?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }


  export type $sp_filesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sp_files"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      file_id: string
      url: string
      title: string
      type: number
      group_id: number
      sort: number | null
      cover: string | null
      info: Prisma.JsonValue | null
      created_at: Date | null
      updated_at: Date | null
      deleted_at: Date | null
    }, ExtArgs["result"]["sp_files"]>
    composites: {}
  }

  type sp_filesGetPayload<S extends boolean | null | undefined | sp_filesDefaultArgs> = $Result.GetResult<Prisma.$sp_filesPayload, S>

  type sp_filesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<sp_filesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Sp_filesCountAggregateInputType | true
    }

  export interface sp_filesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sp_files'], meta: { name: 'sp_files' } }
    /**
     * Find zero or one Sp_files that matches the filter.
     * @param {sp_filesFindUniqueArgs} args - Arguments to find a Sp_files
     * @example
     * // Get one Sp_files
     * const sp_files = await prisma.sp_files.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sp_filesFindUniqueArgs>(args: SelectSubset<T, sp_filesFindUniqueArgs<ExtArgs>>): Prisma__sp_filesClient<$Result.GetResult<Prisma.$sp_filesPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Sp_files that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {sp_filesFindUniqueOrThrowArgs} args - Arguments to find a Sp_files
     * @example
     * // Get one Sp_files
     * const sp_files = await prisma.sp_files.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sp_filesFindUniqueOrThrowArgs>(args: SelectSubset<T, sp_filesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sp_filesClient<$Result.GetResult<Prisma.$sp_filesPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Sp_files that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_filesFindFirstArgs} args - Arguments to find a Sp_files
     * @example
     * // Get one Sp_files
     * const sp_files = await prisma.sp_files.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sp_filesFindFirstArgs>(args?: SelectSubset<T, sp_filesFindFirstArgs<ExtArgs>>): Prisma__sp_filesClient<$Result.GetResult<Prisma.$sp_filesPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Sp_files that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_filesFindFirstOrThrowArgs} args - Arguments to find a Sp_files
     * @example
     * // Get one Sp_files
     * const sp_files = await prisma.sp_files.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sp_filesFindFirstOrThrowArgs>(args?: SelectSubset<T, sp_filesFindFirstOrThrowArgs<ExtArgs>>): Prisma__sp_filesClient<$Result.GetResult<Prisma.$sp_filesPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Sp_files that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_filesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sp_files
     * const sp_files = await prisma.sp_files.findMany()
     * 
     * // Get first 10 Sp_files
     * const sp_files = await prisma.sp_files.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sp_filesWithIdOnly = await prisma.sp_files.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sp_filesFindManyArgs>(args?: SelectSubset<T, sp_filesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sp_filesPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Sp_files.
     * @param {sp_filesCreateArgs} args - Arguments to create a Sp_files.
     * @example
     * // Create one Sp_files
     * const Sp_files = await prisma.sp_files.create({
     *   data: {
     *     // ... data to create a Sp_files
     *   }
     * })
     * 
     */
    create<T extends sp_filesCreateArgs>(args: SelectSubset<T, sp_filesCreateArgs<ExtArgs>>): Prisma__sp_filesClient<$Result.GetResult<Prisma.$sp_filesPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Sp_files.
     * @param {sp_filesCreateManyArgs} args - Arguments to create many Sp_files.
     * @example
     * // Create many Sp_files
     * const sp_files = await prisma.sp_files.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sp_filesCreateManyArgs>(args?: SelectSubset<T, sp_filesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sp_files.
     * @param {sp_filesDeleteArgs} args - Arguments to delete one Sp_files.
     * @example
     * // Delete one Sp_files
     * const Sp_files = await prisma.sp_files.delete({
     *   where: {
     *     // ... filter to delete one Sp_files
     *   }
     * })
     * 
     */
    delete<T extends sp_filesDeleteArgs>(args: SelectSubset<T, sp_filesDeleteArgs<ExtArgs>>): Prisma__sp_filesClient<$Result.GetResult<Prisma.$sp_filesPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Sp_files.
     * @param {sp_filesUpdateArgs} args - Arguments to update one Sp_files.
     * @example
     * // Update one Sp_files
     * const sp_files = await prisma.sp_files.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sp_filesUpdateArgs>(args: SelectSubset<T, sp_filesUpdateArgs<ExtArgs>>): Prisma__sp_filesClient<$Result.GetResult<Prisma.$sp_filesPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Sp_files.
     * @param {sp_filesDeleteManyArgs} args - Arguments to filter Sp_files to delete.
     * @example
     * // Delete a few Sp_files
     * const { count } = await prisma.sp_files.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sp_filesDeleteManyArgs>(args?: SelectSubset<T, sp_filesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sp_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_filesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sp_files
     * const sp_files = await prisma.sp_files.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sp_filesUpdateManyArgs>(args: SelectSubset<T, sp_filesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sp_files.
     * @param {sp_filesUpsertArgs} args - Arguments to update or create a Sp_files.
     * @example
     * // Update or create a Sp_files
     * const sp_files = await prisma.sp_files.upsert({
     *   create: {
     *     // ... data to create a Sp_files
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sp_files we want to update
     *   }
     * })
     */
    upsert<T extends sp_filesUpsertArgs>(args: SelectSubset<T, sp_filesUpsertArgs<ExtArgs>>): Prisma__sp_filesClient<$Result.GetResult<Prisma.$sp_filesPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Sp_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_filesCountArgs} args - Arguments to filter Sp_files to count.
     * @example
     * // Count the number of Sp_files
     * const count = await prisma.sp_files.count({
     *   where: {
     *     // ... the filter for the Sp_files we want to count
     *   }
     * })
    **/
    count<T extends sp_filesCountArgs>(
      args?: Subset<T, sp_filesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sp_filesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sp_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sp_filesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sp_filesAggregateArgs>(args: Subset<T, Sp_filesAggregateArgs>): Prisma.PrismaPromise<GetSp_filesAggregateType<T>>

    /**
     * Group by Sp_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_filesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sp_filesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sp_filesGroupByArgs['orderBy'] }
        : { orderBy?: sp_filesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sp_filesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSp_filesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sp_files model
   */
  readonly fields: sp_filesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sp_files.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sp_filesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sp_files model
   */ 
  interface sp_filesFieldRefs {
    readonly id: FieldRef<"sp_files", 'Int'>
    readonly file_id: FieldRef<"sp_files", 'String'>
    readonly url: FieldRef<"sp_files", 'String'>
    readonly title: FieldRef<"sp_files", 'String'>
    readonly type: FieldRef<"sp_files", 'Int'>
    readonly group_id: FieldRef<"sp_files", 'Int'>
    readonly sort: FieldRef<"sp_files", 'Int'>
    readonly cover: FieldRef<"sp_files", 'String'>
    readonly info: FieldRef<"sp_files", 'Json'>
    readonly created_at: FieldRef<"sp_files", 'DateTime'>
    readonly updated_at: FieldRef<"sp_files", 'DateTime'>
    readonly deleted_at: FieldRef<"sp_files", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sp_files findUnique
   */
  export type sp_filesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_files
     */
    select?: sp_filesSelect<ExtArgs> | null
    /**
     * Filter, which sp_files to fetch.
     */
    where: sp_filesWhereUniqueInput
  }

  /**
   * sp_files findUniqueOrThrow
   */
  export type sp_filesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_files
     */
    select?: sp_filesSelect<ExtArgs> | null
    /**
     * Filter, which sp_files to fetch.
     */
    where: sp_filesWhereUniqueInput
  }

  /**
   * sp_files findFirst
   */
  export type sp_filesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_files
     */
    select?: sp_filesSelect<ExtArgs> | null
    /**
     * Filter, which sp_files to fetch.
     */
    where?: sp_filesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_files to fetch.
     */
    orderBy?: sp_filesOrderByWithRelationInput | sp_filesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_files.
     */
    cursor?: sp_filesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_files.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_files.
     */
    distinct?: Sp_filesScalarFieldEnum | Sp_filesScalarFieldEnum[]
  }

  /**
   * sp_files findFirstOrThrow
   */
  export type sp_filesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_files
     */
    select?: sp_filesSelect<ExtArgs> | null
    /**
     * Filter, which sp_files to fetch.
     */
    where?: sp_filesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_files to fetch.
     */
    orderBy?: sp_filesOrderByWithRelationInput | sp_filesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_files.
     */
    cursor?: sp_filesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_files.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_files.
     */
    distinct?: Sp_filesScalarFieldEnum | Sp_filesScalarFieldEnum[]
  }

  /**
   * sp_files findMany
   */
  export type sp_filesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_files
     */
    select?: sp_filesSelect<ExtArgs> | null
    /**
     * Filter, which sp_files to fetch.
     */
    where?: sp_filesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_files to fetch.
     */
    orderBy?: sp_filesOrderByWithRelationInput | sp_filesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sp_files.
     */
    cursor?: sp_filesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_files.
     */
    skip?: number
    distinct?: Sp_filesScalarFieldEnum | Sp_filesScalarFieldEnum[]
  }

  /**
   * sp_files create
   */
  export type sp_filesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_files
     */
    select?: sp_filesSelect<ExtArgs> | null
    /**
     * The data needed to create a sp_files.
     */
    data?: XOR<sp_filesCreateInput, sp_filesUncheckedCreateInput>
  }

  /**
   * sp_files createMany
   */
  export type sp_filesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sp_files.
     */
    data: sp_filesCreateManyInput | sp_filesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sp_files update
   */
  export type sp_filesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_files
     */
    select?: sp_filesSelect<ExtArgs> | null
    /**
     * The data needed to update a sp_files.
     */
    data: XOR<sp_filesUpdateInput, sp_filesUncheckedUpdateInput>
    /**
     * Choose, which sp_files to update.
     */
    where: sp_filesWhereUniqueInput
  }

  /**
   * sp_files updateMany
   */
  export type sp_filesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sp_files.
     */
    data: XOR<sp_filesUpdateManyMutationInput, sp_filesUncheckedUpdateManyInput>
    /**
     * Filter which sp_files to update
     */
    where?: sp_filesWhereInput
  }

  /**
   * sp_files upsert
   */
  export type sp_filesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_files
     */
    select?: sp_filesSelect<ExtArgs> | null
    /**
     * The filter to search for the sp_files to update in case it exists.
     */
    where: sp_filesWhereUniqueInput
    /**
     * In case the sp_files found by the `where` argument doesn't exist, create a new sp_files with this data.
     */
    create: XOR<sp_filesCreateInput, sp_filesUncheckedCreateInput>
    /**
     * In case the sp_files was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sp_filesUpdateInput, sp_filesUncheckedUpdateInput>
  }

  /**
   * sp_files delete
   */
  export type sp_filesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_files
     */
    select?: sp_filesSelect<ExtArgs> | null
    /**
     * Filter which sp_files to delete.
     */
    where: sp_filesWhereUniqueInput
  }

  /**
   * sp_files deleteMany
   */
  export type sp_filesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_files to delete
     */
    where?: sp_filesWhereInput
  }

  /**
   * sp_files without action
   */
  export type sp_filesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_files
     */
    select?: sp_filesSelect<ExtArgs> | null
  }


  /**
   * Model sp_goods
   */

  export type AggregateSp_goods = {
    _count: Sp_goodsCountAggregateOutputType | null
    _avg: Sp_goodsAvgAggregateOutputType | null
    _sum: Sp_goodsSumAggregateOutputType | null
    _min: Sp_goodsMinAggregateOutputType | null
    _max: Sp_goodsMaxAggregateOutputType | null
  }

  export type Sp_goodsAvgAggregateOutputType = {
    id: number | null
    type: number | null
    price: Decimal | null
    coins: number | null
    bonus: number | null
    sort: number | null
  }

  export type Sp_goodsSumAggregateOutputType = {
    id: bigint | null
    type: number | null
    price: Decimal | null
    coins: number | null
    bonus: number | null
    sort: number | null
  }

  export type Sp_goodsMinAggregateOutputType = {
    id: bigint | null
    type: number | null
    name: string | null
    price: Decimal | null
    coins: number | null
    product_tier: string | null
    bonus: number | null
    sort: number | null
    desc: string | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_goodsMaxAggregateOutputType = {
    id: bigint | null
    type: number | null
    name: string | null
    price: Decimal | null
    coins: number | null
    product_tier: string | null
    bonus: number | null
    sort: number | null
    desc: string | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_goodsCountAggregateOutputType = {
    id: number
    type: number
    name: number
    price: number
    coins: number
    product_tier: number
    bonus: number
    sort: number
    desc: number
    created_at: number
    updated_at: number
    deleted_at: number
    _all: number
  }


  export type Sp_goodsAvgAggregateInputType = {
    id?: true
    type?: true
    price?: true
    coins?: true
    bonus?: true
    sort?: true
  }

  export type Sp_goodsSumAggregateInputType = {
    id?: true
    type?: true
    price?: true
    coins?: true
    bonus?: true
    sort?: true
  }

  export type Sp_goodsMinAggregateInputType = {
    id?: true
    type?: true
    name?: true
    price?: true
    coins?: true
    product_tier?: true
    bonus?: true
    sort?: true
    desc?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sp_goodsMaxAggregateInputType = {
    id?: true
    type?: true
    name?: true
    price?: true
    coins?: true
    product_tier?: true
    bonus?: true
    sort?: true
    desc?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sp_goodsCountAggregateInputType = {
    id?: true
    type?: true
    name?: true
    price?: true
    coins?: true
    product_tier?: true
    bonus?: true
    sort?: true
    desc?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    _all?: true
  }

  export type Sp_goodsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_goods to aggregate.
     */
    where?: sp_goodsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_goods to fetch.
     */
    orderBy?: sp_goodsOrderByWithRelationInput | sp_goodsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sp_goodsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_goods from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_goods.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sp_goods
    **/
    _count?: true | Sp_goodsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sp_goodsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sp_goodsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sp_goodsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sp_goodsMaxAggregateInputType
  }

  export type GetSp_goodsAggregateType<T extends Sp_goodsAggregateArgs> = {
        [P in keyof T & keyof AggregateSp_goods]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSp_goods[P]>
      : GetScalarType<T[P], AggregateSp_goods[P]>
  }




  export type sp_goodsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sp_goodsWhereInput
    orderBy?: sp_goodsOrderByWithAggregationInput | sp_goodsOrderByWithAggregationInput[]
    by: Sp_goodsScalarFieldEnum[] | Sp_goodsScalarFieldEnum
    having?: sp_goodsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sp_goodsCountAggregateInputType | true
    _avg?: Sp_goodsAvgAggregateInputType
    _sum?: Sp_goodsSumAggregateInputType
    _min?: Sp_goodsMinAggregateInputType
    _max?: Sp_goodsMaxAggregateInputType
  }

  export type Sp_goodsGroupByOutputType = {
    id: bigint
    type: number
    name: string
    price: Decimal
    coins: number
    product_tier: string | null
    bonus: number
    sort: number | null
    desc: string
    created_at: Date
    updated_at: Date | null
    deleted_at: Date | null
    _count: Sp_goodsCountAggregateOutputType | null
    _avg: Sp_goodsAvgAggregateOutputType | null
    _sum: Sp_goodsSumAggregateOutputType | null
    _min: Sp_goodsMinAggregateOutputType | null
    _max: Sp_goodsMaxAggregateOutputType | null
  }

  type GetSp_goodsGroupByPayload<T extends sp_goodsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sp_goodsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sp_goodsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sp_goodsGroupByOutputType[P]>
            : GetScalarType<T[P], Sp_goodsGroupByOutputType[P]>
        }
      >
    >


  export type sp_goodsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    name?: boolean
    price?: boolean
    coins?: boolean
    product_tier?: boolean
    bonus?: boolean
    sort?: boolean
    desc?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }, ExtArgs["result"]["sp_goods"]>


  export type sp_goodsSelectScalar = {
    id?: boolean
    type?: boolean
    name?: boolean
    price?: boolean
    coins?: boolean
    product_tier?: boolean
    bonus?: boolean
    sort?: boolean
    desc?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }


  export type $sp_goodsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sp_goods"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      type: number
      name: string
      price: Prisma.Decimal
      coins: number
      product_tier: string | null
      bonus: number
      sort: number | null
      desc: string
      created_at: Date
      updated_at: Date | null
      deleted_at: Date | null
    }, ExtArgs["result"]["sp_goods"]>
    composites: {}
  }

  type sp_goodsGetPayload<S extends boolean | null | undefined | sp_goodsDefaultArgs> = $Result.GetResult<Prisma.$sp_goodsPayload, S>

  type sp_goodsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<sp_goodsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Sp_goodsCountAggregateInputType | true
    }

  export interface sp_goodsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sp_goods'], meta: { name: 'sp_goods' } }
    /**
     * Find zero or one Sp_goods that matches the filter.
     * @param {sp_goodsFindUniqueArgs} args - Arguments to find a Sp_goods
     * @example
     * // Get one Sp_goods
     * const sp_goods = await prisma.sp_goods.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sp_goodsFindUniqueArgs>(args: SelectSubset<T, sp_goodsFindUniqueArgs<ExtArgs>>): Prisma__sp_goodsClient<$Result.GetResult<Prisma.$sp_goodsPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Sp_goods that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {sp_goodsFindUniqueOrThrowArgs} args - Arguments to find a Sp_goods
     * @example
     * // Get one Sp_goods
     * const sp_goods = await prisma.sp_goods.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sp_goodsFindUniqueOrThrowArgs>(args: SelectSubset<T, sp_goodsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sp_goodsClient<$Result.GetResult<Prisma.$sp_goodsPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Sp_goods that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_goodsFindFirstArgs} args - Arguments to find a Sp_goods
     * @example
     * // Get one Sp_goods
     * const sp_goods = await prisma.sp_goods.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sp_goodsFindFirstArgs>(args?: SelectSubset<T, sp_goodsFindFirstArgs<ExtArgs>>): Prisma__sp_goodsClient<$Result.GetResult<Prisma.$sp_goodsPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Sp_goods that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_goodsFindFirstOrThrowArgs} args - Arguments to find a Sp_goods
     * @example
     * // Get one Sp_goods
     * const sp_goods = await prisma.sp_goods.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sp_goodsFindFirstOrThrowArgs>(args?: SelectSubset<T, sp_goodsFindFirstOrThrowArgs<ExtArgs>>): Prisma__sp_goodsClient<$Result.GetResult<Prisma.$sp_goodsPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Sp_goods that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_goodsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sp_goods
     * const sp_goods = await prisma.sp_goods.findMany()
     * 
     * // Get first 10 Sp_goods
     * const sp_goods = await prisma.sp_goods.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sp_goodsWithIdOnly = await prisma.sp_goods.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sp_goodsFindManyArgs>(args?: SelectSubset<T, sp_goodsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sp_goodsPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Sp_goods.
     * @param {sp_goodsCreateArgs} args - Arguments to create a Sp_goods.
     * @example
     * // Create one Sp_goods
     * const Sp_goods = await prisma.sp_goods.create({
     *   data: {
     *     // ... data to create a Sp_goods
     *   }
     * })
     * 
     */
    create<T extends sp_goodsCreateArgs>(args: SelectSubset<T, sp_goodsCreateArgs<ExtArgs>>): Prisma__sp_goodsClient<$Result.GetResult<Prisma.$sp_goodsPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Sp_goods.
     * @param {sp_goodsCreateManyArgs} args - Arguments to create many Sp_goods.
     * @example
     * // Create many Sp_goods
     * const sp_goods = await prisma.sp_goods.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sp_goodsCreateManyArgs>(args?: SelectSubset<T, sp_goodsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sp_goods.
     * @param {sp_goodsDeleteArgs} args - Arguments to delete one Sp_goods.
     * @example
     * // Delete one Sp_goods
     * const Sp_goods = await prisma.sp_goods.delete({
     *   where: {
     *     // ... filter to delete one Sp_goods
     *   }
     * })
     * 
     */
    delete<T extends sp_goodsDeleteArgs>(args: SelectSubset<T, sp_goodsDeleteArgs<ExtArgs>>): Prisma__sp_goodsClient<$Result.GetResult<Prisma.$sp_goodsPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Sp_goods.
     * @param {sp_goodsUpdateArgs} args - Arguments to update one Sp_goods.
     * @example
     * // Update one Sp_goods
     * const sp_goods = await prisma.sp_goods.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sp_goodsUpdateArgs>(args: SelectSubset<T, sp_goodsUpdateArgs<ExtArgs>>): Prisma__sp_goodsClient<$Result.GetResult<Prisma.$sp_goodsPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Sp_goods.
     * @param {sp_goodsDeleteManyArgs} args - Arguments to filter Sp_goods to delete.
     * @example
     * // Delete a few Sp_goods
     * const { count } = await prisma.sp_goods.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sp_goodsDeleteManyArgs>(args?: SelectSubset<T, sp_goodsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sp_goods.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_goodsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sp_goods
     * const sp_goods = await prisma.sp_goods.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sp_goodsUpdateManyArgs>(args: SelectSubset<T, sp_goodsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sp_goods.
     * @param {sp_goodsUpsertArgs} args - Arguments to update or create a Sp_goods.
     * @example
     * // Update or create a Sp_goods
     * const sp_goods = await prisma.sp_goods.upsert({
     *   create: {
     *     // ... data to create a Sp_goods
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sp_goods we want to update
     *   }
     * })
     */
    upsert<T extends sp_goodsUpsertArgs>(args: SelectSubset<T, sp_goodsUpsertArgs<ExtArgs>>): Prisma__sp_goodsClient<$Result.GetResult<Prisma.$sp_goodsPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Sp_goods.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_goodsCountArgs} args - Arguments to filter Sp_goods to count.
     * @example
     * // Count the number of Sp_goods
     * const count = await prisma.sp_goods.count({
     *   where: {
     *     // ... the filter for the Sp_goods we want to count
     *   }
     * })
    **/
    count<T extends sp_goodsCountArgs>(
      args?: Subset<T, sp_goodsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sp_goodsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sp_goods.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sp_goodsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sp_goodsAggregateArgs>(args: Subset<T, Sp_goodsAggregateArgs>): Prisma.PrismaPromise<GetSp_goodsAggregateType<T>>

    /**
     * Group by Sp_goods.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_goodsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sp_goodsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sp_goodsGroupByArgs['orderBy'] }
        : { orderBy?: sp_goodsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sp_goodsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSp_goodsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sp_goods model
   */
  readonly fields: sp_goodsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sp_goods.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sp_goodsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sp_goods model
   */ 
  interface sp_goodsFieldRefs {
    readonly id: FieldRef<"sp_goods", 'BigInt'>
    readonly type: FieldRef<"sp_goods", 'Int'>
    readonly name: FieldRef<"sp_goods", 'String'>
    readonly price: FieldRef<"sp_goods", 'Decimal'>
    readonly coins: FieldRef<"sp_goods", 'Int'>
    readonly product_tier: FieldRef<"sp_goods", 'String'>
    readonly bonus: FieldRef<"sp_goods", 'Int'>
    readonly sort: FieldRef<"sp_goods", 'Int'>
    readonly desc: FieldRef<"sp_goods", 'String'>
    readonly created_at: FieldRef<"sp_goods", 'DateTime'>
    readonly updated_at: FieldRef<"sp_goods", 'DateTime'>
    readonly deleted_at: FieldRef<"sp_goods", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sp_goods findUnique
   */
  export type sp_goodsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_goods
     */
    select?: sp_goodsSelect<ExtArgs> | null
    /**
     * Filter, which sp_goods to fetch.
     */
    where: sp_goodsWhereUniqueInput
  }

  /**
   * sp_goods findUniqueOrThrow
   */
  export type sp_goodsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_goods
     */
    select?: sp_goodsSelect<ExtArgs> | null
    /**
     * Filter, which sp_goods to fetch.
     */
    where: sp_goodsWhereUniqueInput
  }

  /**
   * sp_goods findFirst
   */
  export type sp_goodsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_goods
     */
    select?: sp_goodsSelect<ExtArgs> | null
    /**
     * Filter, which sp_goods to fetch.
     */
    where?: sp_goodsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_goods to fetch.
     */
    orderBy?: sp_goodsOrderByWithRelationInput | sp_goodsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_goods.
     */
    cursor?: sp_goodsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_goods from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_goods.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_goods.
     */
    distinct?: Sp_goodsScalarFieldEnum | Sp_goodsScalarFieldEnum[]
  }

  /**
   * sp_goods findFirstOrThrow
   */
  export type sp_goodsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_goods
     */
    select?: sp_goodsSelect<ExtArgs> | null
    /**
     * Filter, which sp_goods to fetch.
     */
    where?: sp_goodsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_goods to fetch.
     */
    orderBy?: sp_goodsOrderByWithRelationInput | sp_goodsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_goods.
     */
    cursor?: sp_goodsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_goods from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_goods.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_goods.
     */
    distinct?: Sp_goodsScalarFieldEnum | Sp_goodsScalarFieldEnum[]
  }

  /**
   * sp_goods findMany
   */
  export type sp_goodsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_goods
     */
    select?: sp_goodsSelect<ExtArgs> | null
    /**
     * Filter, which sp_goods to fetch.
     */
    where?: sp_goodsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_goods to fetch.
     */
    orderBy?: sp_goodsOrderByWithRelationInput | sp_goodsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sp_goods.
     */
    cursor?: sp_goodsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_goods from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_goods.
     */
    skip?: number
    distinct?: Sp_goodsScalarFieldEnum | Sp_goodsScalarFieldEnum[]
  }

  /**
   * sp_goods create
   */
  export type sp_goodsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_goods
     */
    select?: sp_goodsSelect<ExtArgs> | null
    /**
     * The data needed to create a sp_goods.
     */
    data?: XOR<sp_goodsCreateInput, sp_goodsUncheckedCreateInput>
  }

  /**
   * sp_goods createMany
   */
  export type sp_goodsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sp_goods.
     */
    data: sp_goodsCreateManyInput | sp_goodsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sp_goods update
   */
  export type sp_goodsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_goods
     */
    select?: sp_goodsSelect<ExtArgs> | null
    /**
     * The data needed to update a sp_goods.
     */
    data: XOR<sp_goodsUpdateInput, sp_goodsUncheckedUpdateInput>
    /**
     * Choose, which sp_goods to update.
     */
    where: sp_goodsWhereUniqueInput
  }

  /**
   * sp_goods updateMany
   */
  export type sp_goodsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sp_goods.
     */
    data: XOR<sp_goodsUpdateManyMutationInput, sp_goodsUncheckedUpdateManyInput>
    /**
     * Filter which sp_goods to update
     */
    where?: sp_goodsWhereInput
  }

  /**
   * sp_goods upsert
   */
  export type sp_goodsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_goods
     */
    select?: sp_goodsSelect<ExtArgs> | null
    /**
     * The filter to search for the sp_goods to update in case it exists.
     */
    where: sp_goodsWhereUniqueInput
    /**
     * In case the sp_goods found by the `where` argument doesn't exist, create a new sp_goods with this data.
     */
    create: XOR<sp_goodsCreateInput, sp_goodsUncheckedCreateInput>
    /**
     * In case the sp_goods was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sp_goodsUpdateInput, sp_goodsUncheckedUpdateInput>
  }

  /**
   * sp_goods delete
   */
  export type sp_goodsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_goods
     */
    select?: sp_goodsSelect<ExtArgs> | null
    /**
     * Filter which sp_goods to delete.
     */
    where: sp_goodsWhereUniqueInput
  }

  /**
   * sp_goods deleteMany
   */
  export type sp_goodsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_goods to delete
     */
    where?: sp_goodsWhereInput
  }

  /**
   * sp_goods without action
   */
  export type sp_goodsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_goods
     */
    select?: sp_goodsSelect<ExtArgs> | null
  }


  /**
   * Model sp_home_series
   */

  export type AggregateSp_home_series = {
    _count: Sp_home_seriesCountAggregateOutputType | null
    _avg: Sp_home_seriesAvgAggregateOutputType | null
    _sum: Sp_home_seriesSumAggregateOutputType | null
    _min: Sp_home_seriesMinAggregateOutputType | null
    _max: Sp_home_seriesMaxAggregateOutputType | null
  }

  export type Sp_home_seriesAvgAggregateOutputType = {
    id: number | null
    sort: number | null
  }

  export type Sp_home_seriesSumAggregateOutputType = {
    id: number | null
    sort: number | null
  }

  export type Sp_home_seriesMinAggregateOutputType = {
    id: number | null
    title: string | null
    icon: string | null
    desc: string | null
    sort: number | null
    is_more: boolean | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_home_seriesMaxAggregateOutputType = {
    id: number | null
    title: string | null
    icon: string | null
    desc: string | null
    sort: number | null
    is_more: boolean | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_home_seriesCountAggregateOutputType = {
    id: number
    title: number
    icon: number
    desc: number
    sort: number
    is_more: number
    created_at: number
    updated_at: number
    deleted_at: number
    _all: number
  }


  export type Sp_home_seriesAvgAggregateInputType = {
    id?: true
    sort?: true
  }

  export type Sp_home_seriesSumAggregateInputType = {
    id?: true
    sort?: true
  }

  export type Sp_home_seriesMinAggregateInputType = {
    id?: true
    title?: true
    icon?: true
    desc?: true
    sort?: true
    is_more?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sp_home_seriesMaxAggregateInputType = {
    id?: true
    title?: true
    icon?: true
    desc?: true
    sort?: true
    is_more?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sp_home_seriesCountAggregateInputType = {
    id?: true
    title?: true
    icon?: true
    desc?: true
    sort?: true
    is_more?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    _all?: true
  }

  export type Sp_home_seriesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_home_series to aggregate.
     */
    where?: sp_home_seriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_home_series to fetch.
     */
    orderBy?: sp_home_seriesOrderByWithRelationInput | sp_home_seriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sp_home_seriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_home_series from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_home_series.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sp_home_series
    **/
    _count?: true | Sp_home_seriesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sp_home_seriesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sp_home_seriesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sp_home_seriesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sp_home_seriesMaxAggregateInputType
  }

  export type GetSp_home_seriesAggregateType<T extends Sp_home_seriesAggregateArgs> = {
        [P in keyof T & keyof AggregateSp_home_series]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSp_home_series[P]>
      : GetScalarType<T[P], AggregateSp_home_series[P]>
  }




  export type sp_home_seriesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sp_home_seriesWhereInput
    orderBy?: sp_home_seriesOrderByWithAggregationInput | sp_home_seriesOrderByWithAggregationInput[]
    by: Sp_home_seriesScalarFieldEnum[] | Sp_home_seriesScalarFieldEnum
    having?: sp_home_seriesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sp_home_seriesCountAggregateInputType | true
    _avg?: Sp_home_seriesAvgAggregateInputType
    _sum?: Sp_home_seriesSumAggregateInputType
    _min?: Sp_home_seriesMinAggregateInputType
    _max?: Sp_home_seriesMaxAggregateInputType
  }

  export type Sp_home_seriesGroupByOutputType = {
    id: number
    title: string
    icon: string
    desc: string
    sort: number
    is_more: boolean | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
    _count: Sp_home_seriesCountAggregateOutputType | null
    _avg: Sp_home_seriesAvgAggregateOutputType | null
    _sum: Sp_home_seriesSumAggregateOutputType | null
    _min: Sp_home_seriesMinAggregateOutputType | null
    _max: Sp_home_seriesMaxAggregateOutputType | null
  }

  type GetSp_home_seriesGroupByPayload<T extends sp_home_seriesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sp_home_seriesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sp_home_seriesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sp_home_seriesGroupByOutputType[P]>
            : GetScalarType<T[P], Sp_home_seriesGroupByOutputType[P]>
        }
      >
    >


  export type sp_home_seriesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    icon?: boolean
    desc?: boolean
    sort?: boolean
    is_more?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }, ExtArgs["result"]["sp_home_series"]>


  export type sp_home_seriesSelectScalar = {
    id?: boolean
    title?: boolean
    icon?: boolean
    desc?: boolean
    sort?: boolean
    is_more?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }


  export type $sp_home_seriesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sp_home_series"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      title: string
      icon: string
      desc: string
      sort: number
      is_more: boolean | null
      created_at: Date | null
      updated_at: Date | null
      deleted_at: Date | null
    }, ExtArgs["result"]["sp_home_series"]>
    composites: {}
  }

  type sp_home_seriesGetPayload<S extends boolean | null | undefined | sp_home_seriesDefaultArgs> = $Result.GetResult<Prisma.$sp_home_seriesPayload, S>

  type sp_home_seriesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<sp_home_seriesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Sp_home_seriesCountAggregateInputType | true
    }

  export interface sp_home_seriesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sp_home_series'], meta: { name: 'sp_home_series' } }
    /**
     * Find zero or one Sp_home_series that matches the filter.
     * @param {sp_home_seriesFindUniqueArgs} args - Arguments to find a Sp_home_series
     * @example
     * // Get one Sp_home_series
     * const sp_home_series = await prisma.sp_home_series.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sp_home_seriesFindUniqueArgs>(args: SelectSubset<T, sp_home_seriesFindUniqueArgs<ExtArgs>>): Prisma__sp_home_seriesClient<$Result.GetResult<Prisma.$sp_home_seriesPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Sp_home_series that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {sp_home_seriesFindUniqueOrThrowArgs} args - Arguments to find a Sp_home_series
     * @example
     * // Get one Sp_home_series
     * const sp_home_series = await prisma.sp_home_series.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sp_home_seriesFindUniqueOrThrowArgs>(args: SelectSubset<T, sp_home_seriesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sp_home_seriesClient<$Result.GetResult<Prisma.$sp_home_seriesPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Sp_home_series that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_home_seriesFindFirstArgs} args - Arguments to find a Sp_home_series
     * @example
     * // Get one Sp_home_series
     * const sp_home_series = await prisma.sp_home_series.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sp_home_seriesFindFirstArgs>(args?: SelectSubset<T, sp_home_seriesFindFirstArgs<ExtArgs>>): Prisma__sp_home_seriesClient<$Result.GetResult<Prisma.$sp_home_seriesPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Sp_home_series that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_home_seriesFindFirstOrThrowArgs} args - Arguments to find a Sp_home_series
     * @example
     * // Get one Sp_home_series
     * const sp_home_series = await prisma.sp_home_series.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sp_home_seriesFindFirstOrThrowArgs>(args?: SelectSubset<T, sp_home_seriesFindFirstOrThrowArgs<ExtArgs>>): Prisma__sp_home_seriesClient<$Result.GetResult<Prisma.$sp_home_seriesPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Sp_home_series that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_home_seriesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sp_home_series
     * const sp_home_series = await prisma.sp_home_series.findMany()
     * 
     * // Get first 10 Sp_home_series
     * const sp_home_series = await prisma.sp_home_series.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sp_home_seriesWithIdOnly = await prisma.sp_home_series.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sp_home_seriesFindManyArgs>(args?: SelectSubset<T, sp_home_seriesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sp_home_seriesPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Sp_home_series.
     * @param {sp_home_seriesCreateArgs} args - Arguments to create a Sp_home_series.
     * @example
     * // Create one Sp_home_series
     * const Sp_home_series = await prisma.sp_home_series.create({
     *   data: {
     *     // ... data to create a Sp_home_series
     *   }
     * })
     * 
     */
    create<T extends sp_home_seriesCreateArgs>(args: SelectSubset<T, sp_home_seriesCreateArgs<ExtArgs>>): Prisma__sp_home_seriesClient<$Result.GetResult<Prisma.$sp_home_seriesPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Sp_home_series.
     * @param {sp_home_seriesCreateManyArgs} args - Arguments to create many Sp_home_series.
     * @example
     * // Create many Sp_home_series
     * const sp_home_series = await prisma.sp_home_series.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sp_home_seriesCreateManyArgs>(args?: SelectSubset<T, sp_home_seriesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sp_home_series.
     * @param {sp_home_seriesDeleteArgs} args - Arguments to delete one Sp_home_series.
     * @example
     * // Delete one Sp_home_series
     * const Sp_home_series = await prisma.sp_home_series.delete({
     *   where: {
     *     // ... filter to delete one Sp_home_series
     *   }
     * })
     * 
     */
    delete<T extends sp_home_seriesDeleteArgs>(args: SelectSubset<T, sp_home_seriesDeleteArgs<ExtArgs>>): Prisma__sp_home_seriesClient<$Result.GetResult<Prisma.$sp_home_seriesPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Sp_home_series.
     * @param {sp_home_seriesUpdateArgs} args - Arguments to update one Sp_home_series.
     * @example
     * // Update one Sp_home_series
     * const sp_home_series = await prisma.sp_home_series.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sp_home_seriesUpdateArgs>(args: SelectSubset<T, sp_home_seriesUpdateArgs<ExtArgs>>): Prisma__sp_home_seriesClient<$Result.GetResult<Prisma.$sp_home_seriesPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Sp_home_series.
     * @param {sp_home_seriesDeleteManyArgs} args - Arguments to filter Sp_home_series to delete.
     * @example
     * // Delete a few Sp_home_series
     * const { count } = await prisma.sp_home_series.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sp_home_seriesDeleteManyArgs>(args?: SelectSubset<T, sp_home_seriesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sp_home_series.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_home_seriesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sp_home_series
     * const sp_home_series = await prisma.sp_home_series.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sp_home_seriesUpdateManyArgs>(args: SelectSubset<T, sp_home_seriesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sp_home_series.
     * @param {sp_home_seriesUpsertArgs} args - Arguments to update or create a Sp_home_series.
     * @example
     * // Update or create a Sp_home_series
     * const sp_home_series = await prisma.sp_home_series.upsert({
     *   create: {
     *     // ... data to create a Sp_home_series
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sp_home_series we want to update
     *   }
     * })
     */
    upsert<T extends sp_home_seriesUpsertArgs>(args: SelectSubset<T, sp_home_seriesUpsertArgs<ExtArgs>>): Prisma__sp_home_seriesClient<$Result.GetResult<Prisma.$sp_home_seriesPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Sp_home_series.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_home_seriesCountArgs} args - Arguments to filter Sp_home_series to count.
     * @example
     * // Count the number of Sp_home_series
     * const count = await prisma.sp_home_series.count({
     *   where: {
     *     // ... the filter for the Sp_home_series we want to count
     *   }
     * })
    **/
    count<T extends sp_home_seriesCountArgs>(
      args?: Subset<T, sp_home_seriesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sp_home_seriesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sp_home_series.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sp_home_seriesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sp_home_seriesAggregateArgs>(args: Subset<T, Sp_home_seriesAggregateArgs>): Prisma.PrismaPromise<GetSp_home_seriesAggregateType<T>>

    /**
     * Group by Sp_home_series.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_home_seriesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sp_home_seriesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sp_home_seriesGroupByArgs['orderBy'] }
        : { orderBy?: sp_home_seriesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sp_home_seriesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSp_home_seriesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sp_home_series model
   */
  readonly fields: sp_home_seriesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sp_home_series.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sp_home_seriesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sp_home_series model
   */ 
  interface sp_home_seriesFieldRefs {
    readonly id: FieldRef<"sp_home_series", 'Int'>
    readonly title: FieldRef<"sp_home_series", 'String'>
    readonly icon: FieldRef<"sp_home_series", 'String'>
    readonly desc: FieldRef<"sp_home_series", 'String'>
    readonly sort: FieldRef<"sp_home_series", 'Int'>
    readonly is_more: FieldRef<"sp_home_series", 'Boolean'>
    readonly created_at: FieldRef<"sp_home_series", 'DateTime'>
    readonly updated_at: FieldRef<"sp_home_series", 'DateTime'>
    readonly deleted_at: FieldRef<"sp_home_series", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sp_home_series findUnique
   */
  export type sp_home_seriesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_home_series
     */
    select?: sp_home_seriesSelect<ExtArgs> | null
    /**
     * Filter, which sp_home_series to fetch.
     */
    where: sp_home_seriesWhereUniqueInput
  }

  /**
   * sp_home_series findUniqueOrThrow
   */
  export type sp_home_seriesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_home_series
     */
    select?: sp_home_seriesSelect<ExtArgs> | null
    /**
     * Filter, which sp_home_series to fetch.
     */
    where: sp_home_seriesWhereUniqueInput
  }

  /**
   * sp_home_series findFirst
   */
  export type sp_home_seriesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_home_series
     */
    select?: sp_home_seriesSelect<ExtArgs> | null
    /**
     * Filter, which sp_home_series to fetch.
     */
    where?: sp_home_seriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_home_series to fetch.
     */
    orderBy?: sp_home_seriesOrderByWithRelationInput | sp_home_seriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_home_series.
     */
    cursor?: sp_home_seriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_home_series from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_home_series.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_home_series.
     */
    distinct?: Sp_home_seriesScalarFieldEnum | Sp_home_seriesScalarFieldEnum[]
  }

  /**
   * sp_home_series findFirstOrThrow
   */
  export type sp_home_seriesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_home_series
     */
    select?: sp_home_seriesSelect<ExtArgs> | null
    /**
     * Filter, which sp_home_series to fetch.
     */
    where?: sp_home_seriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_home_series to fetch.
     */
    orderBy?: sp_home_seriesOrderByWithRelationInput | sp_home_seriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_home_series.
     */
    cursor?: sp_home_seriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_home_series from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_home_series.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_home_series.
     */
    distinct?: Sp_home_seriesScalarFieldEnum | Sp_home_seriesScalarFieldEnum[]
  }

  /**
   * sp_home_series findMany
   */
  export type sp_home_seriesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_home_series
     */
    select?: sp_home_seriesSelect<ExtArgs> | null
    /**
     * Filter, which sp_home_series to fetch.
     */
    where?: sp_home_seriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_home_series to fetch.
     */
    orderBy?: sp_home_seriesOrderByWithRelationInput | sp_home_seriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sp_home_series.
     */
    cursor?: sp_home_seriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_home_series from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_home_series.
     */
    skip?: number
    distinct?: Sp_home_seriesScalarFieldEnum | Sp_home_seriesScalarFieldEnum[]
  }

  /**
   * sp_home_series create
   */
  export type sp_home_seriesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_home_series
     */
    select?: sp_home_seriesSelect<ExtArgs> | null
    /**
     * The data needed to create a sp_home_series.
     */
    data?: XOR<sp_home_seriesCreateInput, sp_home_seriesUncheckedCreateInput>
  }

  /**
   * sp_home_series createMany
   */
  export type sp_home_seriesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sp_home_series.
     */
    data: sp_home_seriesCreateManyInput | sp_home_seriesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sp_home_series update
   */
  export type sp_home_seriesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_home_series
     */
    select?: sp_home_seriesSelect<ExtArgs> | null
    /**
     * The data needed to update a sp_home_series.
     */
    data: XOR<sp_home_seriesUpdateInput, sp_home_seriesUncheckedUpdateInput>
    /**
     * Choose, which sp_home_series to update.
     */
    where: sp_home_seriesWhereUniqueInput
  }

  /**
   * sp_home_series updateMany
   */
  export type sp_home_seriesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sp_home_series.
     */
    data: XOR<sp_home_seriesUpdateManyMutationInput, sp_home_seriesUncheckedUpdateManyInput>
    /**
     * Filter which sp_home_series to update
     */
    where?: sp_home_seriesWhereInput
  }

  /**
   * sp_home_series upsert
   */
  export type sp_home_seriesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_home_series
     */
    select?: sp_home_seriesSelect<ExtArgs> | null
    /**
     * The filter to search for the sp_home_series to update in case it exists.
     */
    where: sp_home_seriesWhereUniqueInput
    /**
     * In case the sp_home_series found by the `where` argument doesn't exist, create a new sp_home_series with this data.
     */
    create: XOR<sp_home_seriesCreateInput, sp_home_seriesUncheckedCreateInput>
    /**
     * In case the sp_home_series was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sp_home_seriesUpdateInput, sp_home_seriesUncheckedUpdateInput>
  }

  /**
   * sp_home_series delete
   */
  export type sp_home_seriesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_home_series
     */
    select?: sp_home_seriesSelect<ExtArgs> | null
    /**
     * Filter which sp_home_series to delete.
     */
    where: sp_home_seriesWhereUniqueInput
  }

  /**
   * sp_home_series deleteMany
   */
  export type sp_home_seriesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_home_series to delete
     */
    where?: sp_home_seriesWhereInput
  }

  /**
   * sp_home_series without action
   */
  export type sp_home_seriesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_home_series
     */
    select?: sp_home_seriesSelect<ExtArgs> | null
  }


  /**
   * Model sp_login_logs
   */

  export type AggregateSp_login_logs = {
    _count: Sp_login_logsCountAggregateOutputType | null
    _avg: Sp_login_logsAvgAggregateOutputType | null
    _sum: Sp_login_logsSumAggregateOutputType | null
    _min: Sp_login_logsMinAggregateOutputType | null
    _max: Sp_login_logsMaxAggregateOutputType | null
  }

  export type Sp_login_logsAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
  }

  export type Sp_login_logsSumAggregateOutputType = {
    id: bigint | null
    user_id: bigint | null
  }

  export type Sp_login_logsMinAggregateOutputType = {
    id: bigint | null
    user_id: bigint | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_login_logsMaxAggregateOutputType = {
    id: bigint | null
    user_id: bigint | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_login_logsCountAggregateOutputType = {
    id: number
    user_id: number
    logs: number
    created_at: number
    updated_at: number
    deleted_at: number
    _all: number
  }


  export type Sp_login_logsAvgAggregateInputType = {
    id?: true
    user_id?: true
  }

  export type Sp_login_logsSumAggregateInputType = {
    id?: true
    user_id?: true
  }

  export type Sp_login_logsMinAggregateInputType = {
    id?: true
    user_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sp_login_logsMaxAggregateInputType = {
    id?: true
    user_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sp_login_logsCountAggregateInputType = {
    id?: true
    user_id?: true
    logs?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    _all?: true
  }

  export type Sp_login_logsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_login_logs to aggregate.
     */
    where?: sp_login_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_login_logs to fetch.
     */
    orderBy?: sp_login_logsOrderByWithRelationInput | sp_login_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sp_login_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_login_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_login_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sp_login_logs
    **/
    _count?: true | Sp_login_logsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sp_login_logsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sp_login_logsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sp_login_logsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sp_login_logsMaxAggregateInputType
  }

  export type GetSp_login_logsAggregateType<T extends Sp_login_logsAggregateArgs> = {
        [P in keyof T & keyof AggregateSp_login_logs]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSp_login_logs[P]>
      : GetScalarType<T[P], AggregateSp_login_logs[P]>
  }




  export type sp_login_logsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sp_login_logsWhereInput
    orderBy?: sp_login_logsOrderByWithAggregationInput | sp_login_logsOrderByWithAggregationInput[]
    by: Sp_login_logsScalarFieldEnum[] | Sp_login_logsScalarFieldEnum
    having?: sp_login_logsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sp_login_logsCountAggregateInputType | true
    _avg?: Sp_login_logsAvgAggregateInputType
    _sum?: Sp_login_logsSumAggregateInputType
    _min?: Sp_login_logsMinAggregateInputType
    _max?: Sp_login_logsMaxAggregateInputType
  }

  export type Sp_login_logsGroupByOutputType = {
    id: bigint
    user_id: bigint
    logs: JsonValue | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
    _count: Sp_login_logsCountAggregateOutputType | null
    _avg: Sp_login_logsAvgAggregateOutputType | null
    _sum: Sp_login_logsSumAggregateOutputType | null
    _min: Sp_login_logsMinAggregateOutputType | null
    _max: Sp_login_logsMaxAggregateOutputType | null
  }

  type GetSp_login_logsGroupByPayload<T extends sp_login_logsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sp_login_logsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sp_login_logsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sp_login_logsGroupByOutputType[P]>
            : GetScalarType<T[P], Sp_login_logsGroupByOutputType[P]>
        }
      >
    >


  export type sp_login_logsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    logs?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }, ExtArgs["result"]["sp_login_logs"]>


  export type sp_login_logsSelectScalar = {
    id?: boolean
    user_id?: boolean
    logs?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }


  export type $sp_login_logsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sp_login_logs"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      user_id: bigint
      logs: Prisma.JsonValue | null
      created_at: Date | null
      updated_at: Date | null
      deleted_at: Date | null
    }, ExtArgs["result"]["sp_login_logs"]>
    composites: {}
  }

  type sp_login_logsGetPayload<S extends boolean | null | undefined | sp_login_logsDefaultArgs> = $Result.GetResult<Prisma.$sp_login_logsPayload, S>

  type sp_login_logsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<sp_login_logsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Sp_login_logsCountAggregateInputType | true
    }

  export interface sp_login_logsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sp_login_logs'], meta: { name: 'sp_login_logs' } }
    /**
     * Find zero or one Sp_login_logs that matches the filter.
     * @param {sp_login_logsFindUniqueArgs} args - Arguments to find a Sp_login_logs
     * @example
     * // Get one Sp_login_logs
     * const sp_login_logs = await prisma.sp_login_logs.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sp_login_logsFindUniqueArgs>(args: SelectSubset<T, sp_login_logsFindUniqueArgs<ExtArgs>>): Prisma__sp_login_logsClient<$Result.GetResult<Prisma.$sp_login_logsPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Sp_login_logs that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {sp_login_logsFindUniqueOrThrowArgs} args - Arguments to find a Sp_login_logs
     * @example
     * // Get one Sp_login_logs
     * const sp_login_logs = await prisma.sp_login_logs.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sp_login_logsFindUniqueOrThrowArgs>(args: SelectSubset<T, sp_login_logsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sp_login_logsClient<$Result.GetResult<Prisma.$sp_login_logsPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Sp_login_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_login_logsFindFirstArgs} args - Arguments to find a Sp_login_logs
     * @example
     * // Get one Sp_login_logs
     * const sp_login_logs = await prisma.sp_login_logs.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sp_login_logsFindFirstArgs>(args?: SelectSubset<T, sp_login_logsFindFirstArgs<ExtArgs>>): Prisma__sp_login_logsClient<$Result.GetResult<Prisma.$sp_login_logsPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Sp_login_logs that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_login_logsFindFirstOrThrowArgs} args - Arguments to find a Sp_login_logs
     * @example
     * // Get one Sp_login_logs
     * const sp_login_logs = await prisma.sp_login_logs.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sp_login_logsFindFirstOrThrowArgs>(args?: SelectSubset<T, sp_login_logsFindFirstOrThrowArgs<ExtArgs>>): Prisma__sp_login_logsClient<$Result.GetResult<Prisma.$sp_login_logsPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Sp_login_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_login_logsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sp_login_logs
     * const sp_login_logs = await prisma.sp_login_logs.findMany()
     * 
     * // Get first 10 Sp_login_logs
     * const sp_login_logs = await prisma.sp_login_logs.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sp_login_logsWithIdOnly = await prisma.sp_login_logs.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sp_login_logsFindManyArgs>(args?: SelectSubset<T, sp_login_logsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sp_login_logsPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Sp_login_logs.
     * @param {sp_login_logsCreateArgs} args - Arguments to create a Sp_login_logs.
     * @example
     * // Create one Sp_login_logs
     * const Sp_login_logs = await prisma.sp_login_logs.create({
     *   data: {
     *     // ... data to create a Sp_login_logs
     *   }
     * })
     * 
     */
    create<T extends sp_login_logsCreateArgs>(args: SelectSubset<T, sp_login_logsCreateArgs<ExtArgs>>): Prisma__sp_login_logsClient<$Result.GetResult<Prisma.$sp_login_logsPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Sp_login_logs.
     * @param {sp_login_logsCreateManyArgs} args - Arguments to create many Sp_login_logs.
     * @example
     * // Create many Sp_login_logs
     * const sp_login_logs = await prisma.sp_login_logs.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sp_login_logsCreateManyArgs>(args?: SelectSubset<T, sp_login_logsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sp_login_logs.
     * @param {sp_login_logsDeleteArgs} args - Arguments to delete one Sp_login_logs.
     * @example
     * // Delete one Sp_login_logs
     * const Sp_login_logs = await prisma.sp_login_logs.delete({
     *   where: {
     *     // ... filter to delete one Sp_login_logs
     *   }
     * })
     * 
     */
    delete<T extends sp_login_logsDeleteArgs>(args: SelectSubset<T, sp_login_logsDeleteArgs<ExtArgs>>): Prisma__sp_login_logsClient<$Result.GetResult<Prisma.$sp_login_logsPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Sp_login_logs.
     * @param {sp_login_logsUpdateArgs} args - Arguments to update one Sp_login_logs.
     * @example
     * // Update one Sp_login_logs
     * const sp_login_logs = await prisma.sp_login_logs.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sp_login_logsUpdateArgs>(args: SelectSubset<T, sp_login_logsUpdateArgs<ExtArgs>>): Prisma__sp_login_logsClient<$Result.GetResult<Prisma.$sp_login_logsPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Sp_login_logs.
     * @param {sp_login_logsDeleteManyArgs} args - Arguments to filter Sp_login_logs to delete.
     * @example
     * // Delete a few Sp_login_logs
     * const { count } = await prisma.sp_login_logs.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sp_login_logsDeleteManyArgs>(args?: SelectSubset<T, sp_login_logsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sp_login_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_login_logsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sp_login_logs
     * const sp_login_logs = await prisma.sp_login_logs.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sp_login_logsUpdateManyArgs>(args: SelectSubset<T, sp_login_logsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sp_login_logs.
     * @param {sp_login_logsUpsertArgs} args - Arguments to update or create a Sp_login_logs.
     * @example
     * // Update or create a Sp_login_logs
     * const sp_login_logs = await prisma.sp_login_logs.upsert({
     *   create: {
     *     // ... data to create a Sp_login_logs
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sp_login_logs we want to update
     *   }
     * })
     */
    upsert<T extends sp_login_logsUpsertArgs>(args: SelectSubset<T, sp_login_logsUpsertArgs<ExtArgs>>): Prisma__sp_login_logsClient<$Result.GetResult<Prisma.$sp_login_logsPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Sp_login_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_login_logsCountArgs} args - Arguments to filter Sp_login_logs to count.
     * @example
     * // Count the number of Sp_login_logs
     * const count = await prisma.sp_login_logs.count({
     *   where: {
     *     // ... the filter for the Sp_login_logs we want to count
     *   }
     * })
    **/
    count<T extends sp_login_logsCountArgs>(
      args?: Subset<T, sp_login_logsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sp_login_logsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sp_login_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sp_login_logsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sp_login_logsAggregateArgs>(args: Subset<T, Sp_login_logsAggregateArgs>): Prisma.PrismaPromise<GetSp_login_logsAggregateType<T>>

    /**
     * Group by Sp_login_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_login_logsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sp_login_logsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sp_login_logsGroupByArgs['orderBy'] }
        : { orderBy?: sp_login_logsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sp_login_logsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSp_login_logsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sp_login_logs model
   */
  readonly fields: sp_login_logsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sp_login_logs.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sp_login_logsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sp_login_logs model
   */ 
  interface sp_login_logsFieldRefs {
    readonly id: FieldRef<"sp_login_logs", 'BigInt'>
    readonly user_id: FieldRef<"sp_login_logs", 'BigInt'>
    readonly logs: FieldRef<"sp_login_logs", 'Json'>
    readonly created_at: FieldRef<"sp_login_logs", 'DateTime'>
    readonly updated_at: FieldRef<"sp_login_logs", 'DateTime'>
    readonly deleted_at: FieldRef<"sp_login_logs", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sp_login_logs findUnique
   */
  export type sp_login_logsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_login_logs
     */
    select?: sp_login_logsSelect<ExtArgs> | null
    /**
     * Filter, which sp_login_logs to fetch.
     */
    where: sp_login_logsWhereUniqueInput
  }

  /**
   * sp_login_logs findUniqueOrThrow
   */
  export type sp_login_logsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_login_logs
     */
    select?: sp_login_logsSelect<ExtArgs> | null
    /**
     * Filter, which sp_login_logs to fetch.
     */
    where: sp_login_logsWhereUniqueInput
  }

  /**
   * sp_login_logs findFirst
   */
  export type sp_login_logsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_login_logs
     */
    select?: sp_login_logsSelect<ExtArgs> | null
    /**
     * Filter, which sp_login_logs to fetch.
     */
    where?: sp_login_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_login_logs to fetch.
     */
    orderBy?: sp_login_logsOrderByWithRelationInput | sp_login_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_login_logs.
     */
    cursor?: sp_login_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_login_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_login_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_login_logs.
     */
    distinct?: Sp_login_logsScalarFieldEnum | Sp_login_logsScalarFieldEnum[]
  }

  /**
   * sp_login_logs findFirstOrThrow
   */
  export type sp_login_logsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_login_logs
     */
    select?: sp_login_logsSelect<ExtArgs> | null
    /**
     * Filter, which sp_login_logs to fetch.
     */
    where?: sp_login_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_login_logs to fetch.
     */
    orderBy?: sp_login_logsOrderByWithRelationInput | sp_login_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_login_logs.
     */
    cursor?: sp_login_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_login_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_login_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_login_logs.
     */
    distinct?: Sp_login_logsScalarFieldEnum | Sp_login_logsScalarFieldEnum[]
  }

  /**
   * sp_login_logs findMany
   */
  export type sp_login_logsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_login_logs
     */
    select?: sp_login_logsSelect<ExtArgs> | null
    /**
     * Filter, which sp_login_logs to fetch.
     */
    where?: sp_login_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_login_logs to fetch.
     */
    orderBy?: sp_login_logsOrderByWithRelationInput | sp_login_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sp_login_logs.
     */
    cursor?: sp_login_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_login_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_login_logs.
     */
    skip?: number
    distinct?: Sp_login_logsScalarFieldEnum | Sp_login_logsScalarFieldEnum[]
  }

  /**
   * sp_login_logs create
   */
  export type sp_login_logsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_login_logs
     */
    select?: sp_login_logsSelect<ExtArgs> | null
    /**
     * The data needed to create a sp_login_logs.
     */
    data: XOR<sp_login_logsCreateInput, sp_login_logsUncheckedCreateInput>
  }

  /**
   * sp_login_logs createMany
   */
  export type sp_login_logsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sp_login_logs.
     */
    data: sp_login_logsCreateManyInput | sp_login_logsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sp_login_logs update
   */
  export type sp_login_logsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_login_logs
     */
    select?: sp_login_logsSelect<ExtArgs> | null
    /**
     * The data needed to update a sp_login_logs.
     */
    data: XOR<sp_login_logsUpdateInput, sp_login_logsUncheckedUpdateInput>
    /**
     * Choose, which sp_login_logs to update.
     */
    where: sp_login_logsWhereUniqueInput
  }

  /**
   * sp_login_logs updateMany
   */
  export type sp_login_logsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sp_login_logs.
     */
    data: XOR<sp_login_logsUpdateManyMutationInput, sp_login_logsUncheckedUpdateManyInput>
    /**
     * Filter which sp_login_logs to update
     */
    where?: sp_login_logsWhereInput
  }

  /**
   * sp_login_logs upsert
   */
  export type sp_login_logsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_login_logs
     */
    select?: sp_login_logsSelect<ExtArgs> | null
    /**
     * The filter to search for the sp_login_logs to update in case it exists.
     */
    where: sp_login_logsWhereUniqueInput
    /**
     * In case the sp_login_logs found by the `where` argument doesn't exist, create a new sp_login_logs with this data.
     */
    create: XOR<sp_login_logsCreateInput, sp_login_logsUncheckedCreateInput>
    /**
     * In case the sp_login_logs was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sp_login_logsUpdateInput, sp_login_logsUncheckedUpdateInput>
  }

  /**
   * sp_login_logs delete
   */
  export type sp_login_logsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_login_logs
     */
    select?: sp_login_logsSelect<ExtArgs> | null
    /**
     * Filter which sp_login_logs to delete.
     */
    where: sp_login_logsWhereUniqueInput
  }

  /**
   * sp_login_logs deleteMany
   */
  export type sp_login_logsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_login_logs to delete
     */
    where?: sp_login_logsWhereInput
  }

  /**
   * sp_login_logs without action
   */
  export type sp_login_logsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_login_logs
     */
    select?: sp_login_logsSelect<ExtArgs> | null
  }


  /**
   * Model sp_migrations
   */

  export type AggregateSp_migrations = {
    _count: Sp_migrationsCountAggregateOutputType | null
    _avg: Sp_migrationsAvgAggregateOutputType | null
    _sum: Sp_migrationsSumAggregateOutputType | null
    _min: Sp_migrationsMinAggregateOutputType | null
    _max: Sp_migrationsMaxAggregateOutputType | null
  }

  export type Sp_migrationsAvgAggregateOutputType = {
    id: number | null
    batch: number | null
  }

  export type Sp_migrationsSumAggregateOutputType = {
    id: number | null
    batch: number | null
  }

  export type Sp_migrationsMinAggregateOutputType = {
    id: number | null
    migration: string | null
    batch: number | null
  }

  export type Sp_migrationsMaxAggregateOutputType = {
    id: number | null
    migration: string | null
    batch: number | null
  }

  export type Sp_migrationsCountAggregateOutputType = {
    id: number
    migration: number
    batch: number
    _all: number
  }


  export type Sp_migrationsAvgAggregateInputType = {
    id?: true
    batch?: true
  }

  export type Sp_migrationsSumAggregateInputType = {
    id?: true
    batch?: true
  }

  export type Sp_migrationsMinAggregateInputType = {
    id?: true
    migration?: true
    batch?: true
  }

  export type Sp_migrationsMaxAggregateInputType = {
    id?: true
    migration?: true
    batch?: true
  }

  export type Sp_migrationsCountAggregateInputType = {
    id?: true
    migration?: true
    batch?: true
    _all?: true
  }

  export type Sp_migrationsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_migrations to aggregate.
     */
    where?: sp_migrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_migrations to fetch.
     */
    orderBy?: sp_migrationsOrderByWithRelationInput | sp_migrationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sp_migrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_migrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_migrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sp_migrations
    **/
    _count?: true | Sp_migrationsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sp_migrationsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sp_migrationsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sp_migrationsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sp_migrationsMaxAggregateInputType
  }

  export type GetSp_migrationsAggregateType<T extends Sp_migrationsAggregateArgs> = {
        [P in keyof T & keyof AggregateSp_migrations]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSp_migrations[P]>
      : GetScalarType<T[P], AggregateSp_migrations[P]>
  }




  export type sp_migrationsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sp_migrationsWhereInput
    orderBy?: sp_migrationsOrderByWithAggregationInput | sp_migrationsOrderByWithAggregationInput[]
    by: Sp_migrationsScalarFieldEnum[] | Sp_migrationsScalarFieldEnum
    having?: sp_migrationsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sp_migrationsCountAggregateInputType | true
    _avg?: Sp_migrationsAvgAggregateInputType
    _sum?: Sp_migrationsSumAggregateInputType
    _min?: Sp_migrationsMinAggregateInputType
    _max?: Sp_migrationsMaxAggregateInputType
  }

  export type Sp_migrationsGroupByOutputType = {
    id: number
    migration: string
    batch: number
    _count: Sp_migrationsCountAggregateOutputType | null
    _avg: Sp_migrationsAvgAggregateOutputType | null
    _sum: Sp_migrationsSumAggregateOutputType | null
    _min: Sp_migrationsMinAggregateOutputType | null
    _max: Sp_migrationsMaxAggregateOutputType | null
  }

  type GetSp_migrationsGroupByPayload<T extends sp_migrationsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sp_migrationsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sp_migrationsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sp_migrationsGroupByOutputType[P]>
            : GetScalarType<T[P], Sp_migrationsGroupByOutputType[P]>
        }
      >
    >


  export type sp_migrationsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    migration?: boolean
    batch?: boolean
  }, ExtArgs["result"]["sp_migrations"]>


  export type sp_migrationsSelectScalar = {
    id?: boolean
    migration?: boolean
    batch?: boolean
  }


  export type $sp_migrationsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sp_migrations"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      migration: string
      batch: number
    }, ExtArgs["result"]["sp_migrations"]>
    composites: {}
  }

  type sp_migrationsGetPayload<S extends boolean | null | undefined | sp_migrationsDefaultArgs> = $Result.GetResult<Prisma.$sp_migrationsPayload, S>

  type sp_migrationsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<sp_migrationsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Sp_migrationsCountAggregateInputType | true
    }

  export interface sp_migrationsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sp_migrations'], meta: { name: 'sp_migrations' } }
    /**
     * Find zero or one Sp_migrations that matches the filter.
     * @param {sp_migrationsFindUniqueArgs} args - Arguments to find a Sp_migrations
     * @example
     * // Get one Sp_migrations
     * const sp_migrations = await prisma.sp_migrations.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sp_migrationsFindUniqueArgs>(args: SelectSubset<T, sp_migrationsFindUniqueArgs<ExtArgs>>): Prisma__sp_migrationsClient<$Result.GetResult<Prisma.$sp_migrationsPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Sp_migrations that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {sp_migrationsFindUniqueOrThrowArgs} args - Arguments to find a Sp_migrations
     * @example
     * // Get one Sp_migrations
     * const sp_migrations = await prisma.sp_migrations.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sp_migrationsFindUniqueOrThrowArgs>(args: SelectSubset<T, sp_migrationsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sp_migrationsClient<$Result.GetResult<Prisma.$sp_migrationsPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Sp_migrations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_migrationsFindFirstArgs} args - Arguments to find a Sp_migrations
     * @example
     * // Get one Sp_migrations
     * const sp_migrations = await prisma.sp_migrations.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sp_migrationsFindFirstArgs>(args?: SelectSubset<T, sp_migrationsFindFirstArgs<ExtArgs>>): Prisma__sp_migrationsClient<$Result.GetResult<Prisma.$sp_migrationsPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Sp_migrations that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_migrationsFindFirstOrThrowArgs} args - Arguments to find a Sp_migrations
     * @example
     * // Get one Sp_migrations
     * const sp_migrations = await prisma.sp_migrations.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sp_migrationsFindFirstOrThrowArgs>(args?: SelectSubset<T, sp_migrationsFindFirstOrThrowArgs<ExtArgs>>): Prisma__sp_migrationsClient<$Result.GetResult<Prisma.$sp_migrationsPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Sp_migrations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_migrationsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sp_migrations
     * const sp_migrations = await prisma.sp_migrations.findMany()
     * 
     * // Get first 10 Sp_migrations
     * const sp_migrations = await prisma.sp_migrations.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sp_migrationsWithIdOnly = await prisma.sp_migrations.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sp_migrationsFindManyArgs>(args?: SelectSubset<T, sp_migrationsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sp_migrationsPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Sp_migrations.
     * @param {sp_migrationsCreateArgs} args - Arguments to create a Sp_migrations.
     * @example
     * // Create one Sp_migrations
     * const Sp_migrations = await prisma.sp_migrations.create({
     *   data: {
     *     // ... data to create a Sp_migrations
     *   }
     * })
     * 
     */
    create<T extends sp_migrationsCreateArgs>(args: SelectSubset<T, sp_migrationsCreateArgs<ExtArgs>>): Prisma__sp_migrationsClient<$Result.GetResult<Prisma.$sp_migrationsPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Sp_migrations.
     * @param {sp_migrationsCreateManyArgs} args - Arguments to create many Sp_migrations.
     * @example
     * // Create many Sp_migrations
     * const sp_migrations = await prisma.sp_migrations.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sp_migrationsCreateManyArgs>(args?: SelectSubset<T, sp_migrationsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sp_migrations.
     * @param {sp_migrationsDeleteArgs} args - Arguments to delete one Sp_migrations.
     * @example
     * // Delete one Sp_migrations
     * const Sp_migrations = await prisma.sp_migrations.delete({
     *   where: {
     *     // ... filter to delete one Sp_migrations
     *   }
     * })
     * 
     */
    delete<T extends sp_migrationsDeleteArgs>(args: SelectSubset<T, sp_migrationsDeleteArgs<ExtArgs>>): Prisma__sp_migrationsClient<$Result.GetResult<Prisma.$sp_migrationsPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Sp_migrations.
     * @param {sp_migrationsUpdateArgs} args - Arguments to update one Sp_migrations.
     * @example
     * // Update one Sp_migrations
     * const sp_migrations = await prisma.sp_migrations.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sp_migrationsUpdateArgs>(args: SelectSubset<T, sp_migrationsUpdateArgs<ExtArgs>>): Prisma__sp_migrationsClient<$Result.GetResult<Prisma.$sp_migrationsPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Sp_migrations.
     * @param {sp_migrationsDeleteManyArgs} args - Arguments to filter Sp_migrations to delete.
     * @example
     * // Delete a few Sp_migrations
     * const { count } = await prisma.sp_migrations.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sp_migrationsDeleteManyArgs>(args?: SelectSubset<T, sp_migrationsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sp_migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_migrationsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sp_migrations
     * const sp_migrations = await prisma.sp_migrations.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sp_migrationsUpdateManyArgs>(args: SelectSubset<T, sp_migrationsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sp_migrations.
     * @param {sp_migrationsUpsertArgs} args - Arguments to update or create a Sp_migrations.
     * @example
     * // Update or create a Sp_migrations
     * const sp_migrations = await prisma.sp_migrations.upsert({
     *   create: {
     *     // ... data to create a Sp_migrations
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sp_migrations we want to update
     *   }
     * })
     */
    upsert<T extends sp_migrationsUpsertArgs>(args: SelectSubset<T, sp_migrationsUpsertArgs<ExtArgs>>): Prisma__sp_migrationsClient<$Result.GetResult<Prisma.$sp_migrationsPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Sp_migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_migrationsCountArgs} args - Arguments to filter Sp_migrations to count.
     * @example
     * // Count the number of Sp_migrations
     * const count = await prisma.sp_migrations.count({
     *   where: {
     *     // ... the filter for the Sp_migrations we want to count
     *   }
     * })
    **/
    count<T extends sp_migrationsCountArgs>(
      args?: Subset<T, sp_migrationsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sp_migrationsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sp_migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sp_migrationsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sp_migrationsAggregateArgs>(args: Subset<T, Sp_migrationsAggregateArgs>): Prisma.PrismaPromise<GetSp_migrationsAggregateType<T>>

    /**
     * Group by Sp_migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_migrationsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sp_migrationsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sp_migrationsGroupByArgs['orderBy'] }
        : { orderBy?: sp_migrationsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sp_migrationsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSp_migrationsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sp_migrations model
   */
  readonly fields: sp_migrationsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sp_migrations.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sp_migrationsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sp_migrations model
   */ 
  interface sp_migrationsFieldRefs {
    readonly id: FieldRef<"sp_migrations", 'Int'>
    readonly migration: FieldRef<"sp_migrations", 'String'>
    readonly batch: FieldRef<"sp_migrations", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * sp_migrations findUnique
   */
  export type sp_migrationsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_migrations
     */
    select?: sp_migrationsSelect<ExtArgs> | null
    /**
     * Filter, which sp_migrations to fetch.
     */
    where: sp_migrationsWhereUniqueInput
  }

  /**
   * sp_migrations findUniqueOrThrow
   */
  export type sp_migrationsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_migrations
     */
    select?: sp_migrationsSelect<ExtArgs> | null
    /**
     * Filter, which sp_migrations to fetch.
     */
    where: sp_migrationsWhereUniqueInput
  }

  /**
   * sp_migrations findFirst
   */
  export type sp_migrationsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_migrations
     */
    select?: sp_migrationsSelect<ExtArgs> | null
    /**
     * Filter, which sp_migrations to fetch.
     */
    where?: sp_migrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_migrations to fetch.
     */
    orderBy?: sp_migrationsOrderByWithRelationInput | sp_migrationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_migrations.
     */
    cursor?: sp_migrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_migrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_migrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_migrations.
     */
    distinct?: Sp_migrationsScalarFieldEnum | Sp_migrationsScalarFieldEnum[]
  }

  /**
   * sp_migrations findFirstOrThrow
   */
  export type sp_migrationsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_migrations
     */
    select?: sp_migrationsSelect<ExtArgs> | null
    /**
     * Filter, which sp_migrations to fetch.
     */
    where?: sp_migrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_migrations to fetch.
     */
    orderBy?: sp_migrationsOrderByWithRelationInput | sp_migrationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_migrations.
     */
    cursor?: sp_migrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_migrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_migrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_migrations.
     */
    distinct?: Sp_migrationsScalarFieldEnum | Sp_migrationsScalarFieldEnum[]
  }

  /**
   * sp_migrations findMany
   */
  export type sp_migrationsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_migrations
     */
    select?: sp_migrationsSelect<ExtArgs> | null
    /**
     * Filter, which sp_migrations to fetch.
     */
    where?: sp_migrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_migrations to fetch.
     */
    orderBy?: sp_migrationsOrderByWithRelationInput | sp_migrationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sp_migrations.
     */
    cursor?: sp_migrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_migrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_migrations.
     */
    skip?: number
    distinct?: Sp_migrationsScalarFieldEnum | Sp_migrationsScalarFieldEnum[]
  }

  /**
   * sp_migrations create
   */
  export type sp_migrationsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_migrations
     */
    select?: sp_migrationsSelect<ExtArgs> | null
    /**
     * The data needed to create a sp_migrations.
     */
    data: XOR<sp_migrationsCreateInput, sp_migrationsUncheckedCreateInput>
  }

  /**
   * sp_migrations createMany
   */
  export type sp_migrationsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sp_migrations.
     */
    data: sp_migrationsCreateManyInput | sp_migrationsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sp_migrations update
   */
  export type sp_migrationsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_migrations
     */
    select?: sp_migrationsSelect<ExtArgs> | null
    /**
     * The data needed to update a sp_migrations.
     */
    data: XOR<sp_migrationsUpdateInput, sp_migrationsUncheckedUpdateInput>
    /**
     * Choose, which sp_migrations to update.
     */
    where: sp_migrationsWhereUniqueInput
  }

  /**
   * sp_migrations updateMany
   */
  export type sp_migrationsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sp_migrations.
     */
    data: XOR<sp_migrationsUpdateManyMutationInput, sp_migrationsUncheckedUpdateManyInput>
    /**
     * Filter which sp_migrations to update
     */
    where?: sp_migrationsWhereInput
  }

  /**
   * sp_migrations upsert
   */
  export type sp_migrationsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_migrations
     */
    select?: sp_migrationsSelect<ExtArgs> | null
    /**
     * The filter to search for the sp_migrations to update in case it exists.
     */
    where: sp_migrationsWhereUniqueInput
    /**
     * In case the sp_migrations found by the `where` argument doesn't exist, create a new sp_migrations with this data.
     */
    create: XOR<sp_migrationsCreateInput, sp_migrationsUncheckedCreateInput>
    /**
     * In case the sp_migrations was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sp_migrationsUpdateInput, sp_migrationsUncheckedUpdateInput>
  }

  /**
   * sp_migrations delete
   */
  export type sp_migrationsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_migrations
     */
    select?: sp_migrationsSelect<ExtArgs> | null
    /**
     * Filter which sp_migrations to delete.
     */
    where: sp_migrationsWhereUniqueInput
  }

  /**
   * sp_migrations deleteMany
   */
  export type sp_migrationsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_migrations to delete
     */
    where?: sp_migrationsWhereInput
  }

  /**
   * sp_migrations without action
   */
  export type sp_migrationsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_migrations
     */
    select?: sp_migrationsSelect<ExtArgs> | null
  }


  /**
   * Model sp_orders
   */

  export type AggregateSp_orders = {
    _count: Sp_ordersCountAggregateOutputType | null
    _avg: Sp_ordersAvgAggregateOutputType | null
    _sum: Sp_ordersSumAggregateOutputType | null
    _min: Sp_ordersMinAggregateOutputType | null
    _max: Sp_ordersMaxAggregateOutputType | null
  }

  export type Sp_ordersAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
    goods_id: number | null
    total_amount: Decimal | null
    actual_amount: Decimal | null
  }

  export type Sp_ordersSumAggregateOutputType = {
    id: bigint | null
    user_id: bigint | null
    goods_id: number | null
    total_amount: Decimal | null
    actual_amount: Decimal | null
  }

  export type Sp_ordersMinAggregateOutputType = {
    id: bigint | null
    order_id: string | null
    pay_order_id: string | null
    user_id: bigint | null
    goods_id: number | null
    total_amount: Decimal | null
    actual_amount: Decimal | null
    pay_type: boolean | null
    callback_status: boolean | null
    status: boolean | null
    os_type: boolean | null
    dev_no: string | null
    order_ip: string | null
    order_country: string | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_ordersMaxAggregateOutputType = {
    id: bigint | null
    order_id: string | null
    pay_order_id: string | null
    user_id: bigint | null
    goods_id: number | null
    total_amount: Decimal | null
    actual_amount: Decimal | null
    pay_type: boolean | null
    callback_status: boolean | null
    status: boolean | null
    os_type: boolean | null
    dev_no: string | null
    order_ip: string | null
    order_country: string | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_ordersCountAggregateOutputType = {
    id: number
    order_id: number
    pay_order_id: number
    user_id: number
    goods_id: number
    total_amount: number
    actual_amount: number
    pay_type: number
    callback_status: number
    status: number
    os_type: number
    dev_no: number
    order_ip: number
    order_country: number
    created_at: number
    updated_at: number
    deleted_at: number
    _all: number
  }


  export type Sp_ordersAvgAggregateInputType = {
    id?: true
    user_id?: true
    goods_id?: true
    total_amount?: true
    actual_amount?: true
  }

  export type Sp_ordersSumAggregateInputType = {
    id?: true
    user_id?: true
    goods_id?: true
    total_amount?: true
    actual_amount?: true
  }

  export type Sp_ordersMinAggregateInputType = {
    id?: true
    order_id?: true
    pay_order_id?: true
    user_id?: true
    goods_id?: true
    total_amount?: true
    actual_amount?: true
    pay_type?: true
    callback_status?: true
    status?: true
    os_type?: true
    dev_no?: true
    order_ip?: true
    order_country?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sp_ordersMaxAggregateInputType = {
    id?: true
    order_id?: true
    pay_order_id?: true
    user_id?: true
    goods_id?: true
    total_amount?: true
    actual_amount?: true
    pay_type?: true
    callback_status?: true
    status?: true
    os_type?: true
    dev_no?: true
    order_ip?: true
    order_country?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sp_ordersCountAggregateInputType = {
    id?: true
    order_id?: true
    pay_order_id?: true
    user_id?: true
    goods_id?: true
    total_amount?: true
    actual_amount?: true
    pay_type?: true
    callback_status?: true
    status?: true
    os_type?: true
    dev_no?: true
    order_ip?: true
    order_country?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    _all?: true
  }

  export type Sp_ordersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_orders to aggregate.
     */
    where?: sp_ordersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_orders to fetch.
     */
    orderBy?: sp_ordersOrderByWithRelationInput | sp_ordersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sp_ordersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sp_orders
    **/
    _count?: true | Sp_ordersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sp_ordersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sp_ordersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sp_ordersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sp_ordersMaxAggregateInputType
  }

  export type GetSp_ordersAggregateType<T extends Sp_ordersAggregateArgs> = {
        [P in keyof T & keyof AggregateSp_orders]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSp_orders[P]>
      : GetScalarType<T[P], AggregateSp_orders[P]>
  }




  export type sp_ordersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sp_ordersWhereInput
    orderBy?: sp_ordersOrderByWithAggregationInput | sp_ordersOrderByWithAggregationInput[]
    by: Sp_ordersScalarFieldEnum[] | Sp_ordersScalarFieldEnum
    having?: sp_ordersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sp_ordersCountAggregateInputType | true
    _avg?: Sp_ordersAvgAggregateInputType
    _sum?: Sp_ordersSumAggregateInputType
    _min?: Sp_ordersMinAggregateInputType
    _max?: Sp_ordersMaxAggregateInputType
  }

  export type Sp_ordersGroupByOutputType = {
    id: bigint
    order_id: string
    pay_order_id: string | null
    user_id: bigint
    goods_id: number
    total_amount: Decimal
    actual_amount: Decimal
    pay_type: boolean
    callback_status: boolean | null
    status: boolean
    os_type: boolean | null
    dev_no: string
    order_ip: string
    order_country: string | null
    created_at: Date
    updated_at: Date | null
    deleted_at: Date | null
    _count: Sp_ordersCountAggregateOutputType | null
    _avg: Sp_ordersAvgAggregateOutputType | null
    _sum: Sp_ordersSumAggregateOutputType | null
    _min: Sp_ordersMinAggregateOutputType | null
    _max: Sp_ordersMaxAggregateOutputType | null
  }

  type GetSp_ordersGroupByPayload<T extends sp_ordersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sp_ordersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sp_ordersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sp_ordersGroupByOutputType[P]>
            : GetScalarType<T[P], Sp_ordersGroupByOutputType[P]>
        }
      >
    >


  export type sp_ordersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order_id?: boolean
    pay_order_id?: boolean
    user_id?: boolean
    goods_id?: boolean
    total_amount?: boolean
    actual_amount?: boolean
    pay_type?: boolean
    callback_status?: boolean
    status?: boolean
    os_type?: boolean
    dev_no?: boolean
    order_ip?: boolean
    order_country?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }, ExtArgs["result"]["sp_orders"]>


  export type sp_ordersSelectScalar = {
    id?: boolean
    order_id?: boolean
    pay_order_id?: boolean
    user_id?: boolean
    goods_id?: boolean
    total_amount?: boolean
    actual_amount?: boolean
    pay_type?: boolean
    callback_status?: boolean
    status?: boolean
    os_type?: boolean
    dev_no?: boolean
    order_ip?: boolean
    order_country?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }


  export type $sp_ordersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sp_orders"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      order_id: string
      pay_order_id: string | null
      user_id: bigint
      goods_id: number
      total_amount: Prisma.Decimal
      actual_amount: Prisma.Decimal
      pay_type: boolean
      callback_status: boolean | null
      status: boolean
      os_type: boolean | null
      dev_no: string
      order_ip: string
      order_country: string | null
      created_at: Date
      updated_at: Date | null
      deleted_at: Date | null
    }, ExtArgs["result"]["sp_orders"]>
    composites: {}
  }

  type sp_ordersGetPayload<S extends boolean | null | undefined | sp_ordersDefaultArgs> = $Result.GetResult<Prisma.$sp_ordersPayload, S>

  type sp_ordersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<sp_ordersFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Sp_ordersCountAggregateInputType | true
    }

  export interface sp_ordersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sp_orders'], meta: { name: 'sp_orders' } }
    /**
     * Find zero or one Sp_orders that matches the filter.
     * @param {sp_ordersFindUniqueArgs} args - Arguments to find a Sp_orders
     * @example
     * // Get one Sp_orders
     * const sp_orders = await prisma.sp_orders.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sp_ordersFindUniqueArgs>(args: SelectSubset<T, sp_ordersFindUniqueArgs<ExtArgs>>): Prisma__sp_ordersClient<$Result.GetResult<Prisma.$sp_ordersPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Sp_orders that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {sp_ordersFindUniqueOrThrowArgs} args - Arguments to find a Sp_orders
     * @example
     * // Get one Sp_orders
     * const sp_orders = await prisma.sp_orders.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sp_ordersFindUniqueOrThrowArgs>(args: SelectSubset<T, sp_ordersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sp_ordersClient<$Result.GetResult<Prisma.$sp_ordersPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Sp_orders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_ordersFindFirstArgs} args - Arguments to find a Sp_orders
     * @example
     * // Get one Sp_orders
     * const sp_orders = await prisma.sp_orders.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sp_ordersFindFirstArgs>(args?: SelectSubset<T, sp_ordersFindFirstArgs<ExtArgs>>): Prisma__sp_ordersClient<$Result.GetResult<Prisma.$sp_ordersPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Sp_orders that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_ordersFindFirstOrThrowArgs} args - Arguments to find a Sp_orders
     * @example
     * // Get one Sp_orders
     * const sp_orders = await prisma.sp_orders.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sp_ordersFindFirstOrThrowArgs>(args?: SelectSubset<T, sp_ordersFindFirstOrThrowArgs<ExtArgs>>): Prisma__sp_ordersClient<$Result.GetResult<Prisma.$sp_ordersPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Sp_orders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_ordersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sp_orders
     * const sp_orders = await prisma.sp_orders.findMany()
     * 
     * // Get first 10 Sp_orders
     * const sp_orders = await prisma.sp_orders.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sp_ordersWithIdOnly = await prisma.sp_orders.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sp_ordersFindManyArgs>(args?: SelectSubset<T, sp_ordersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sp_ordersPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Sp_orders.
     * @param {sp_ordersCreateArgs} args - Arguments to create a Sp_orders.
     * @example
     * // Create one Sp_orders
     * const Sp_orders = await prisma.sp_orders.create({
     *   data: {
     *     // ... data to create a Sp_orders
     *   }
     * })
     * 
     */
    create<T extends sp_ordersCreateArgs>(args: SelectSubset<T, sp_ordersCreateArgs<ExtArgs>>): Prisma__sp_ordersClient<$Result.GetResult<Prisma.$sp_ordersPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Sp_orders.
     * @param {sp_ordersCreateManyArgs} args - Arguments to create many Sp_orders.
     * @example
     * // Create many Sp_orders
     * const sp_orders = await prisma.sp_orders.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sp_ordersCreateManyArgs>(args?: SelectSubset<T, sp_ordersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sp_orders.
     * @param {sp_ordersDeleteArgs} args - Arguments to delete one Sp_orders.
     * @example
     * // Delete one Sp_orders
     * const Sp_orders = await prisma.sp_orders.delete({
     *   where: {
     *     // ... filter to delete one Sp_orders
     *   }
     * })
     * 
     */
    delete<T extends sp_ordersDeleteArgs>(args: SelectSubset<T, sp_ordersDeleteArgs<ExtArgs>>): Prisma__sp_ordersClient<$Result.GetResult<Prisma.$sp_ordersPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Sp_orders.
     * @param {sp_ordersUpdateArgs} args - Arguments to update one Sp_orders.
     * @example
     * // Update one Sp_orders
     * const sp_orders = await prisma.sp_orders.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sp_ordersUpdateArgs>(args: SelectSubset<T, sp_ordersUpdateArgs<ExtArgs>>): Prisma__sp_ordersClient<$Result.GetResult<Prisma.$sp_ordersPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Sp_orders.
     * @param {sp_ordersDeleteManyArgs} args - Arguments to filter Sp_orders to delete.
     * @example
     * // Delete a few Sp_orders
     * const { count } = await prisma.sp_orders.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sp_ordersDeleteManyArgs>(args?: SelectSubset<T, sp_ordersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sp_orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_ordersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sp_orders
     * const sp_orders = await prisma.sp_orders.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sp_ordersUpdateManyArgs>(args: SelectSubset<T, sp_ordersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sp_orders.
     * @param {sp_ordersUpsertArgs} args - Arguments to update or create a Sp_orders.
     * @example
     * // Update or create a Sp_orders
     * const sp_orders = await prisma.sp_orders.upsert({
     *   create: {
     *     // ... data to create a Sp_orders
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sp_orders we want to update
     *   }
     * })
     */
    upsert<T extends sp_ordersUpsertArgs>(args: SelectSubset<T, sp_ordersUpsertArgs<ExtArgs>>): Prisma__sp_ordersClient<$Result.GetResult<Prisma.$sp_ordersPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Sp_orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_ordersCountArgs} args - Arguments to filter Sp_orders to count.
     * @example
     * // Count the number of Sp_orders
     * const count = await prisma.sp_orders.count({
     *   where: {
     *     // ... the filter for the Sp_orders we want to count
     *   }
     * })
    **/
    count<T extends sp_ordersCountArgs>(
      args?: Subset<T, sp_ordersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sp_ordersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sp_orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sp_ordersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sp_ordersAggregateArgs>(args: Subset<T, Sp_ordersAggregateArgs>): Prisma.PrismaPromise<GetSp_ordersAggregateType<T>>

    /**
     * Group by Sp_orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_ordersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sp_ordersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sp_ordersGroupByArgs['orderBy'] }
        : { orderBy?: sp_ordersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sp_ordersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSp_ordersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sp_orders model
   */
  readonly fields: sp_ordersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sp_orders.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sp_ordersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sp_orders model
   */ 
  interface sp_ordersFieldRefs {
    readonly id: FieldRef<"sp_orders", 'BigInt'>
    readonly order_id: FieldRef<"sp_orders", 'String'>
    readonly pay_order_id: FieldRef<"sp_orders", 'String'>
    readonly user_id: FieldRef<"sp_orders", 'BigInt'>
    readonly goods_id: FieldRef<"sp_orders", 'Int'>
    readonly total_amount: FieldRef<"sp_orders", 'Decimal'>
    readonly actual_amount: FieldRef<"sp_orders", 'Decimal'>
    readonly pay_type: FieldRef<"sp_orders", 'Boolean'>
    readonly callback_status: FieldRef<"sp_orders", 'Boolean'>
    readonly status: FieldRef<"sp_orders", 'Boolean'>
    readonly os_type: FieldRef<"sp_orders", 'Boolean'>
    readonly dev_no: FieldRef<"sp_orders", 'String'>
    readonly order_ip: FieldRef<"sp_orders", 'String'>
    readonly order_country: FieldRef<"sp_orders", 'String'>
    readonly created_at: FieldRef<"sp_orders", 'DateTime'>
    readonly updated_at: FieldRef<"sp_orders", 'DateTime'>
    readonly deleted_at: FieldRef<"sp_orders", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sp_orders findUnique
   */
  export type sp_ordersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_orders
     */
    select?: sp_ordersSelect<ExtArgs> | null
    /**
     * Filter, which sp_orders to fetch.
     */
    where: sp_ordersWhereUniqueInput
  }

  /**
   * sp_orders findUniqueOrThrow
   */
  export type sp_ordersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_orders
     */
    select?: sp_ordersSelect<ExtArgs> | null
    /**
     * Filter, which sp_orders to fetch.
     */
    where: sp_ordersWhereUniqueInput
  }

  /**
   * sp_orders findFirst
   */
  export type sp_ordersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_orders
     */
    select?: sp_ordersSelect<ExtArgs> | null
    /**
     * Filter, which sp_orders to fetch.
     */
    where?: sp_ordersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_orders to fetch.
     */
    orderBy?: sp_ordersOrderByWithRelationInput | sp_ordersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_orders.
     */
    cursor?: sp_ordersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_orders.
     */
    distinct?: Sp_ordersScalarFieldEnum | Sp_ordersScalarFieldEnum[]
  }

  /**
   * sp_orders findFirstOrThrow
   */
  export type sp_ordersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_orders
     */
    select?: sp_ordersSelect<ExtArgs> | null
    /**
     * Filter, which sp_orders to fetch.
     */
    where?: sp_ordersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_orders to fetch.
     */
    orderBy?: sp_ordersOrderByWithRelationInput | sp_ordersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_orders.
     */
    cursor?: sp_ordersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_orders.
     */
    distinct?: Sp_ordersScalarFieldEnum | Sp_ordersScalarFieldEnum[]
  }

  /**
   * sp_orders findMany
   */
  export type sp_ordersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_orders
     */
    select?: sp_ordersSelect<ExtArgs> | null
    /**
     * Filter, which sp_orders to fetch.
     */
    where?: sp_ordersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_orders to fetch.
     */
    orderBy?: sp_ordersOrderByWithRelationInput | sp_ordersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sp_orders.
     */
    cursor?: sp_ordersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_orders.
     */
    skip?: number
    distinct?: Sp_ordersScalarFieldEnum | Sp_ordersScalarFieldEnum[]
  }

  /**
   * sp_orders create
   */
  export type sp_ordersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_orders
     */
    select?: sp_ordersSelect<ExtArgs> | null
    /**
     * The data needed to create a sp_orders.
     */
    data: XOR<sp_ordersCreateInput, sp_ordersUncheckedCreateInput>
  }

  /**
   * sp_orders createMany
   */
  export type sp_ordersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sp_orders.
     */
    data: sp_ordersCreateManyInput | sp_ordersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sp_orders update
   */
  export type sp_ordersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_orders
     */
    select?: sp_ordersSelect<ExtArgs> | null
    /**
     * The data needed to update a sp_orders.
     */
    data: XOR<sp_ordersUpdateInput, sp_ordersUncheckedUpdateInput>
    /**
     * Choose, which sp_orders to update.
     */
    where: sp_ordersWhereUniqueInput
  }

  /**
   * sp_orders updateMany
   */
  export type sp_ordersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sp_orders.
     */
    data: XOR<sp_ordersUpdateManyMutationInput, sp_ordersUncheckedUpdateManyInput>
    /**
     * Filter which sp_orders to update
     */
    where?: sp_ordersWhereInput
  }

  /**
   * sp_orders upsert
   */
  export type sp_ordersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_orders
     */
    select?: sp_ordersSelect<ExtArgs> | null
    /**
     * The filter to search for the sp_orders to update in case it exists.
     */
    where: sp_ordersWhereUniqueInput
    /**
     * In case the sp_orders found by the `where` argument doesn't exist, create a new sp_orders with this data.
     */
    create: XOR<sp_ordersCreateInput, sp_ordersUncheckedCreateInput>
    /**
     * In case the sp_orders was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sp_ordersUpdateInput, sp_ordersUncheckedUpdateInput>
  }

  /**
   * sp_orders delete
   */
  export type sp_ordersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_orders
     */
    select?: sp_ordersSelect<ExtArgs> | null
    /**
     * Filter which sp_orders to delete.
     */
    where: sp_ordersWhereUniqueInput
  }

  /**
   * sp_orders deleteMany
   */
  export type sp_ordersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_orders to delete
     */
    where?: sp_ordersWhereInput
  }

  /**
   * sp_orders without action
   */
  export type sp_ordersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_orders
     */
    select?: sp_ordersSelect<ExtArgs> | null
  }


  /**
   * Model sp_payment_records
   */

  export type AggregateSp_payment_records = {
    _count: Sp_payment_recordsCountAggregateOutputType | null
    _avg: Sp_payment_recordsAvgAggregateOutputType | null
    _sum: Sp_payment_recordsSumAggregateOutputType | null
    _min: Sp_payment_recordsMinAggregateOutputType | null
    _max: Sp_payment_recordsMaxAggregateOutputType | null
  }

  export type Sp_payment_recordsAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
    amount: Decimal | null
    coins: number | null
    bonus: number | null
  }

  export type Sp_payment_recordsSumAggregateOutputType = {
    id: bigint | null
    user_id: bigint | null
    amount: Decimal | null
    coins: number | null
    bonus: number | null
  }

  export type Sp_payment_recordsMinAggregateOutputType = {
    id: bigint | null
    order_id: string | null
    user_id: bigint | null
    amount: Decimal | null
    coins: number | null
    bonus: number | null
    type: boolean | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_payment_recordsMaxAggregateOutputType = {
    id: bigint | null
    order_id: string | null
    user_id: bigint | null
    amount: Decimal | null
    coins: number | null
    bonus: number | null
    type: boolean | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_payment_recordsCountAggregateOutputType = {
    id: number
    order_id: number
    user_id: number
    amount: number
    coins: number
    bonus: number
    type: number
    created_at: number
    updated_at: number
    deleted_at: number
    _all: number
  }


  export type Sp_payment_recordsAvgAggregateInputType = {
    id?: true
    user_id?: true
    amount?: true
    coins?: true
    bonus?: true
  }

  export type Sp_payment_recordsSumAggregateInputType = {
    id?: true
    user_id?: true
    amount?: true
    coins?: true
    bonus?: true
  }

  export type Sp_payment_recordsMinAggregateInputType = {
    id?: true
    order_id?: true
    user_id?: true
    amount?: true
    coins?: true
    bonus?: true
    type?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sp_payment_recordsMaxAggregateInputType = {
    id?: true
    order_id?: true
    user_id?: true
    amount?: true
    coins?: true
    bonus?: true
    type?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sp_payment_recordsCountAggregateInputType = {
    id?: true
    order_id?: true
    user_id?: true
    amount?: true
    coins?: true
    bonus?: true
    type?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    _all?: true
  }

  export type Sp_payment_recordsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_payment_records to aggregate.
     */
    where?: sp_payment_recordsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_payment_records to fetch.
     */
    orderBy?: sp_payment_recordsOrderByWithRelationInput | sp_payment_recordsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sp_payment_recordsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_payment_records from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_payment_records.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sp_payment_records
    **/
    _count?: true | Sp_payment_recordsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sp_payment_recordsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sp_payment_recordsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sp_payment_recordsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sp_payment_recordsMaxAggregateInputType
  }

  export type GetSp_payment_recordsAggregateType<T extends Sp_payment_recordsAggregateArgs> = {
        [P in keyof T & keyof AggregateSp_payment_records]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSp_payment_records[P]>
      : GetScalarType<T[P], AggregateSp_payment_records[P]>
  }




  export type sp_payment_recordsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sp_payment_recordsWhereInput
    orderBy?: sp_payment_recordsOrderByWithAggregationInput | sp_payment_recordsOrderByWithAggregationInput[]
    by: Sp_payment_recordsScalarFieldEnum[] | Sp_payment_recordsScalarFieldEnum
    having?: sp_payment_recordsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sp_payment_recordsCountAggregateInputType | true
    _avg?: Sp_payment_recordsAvgAggregateInputType
    _sum?: Sp_payment_recordsSumAggregateInputType
    _min?: Sp_payment_recordsMinAggregateInputType
    _max?: Sp_payment_recordsMaxAggregateInputType
  }

  export type Sp_payment_recordsGroupByOutputType = {
    id: bigint
    order_id: string
    user_id: bigint
    amount: Decimal | null
    coins: number | null
    bonus: number | null
    type: boolean | null
    created_at: Date
    updated_at: Date | null
    deleted_at: Date | null
    _count: Sp_payment_recordsCountAggregateOutputType | null
    _avg: Sp_payment_recordsAvgAggregateOutputType | null
    _sum: Sp_payment_recordsSumAggregateOutputType | null
    _min: Sp_payment_recordsMinAggregateOutputType | null
    _max: Sp_payment_recordsMaxAggregateOutputType | null
  }

  type GetSp_payment_recordsGroupByPayload<T extends sp_payment_recordsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sp_payment_recordsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sp_payment_recordsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sp_payment_recordsGroupByOutputType[P]>
            : GetScalarType<T[P], Sp_payment_recordsGroupByOutputType[P]>
        }
      >
    >


  export type sp_payment_recordsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order_id?: boolean
    user_id?: boolean
    amount?: boolean
    coins?: boolean
    bonus?: boolean
    type?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }, ExtArgs["result"]["sp_payment_records"]>


  export type sp_payment_recordsSelectScalar = {
    id?: boolean
    order_id?: boolean
    user_id?: boolean
    amount?: boolean
    coins?: boolean
    bonus?: boolean
    type?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }


  export type $sp_payment_recordsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sp_payment_records"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      order_id: string
      user_id: bigint
      amount: Prisma.Decimal | null
      coins: number | null
      bonus: number | null
      type: boolean | null
      created_at: Date
      updated_at: Date | null
      deleted_at: Date | null
    }, ExtArgs["result"]["sp_payment_records"]>
    composites: {}
  }

  type sp_payment_recordsGetPayload<S extends boolean | null | undefined | sp_payment_recordsDefaultArgs> = $Result.GetResult<Prisma.$sp_payment_recordsPayload, S>

  type sp_payment_recordsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<sp_payment_recordsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Sp_payment_recordsCountAggregateInputType | true
    }

  export interface sp_payment_recordsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sp_payment_records'], meta: { name: 'sp_payment_records' } }
    /**
     * Find zero or one Sp_payment_records that matches the filter.
     * @param {sp_payment_recordsFindUniqueArgs} args - Arguments to find a Sp_payment_records
     * @example
     * // Get one Sp_payment_records
     * const sp_payment_records = await prisma.sp_payment_records.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sp_payment_recordsFindUniqueArgs>(args: SelectSubset<T, sp_payment_recordsFindUniqueArgs<ExtArgs>>): Prisma__sp_payment_recordsClient<$Result.GetResult<Prisma.$sp_payment_recordsPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Sp_payment_records that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {sp_payment_recordsFindUniqueOrThrowArgs} args - Arguments to find a Sp_payment_records
     * @example
     * // Get one Sp_payment_records
     * const sp_payment_records = await prisma.sp_payment_records.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sp_payment_recordsFindUniqueOrThrowArgs>(args: SelectSubset<T, sp_payment_recordsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sp_payment_recordsClient<$Result.GetResult<Prisma.$sp_payment_recordsPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Sp_payment_records that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_payment_recordsFindFirstArgs} args - Arguments to find a Sp_payment_records
     * @example
     * // Get one Sp_payment_records
     * const sp_payment_records = await prisma.sp_payment_records.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sp_payment_recordsFindFirstArgs>(args?: SelectSubset<T, sp_payment_recordsFindFirstArgs<ExtArgs>>): Prisma__sp_payment_recordsClient<$Result.GetResult<Prisma.$sp_payment_recordsPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Sp_payment_records that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_payment_recordsFindFirstOrThrowArgs} args - Arguments to find a Sp_payment_records
     * @example
     * // Get one Sp_payment_records
     * const sp_payment_records = await prisma.sp_payment_records.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sp_payment_recordsFindFirstOrThrowArgs>(args?: SelectSubset<T, sp_payment_recordsFindFirstOrThrowArgs<ExtArgs>>): Prisma__sp_payment_recordsClient<$Result.GetResult<Prisma.$sp_payment_recordsPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Sp_payment_records that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_payment_recordsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sp_payment_records
     * const sp_payment_records = await prisma.sp_payment_records.findMany()
     * 
     * // Get first 10 Sp_payment_records
     * const sp_payment_records = await prisma.sp_payment_records.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sp_payment_recordsWithIdOnly = await prisma.sp_payment_records.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sp_payment_recordsFindManyArgs>(args?: SelectSubset<T, sp_payment_recordsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sp_payment_recordsPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Sp_payment_records.
     * @param {sp_payment_recordsCreateArgs} args - Arguments to create a Sp_payment_records.
     * @example
     * // Create one Sp_payment_records
     * const Sp_payment_records = await prisma.sp_payment_records.create({
     *   data: {
     *     // ... data to create a Sp_payment_records
     *   }
     * })
     * 
     */
    create<T extends sp_payment_recordsCreateArgs>(args: SelectSubset<T, sp_payment_recordsCreateArgs<ExtArgs>>): Prisma__sp_payment_recordsClient<$Result.GetResult<Prisma.$sp_payment_recordsPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Sp_payment_records.
     * @param {sp_payment_recordsCreateManyArgs} args - Arguments to create many Sp_payment_records.
     * @example
     * // Create many Sp_payment_records
     * const sp_payment_records = await prisma.sp_payment_records.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sp_payment_recordsCreateManyArgs>(args?: SelectSubset<T, sp_payment_recordsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sp_payment_records.
     * @param {sp_payment_recordsDeleteArgs} args - Arguments to delete one Sp_payment_records.
     * @example
     * // Delete one Sp_payment_records
     * const Sp_payment_records = await prisma.sp_payment_records.delete({
     *   where: {
     *     // ... filter to delete one Sp_payment_records
     *   }
     * })
     * 
     */
    delete<T extends sp_payment_recordsDeleteArgs>(args: SelectSubset<T, sp_payment_recordsDeleteArgs<ExtArgs>>): Prisma__sp_payment_recordsClient<$Result.GetResult<Prisma.$sp_payment_recordsPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Sp_payment_records.
     * @param {sp_payment_recordsUpdateArgs} args - Arguments to update one Sp_payment_records.
     * @example
     * // Update one Sp_payment_records
     * const sp_payment_records = await prisma.sp_payment_records.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sp_payment_recordsUpdateArgs>(args: SelectSubset<T, sp_payment_recordsUpdateArgs<ExtArgs>>): Prisma__sp_payment_recordsClient<$Result.GetResult<Prisma.$sp_payment_recordsPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Sp_payment_records.
     * @param {sp_payment_recordsDeleteManyArgs} args - Arguments to filter Sp_payment_records to delete.
     * @example
     * // Delete a few Sp_payment_records
     * const { count } = await prisma.sp_payment_records.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sp_payment_recordsDeleteManyArgs>(args?: SelectSubset<T, sp_payment_recordsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sp_payment_records.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_payment_recordsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sp_payment_records
     * const sp_payment_records = await prisma.sp_payment_records.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sp_payment_recordsUpdateManyArgs>(args: SelectSubset<T, sp_payment_recordsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sp_payment_records.
     * @param {sp_payment_recordsUpsertArgs} args - Arguments to update or create a Sp_payment_records.
     * @example
     * // Update or create a Sp_payment_records
     * const sp_payment_records = await prisma.sp_payment_records.upsert({
     *   create: {
     *     // ... data to create a Sp_payment_records
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sp_payment_records we want to update
     *   }
     * })
     */
    upsert<T extends sp_payment_recordsUpsertArgs>(args: SelectSubset<T, sp_payment_recordsUpsertArgs<ExtArgs>>): Prisma__sp_payment_recordsClient<$Result.GetResult<Prisma.$sp_payment_recordsPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Sp_payment_records.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_payment_recordsCountArgs} args - Arguments to filter Sp_payment_records to count.
     * @example
     * // Count the number of Sp_payment_records
     * const count = await prisma.sp_payment_records.count({
     *   where: {
     *     // ... the filter for the Sp_payment_records we want to count
     *   }
     * })
    **/
    count<T extends sp_payment_recordsCountArgs>(
      args?: Subset<T, sp_payment_recordsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sp_payment_recordsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sp_payment_records.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sp_payment_recordsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sp_payment_recordsAggregateArgs>(args: Subset<T, Sp_payment_recordsAggregateArgs>): Prisma.PrismaPromise<GetSp_payment_recordsAggregateType<T>>

    /**
     * Group by Sp_payment_records.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_payment_recordsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sp_payment_recordsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sp_payment_recordsGroupByArgs['orderBy'] }
        : { orderBy?: sp_payment_recordsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sp_payment_recordsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSp_payment_recordsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sp_payment_records model
   */
  readonly fields: sp_payment_recordsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sp_payment_records.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sp_payment_recordsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sp_payment_records model
   */ 
  interface sp_payment_recordsFieldRefs {
    readonly id: FieldRef<"sp_payment_records", 'BigInt'>
    readonly order_id: FieldRef<"sp_payment_records", 'String'>
    readonly user_id: FieldRef<"sp_payment_records", 'BigInt'>
    readonly amount: FieldRef<"sp_payment_records", 'Decimal'>
    readonly coins: FieldRef<"sp_payment_records", 'Int'>
    readonly bonus: FieldRef<"sp_payment_records", 'Int'>
    readonly type: FieldRef<"sp_payment_records", 'Boolean'>
    readonly created_at: FieldRef<"sp_payment_records", 'DateTime'>
    readonly updated_at: FieldRef<"sp_payment_records", 'DateTime'>
    readonly deleted_at: FieldRef<"sp_payment_records", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sp_payment_records findUnique
   */
  export type sp_payment_recordsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_payment_records
     */
    select?: sp_payment_recordsSelect<ExtArgs> | null
    /**
     * Filter, which sp_payment_records to fetch.
     */
    where: sp_payment_recordsWhereUniqueInput
  }

  /**
   * sp_payment_records findUniqueOrThrow
   */
  export type sp_payment_recordsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_payment_records
     */
    select?: sp_payment_recordsSelect<ExtArgs> | null
    /**
     * Filter, which sp_payment_records to fetch.
     */
    where: sp_payment_recordsWhereUniqueInput
  }

  /**
   * sp_payment_records findFirst
   */
  export type sp_payment_recordsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_payment_records
     */
    select?: sp_payment_recordsSelect<ExtArgs> | null
    /**
     * Filter, which sp_payment_records to fetch.
     */
    where?: sp_payment_recordsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_payment_records to fetch.
     */
    orderBy?: sp_payment_recordsOrderByWithRelationInput | sp_payment_recordsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_payment_records.
     */
    cursor?: sp_payment_recordsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_payment_records from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_payment_records.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_payment_records.
     */
    distinct?: Sp_payment_recordsScalarFieldEnum | Sp_payment_recordsScalarFieldEnum[]
  }

  /**
   * sp_payment_records findFirstOrThrow
   */
  export type sp_payment_recordsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_payment_records
     */
    select?: sp_payment_recordsSelect<ExtArgs> | null
    /**
     * Filter, which sp_payment_records to fetch.
     */
    where?: sp_payment_recordsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_payment_records to fetch.
     */
    orderBy?: sp_payment_recordsOrderByWithRelationInput | sp_payment_recordsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_payment_records.
     */
    cursor?: sp_payment_recordsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_payment_records from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_payment_records.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_payment_records.
     */
    distinct?: Sp_payment_recordsScalarFieldEnum | Sp_payment_recordsScalarFieldEnum[]
  }

  /**
   * sp_payment_records findMany
   */
  export type sp_payment_recordsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_payment_records
     */
    select?: sp_payment_recordsSelect<ExtArgs> | null
    /**
     * Filter, which sp_payment_records to fetch.
     */
    where?: sp_payment_recordsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_payment_records to fetch.
     */
    orderBy?: sp_payment_recordsOrderByWithRelationInput | sp_payment_recordsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sp_payment_records.
     */
    cursor?: sp_payment_recordsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_payment_records from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_payment_records.
     */
    skip?: number
    distinct?: Sp_payment_recordsScalarFieldEnum | Sp_payment_recordsScalarFieldEnum[]
  }

  /**
   * sp_payment_records create
   */
  export type sp_payment_recordsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_payment_records
     */
    select?: sp_payment_recordsSelect<ExtArgs> | null
    /**
     * The data needed to create a sp_payment_records.
     */
    data: XOR<sp_payment_recordsCreateInput, sp_payment_recordsUncheckedCreateInput>
  }

  /**
   * sp_payment_records createMany
   */
  export type sp_payment_recordsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sp_payment_records.
     */
    data: sp_payment_recordsCreateManyInput | sp_payment_recordsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sp_payment_records update
   */
  export type sp_payment_recordsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_payment_records
     */
    select?: sp_payment_recordsSelect<ExtArgs> | null
    /**
     * The data needed to update a sp_payment_records.
     */
    data: XOR<sp_payment_recordsUpdateInput, sp_payment_recordsUncheckedUpdateInput>
    /**
     * Choose, which sp_payment_records to update.
     */
    where: sp_payment_recordsWhereUniqueInput
  }

  /**
   * sp_payment_records updateMany
   */
  export type sp_payment_recordsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sp_payment_records.
     */
    data: XOR<sp_payment_recordsUpdateManyMutationInput, sp_payment_recordsUncheckedUpdateManyInput>
    /**
     * Filter which sp_payment_records to update
     */
    where?: sp_payment_recordsWhereInput
  }

  /**
   * sp_payment_records upsert
   */
  export type sp_payment_recordsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_payment_records
     */
    select?: sp_payment_recordsSelect<ExtArgs> | null
    /**
     * The filter to search for the sp_payment_records to update in case it exists.
     */
    where: sp_payment_recordsWhereUniqueInput
    /**
     * In case the sp_payment_records found by the `where` argument doesn't exist, create a new sp_payment_records with this data.
     */
    create: XOR<sp_payment_recordsCreateInput, sp_payment_recordsUncheckedCreateInput>
    /**
     * In case the sp_payment_records was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sp_payment_recordsUpdateInput, sp_payment_recordsUncheckedUpdateInput>
  }

  /**
   * sp_payment_records delete
   */
  export type sp_payment_recordsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_payment_records
     */
    select?: sp_payment_recordsSelect<ExtArgs> | null
    /**
     * Filter which sp_payment_records to delete.
     */
    where: sp_payment_recordsWhereUniqueInput
  }

  /**
   * sp_payment_records deleteMany
   */
  export type sp_payment_recordsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_payment_records to delete
     */
    where?: sp_payment_recordsWhereInput
  }

  /**
   * sp_payment_records without action
   */
  export type sp_payment_recordsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_payment_records
     */
    select?: sp_payment_recordsSelect<ExtArgs> | null
  }


  /**
   * Model sp_privacy_settings
   */

  export type AggregateSp_privacy_settings = {
    _count: Sp_privacy_settingsCountAggregateOutputType | null
    _avg: Sp_privacy_settingsAvgAggregateOutputType | null
    _sum: Sp_privacy_settingsSumAggregateOutputType | null
    _min: Sp_privacy_settingsMinAggregateOutputType | null
    _max: Sp_privacy_settingsMaxAggregateOutputType | null
  }

  export type Sp_privacy_settingsAvgAggregateOutputType = {
    id: number | null
    type: number | null
  }

  export type Sp_privacy_settingsSumAggregateOutputType = {
    id: bigint | null
    type: number | null
  }

  export type Sp_privacy_settingsMinAggregateOutputType = {
    id: bigint | null
    title: string | null
    type: number | null
    content: string | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_privacy_settingsMaxAggregateOutputType = {
    id: bigint | null
    title: string | null
    type: number | null
    content: string | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_privacy_settingsCountAggregateOutputType = {
    id: number
    title: number
    type: number
    content: number
    created_at: number
    updated_at: number
    deleted_at: number
    _all: number
  }


  export type Sp_privacy_settingsAvgAggregateInputType = {
    id?: true
    type?: true
  }

  export type Sp_privacy_settingsSumAggregateInputType = {
    id?: true
    type?: true
  }

  export type Sp_privacy_settingsMinAggregateInputType = {
    id?: true
    title?: true
    type?: true
    content?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sp_privacy_settingsMaxAggregateInputType = {
    id?: true
    title?: true
    type?: true
    content?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sp_privacy_settingsCountAggregateInputType = {
    id?: true
    title?: true
    type?: true
    content?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    _all?: true
  }

  export type Sp_privacy_settingsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_privacy_settings to aggregate.
     */
    where?: sp_privacy_settingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_privacy_settings to fetch.
     */
    orderBy?: sp_privacy_settingsOrderByWithRelationInput | sp_privacy_settingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sp_privacy_settingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_privacy_settings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_privacy_settings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sp_privacy_settings
    **/
    _count?: true | Sp_privacy_settingsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sp_privacy_settingsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sp_privacy_settingsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sp_privacy_settingsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sp_privacy_settingsMaxAggregateInputType
  }

  export type GetSp_privacy_settingsAggregateType<T extends Sp_privacy_settingsAggregateArgs> = {
        [P in keyof T & keyof AggregateSp_privacy_settings]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSp_privacy_settings[P]>
      : GetScalarType<T[P], AggregateSp_privacy_settings[P]>
  }




  export type sp_privacy_settingsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sp_privacy_settingsWhereInput
    orderBy?: sp_privacy_settingsOrderByWithAggregationInput | sp_privacy_settingsOrderByWithAggregationInput[]
    by: Sp_privacy_settingsScalarFieldEnum[] | Sp_privacy_settingsScalarFieldEnum
    having?: sp_privacy_settingsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sp_privacy_settingsCountAggregateInputType | true
    _avg?: Sp_privacy_settingsAvgAggregateInputType
    _sum?: Sp_privacy_settingsSumAggregateInputType
    _min?: Sp_privacy_settingsMinAggregateInputType
    _max?: Sp_privacy_settingsMaxAggregateInputType
  }

  export type Sp_privacy_settingsGroupByOutputType = {
    id: bigint
    title: string | null
    type: number
    content: string | null
    created_at: Date
    updated_at: Date | null
    deleted_at: Date | null
    _count: Sp_privacy_settingsCountAggregateOutputType | null
    _avg: Sp_privacy_settingsAvgAggregateOutputType | null
    _sum: Sp_privacy_settingsSumAggregateOutputType | null
    _min: Sp_privacy_settingsMinAggregateOutputType | null
    _max: Sp_privacy_settingsMaxAggregateOutputType | null
  }

  type GetSp_privacy_settingsGroupByPayload<T extends sp_privacy_settingsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sp_privacy_settingsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sp_privacy_settingsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sp_privacy_settingsGroupByOutputType[P]>
            : GetScalarType<T[P], Sp_privacy_settingsGroupByOutputType[P]>
        }
      >
    >


  export type sp_privacy_settingsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    type?: boolean
    content?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }, ExtArgs["result"]["sp_privacy_settings"]>


  export type sp_privacy_settingsSelectScalar = {
    id?: boolean
    title?: boolean
    type?: boolean
    content?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }


  export type $sp_privacy_settingsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sp_privacy_settings"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      title: string | null
      type: number
      content: string | null
      created_at: Date
      updated_at: Date | null
      deleted_at: Date | null
    }, ExtArgs["result"]["sp_privacy_settings"]>
    composites: {}
  }

  type sp_privacy_settingsGetPayload<S extends boolean | null | undefined | sp_privacy_settingsDefaultArgs> = $Result.GetResult<Prisma.$sp_privacy_settingsPayload, S>

  type sp_privacy_settingsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<sp_privacy_settingsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Sp_privacy_settingsCountAggregateInputType | true
    }

  export interface sp_privacy_settingsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sp_privacy_settings'], meta: { name: 'sp_privacy_settings' } }
    /**
     * Find zero or one Sp_privacy_settings that matches the filter.
     * @param {sp_privacy_settingsFindUniqueArgs} args - Arguments to find a Sp_privacy_settings
     * @example
     * // Get one Sp_privacy_settings
     * const sp_privacy_settings = await prisma.sp_privacy_settings.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sp_privacy_settingsFindUniqueArgs>(args: SelectSubset<T, sp_privacy_settingsFindUniqueArgs<ExtArgs>>): Prisma__sp_privacy_settingsClient<$Result.GetResult<Prisma.$sp_privacy_settingsPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Sp_privacy_settings that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {sp_privacy_settingsFindUniqueOrThrowArgs} args - Arguments to find a Sp_privacy_settings
     * @example
     * // Get one Sp_privacy_settings
     * const sp_privacy_settings = await prisma.sp_privacy_settings.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sp_privacy_settingsFindUniqueOrThrowArgs>(args: SelectSubset<T, sp_privacy_settingsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sp_privacy_settingsClient<$Result.GetResult<Prisma.$sp_privacy_settingsPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Sp_privacy_settings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_privacy_settingsFindFirstArgs} args - Arguments to find a Sp_privacy_settings
     * @example
     * // Get one Sp_privacy_settings
     * const sp_privacy_settings = await prisma.sp_privacy_settings.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sp_privacy_settingsFindFirstArgs>(args?: SelectSubset<T, sp_privacy_settingsFindFirstArgs<ExtArgs>>): Prisma__sp_privacy_settingsClient<$Result.GetResult<Prisma.$sp_privacy_settingsPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Sp_privacy_settings that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_privacy_settingsFindFirstOrThrowArgs} args - Arguments to find a Sp_privacy_settings
     * @example
     * // Get one Sp_privacy_settings
     * const sp_privacy_settings = await prisma.sp_privacy_settings.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sp_privacy_settingsFindFirstOrThrowArgs>(args?: SelectSubset<T, sp_privacy_settingsFindFirstOrThrowArgs<ExtArgs>>): Prisma__sp_privacy_settingsClient<$Result.GetResult<Prisma.$sp_privacy_settingsPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Sp_privacy_settings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_privacy_settingsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sp_privacy_settings
     * const sp_privacy_settings = await prisma.sp_privacy_settings.findMany()
     * 
     * // Get first 10 Sp_privacy_settings
     * const sp_privacy_settings = await prisma.sp_privacy_settings.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sp_privacy_settingsWithIdOnly = await prisma.sp_privacy_settings.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sp_privacy_settingsFindManyArgs>(args?: SelectSubset<T, sp_privacy_settingsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sp_privacy_settingsPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Sp_privacy_settings.
     * @param {sp_privacy_settingsCreateArgs} args - Arguments to create a Sp_privacy_settings.
     * @example
     * // Create one Sp_privacy_settings
     * const Sp_privacy_settings = await prisma.sp_privacy_settings.create({
     *   data: {
     *     // ... data to create a Sp_privacy_settings
     *   }
     * })
     * 
     */
    create<T extends sp_privacy_settingsCreateArgs>(args: SelectSubset<T, sp_privacy_settingsCreateArgs<ExtArgs>>): Prisma__sp_privacy_settingsClient<$Result.GetResult<Prisma.$sp_privacy_settingsPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Sp_privacy_settings.
     * @param {sp_privacy_settingsCreateManyArgs} args - Arguments to create many Sp_privacy_settings.
     * @example
     * // Create many Sp_privacy_settings
     * const sp_privacy_settings = await prisma.sp_privacy_settings.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sp_privacy_settingsCreateManyArgs>(args?: SelectSubset<T, sp_privacy_settingsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sp_privacy_settings.
     * @param {sp_privacy_settingsDeleteArgs} args - Arguments to delete one Sp_privacy_settings.
     * @example
     * // Delete one Sp_privacy_settings
     * const Sp_privacy_settings = await prisma.sp_privacy_settings.delete({
     *   where: {
     *     // ... filter to delete one Sp_privacy_settings
     *   }
     * })
     * 
     */
    delete<T extends sp_privacy_settingsDeleteArgs>(args: SelectSubset<T, sp_privacy_settingsDeleteArgs<ExtArgs>>): Prisma__sp_privacy_settingsClient<$Result.GetResult<Prisma.$sp_privacy_settingsPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Sp_privacy_settings.
     * @param {sp_privacy_settingsUpdateArgs} args - Arguments to update one Sp_privacy_settings.
     * @example
     * // Update one Sp_privacy_settings
     * const sp_privacy_settings = await prisma.sp_privacy_settings.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sp_privacy_settingsUpdateArgs>(args: SelectSubset<T, sp_privacy_settingsUpdateArgs<ExtArgs>>): Prisma__sp_privacy_settingsClient<$Result.GetResult<Prisma.$sp_privacy_settingsPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Sp_privacy_settings.
     * @param {sp_privacy_settingsDeleteManyArgs} args - Arguments to filter Sp_privacy_settings to delete.
     * @example
     * // Delete a few Sp_privacy_settings
     * const { count } = await prisma.sp_privacy_settings.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sp_privacy_settingsDeleteManyArgs>(args?: SelectSubset<T, sp_privacy_settingsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sp_privacy_settings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_privacy_settingsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sp_privacy_settings
     * const sp_privacy_settings = await prisma.sp_privacy_settings.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sp_privacy_settingsUpdateManyArgs>(args: SelectSubset<T, sp_privacy_settingsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sp_privacy_settings.
     * @param {sp_privacy_settingsUpsertArgs} args - Arguments to update or create a Sp_privacy_settings.
     * @example
     * // Update or create a Sp_privacy_settings
     * const sp_privacy_settings = await prisma.sp_privacy_settings.upsert({
     *   create: {
     *     // ... data to create a Sp_privacy_settings
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sp_privacy_settings we want to update
     *   }
     * })
     */
    upsert<T extends sp_privacy_settingsUpsertArgs>(args: SelectSubset<T, sp_privacy_settingsUpsertArgs<ExtArgs>>): Prisma__sp_privacy_settingsClient<$Result.GetResult<Prisma.$sp_privacy_settingsPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Sp_privacy_settings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_privacy_settingsCountArgs} args - Arguments to filter Sp_privacy_settings to count.
     * @example
     * // Count the number of Sp_privacy_settings
     * const count = await prisma.sp_privacy_settings.count({
     *   where: {
     *     // ... the filter for the Sp_privacy_settings we want to count
     *   }
     * })
    **/
    count<T extends sp_privacy_settingsCountArgs>(
      args?: Subset<T, sp_privacy_settingsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sp_privacy_settingsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sp_privacy_settings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sp_privacy_settingsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sp_privacy_settingsAggregateArgs>(args: Subset<T, Sp_privacy_settingsAggregateArgs>): Prisma.PrismaPromise<GetSp_privacy_settingsAggregateType<T>>

    /**
     * Group by Sp_privacy_settings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_privacy_settingsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sp_privacy_settingsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sp_privacy_settingsGroupByArgs['orderBy'] }
        : { orderBy?: sp_privacy_settingsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sp_privacy_settingsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSp_privacy_settingsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sp_privacy_settings model
   */
  readonly fields: sp_privacy_settingsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sp_privacy_settings.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sp_privacy_settingsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sp_privacy_settings model
   */ 
  interface sp_privacy_settingsFieldRefs {
    readonly id: FieldRef<"sp_privacy_settings", 'BigInt'>
    readonly title: FieldRef<"sp_privacy_settings", 'String'>
    readonly type: FieldRef<"sp_privacy_settings", 'Int'>
    readonly content: FieldRef<"sp_privacy_settings", 'String'>
    readonly created_at: FieldRef<"sp_privacy_settings", 'DateTime'>
    readonly updated_at: FieldRef<"sp_privacy_settings", 'DateTime'>
    readonly deleted_at: FieldRef<"sp_privacy_settings", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sp_privacy_settings findUnique
   */
  export type sp_privacy_settingsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_privacy_settings
     */
    select?: sp_privacy_settingsSelect<ExtArgs> | null
    /**
     * Filter, which sp_privacy_settings to fetch.
     */
    where: sp_privacy_settingsWhereUniqueInput
  }

  /**
   * sp_privacy_settings findUniqueOrThrow
   */
  export type sp_privacy_settingsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_privacy_settings
     */
    select?: sp_privacy_settingsSelect<ExtArgs> | null
    /**
     * Filter, which sp_privacy_settings to fetch.
     */
    where: sp_privacy_settingsWhereUniqueInput
  }

  /**
   * sp_privacy_settings findFirst
   */
  export type sp_privacy_settingsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_privacy_settings
     */
    select?: sp_privacy_settingsSelect<ExtArgs> | null
    /**
     * Filter, which sp_privacy_settings to fetch.
     */
    where?: sp_privacy_settingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_privacy_settings to fetch.
     */
    orderBy?: sp_privacy_settingsOrderByWithRelationInput | sp_privacy_settingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_privacy_settings.
     */
    cursor?: sp_privacy_settingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_privacy_settings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_privacy_settings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_privacy_settings.
     */
    distinct?: Sp_privacy_settingsScalarFieldEnum | Sp_privacy_settingsScalarFieldEnum[]
  }

  /**
   * sp_privacy_settings findFirstOrThrow
   */
  export type sp_privacy_settingsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_privacy_settings
     */
    select?: sp_privacy_settingsSelect<ExtArgs> | null
    /**
     * Filter, which sp_privacy_settings to fetch.
     */
    where?: sp_privacy_settingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_privacy_settings to fetch.
     */
    orderBy?: sp_privacy_settingsOrderByWithRelationInput | sp_privacy_settingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_privacy_settings.
     */
    cursor?: sp_privacy_settingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_privacy_settings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_privacy_settings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_privacy_settings.
     */
    distinct?: Sp_privacy_settingsScalarFieldEnum | Sp_privacy_settingsScalarFieldEnum[]
  }

  /**
   * sp_privacy_settings findMany
   */
  export type sp_privacy_settingsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_privacy_settings
     */
    select?: sp_privacy_settingsSelect<ExtArgs> | null
    /**
     * Filter, which sp_privacy_settings to fetch.
     */
    where?: sp_privacy_settingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_privacy_settings to fetch.
     */
    orderBy?: sp_privacy_settingsOrderByWithRelationInput | sp_privacy_settingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sp_privacy_settings.
     */
    cursor?: sp_privacy_settingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_privacy_settings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_privacy_settings.
     */
    skip?: number
    distinct?: Sp_privacy_settingsScalarFieldEnum | Sp_privacy_settingsScalarFieldEnum[]
  }

  /**
   * sp_privacy_settings create
   */
  export type sp_privacy_settingsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_privacy_settings
     */
    select?: sp_privacy_settingsSelect<ExtArgs> | null
    /**
     * The data needed to create a sp_privacy_settings.
     */
    data?: XOR<sp_privacy_settingsCreateInput, sp_privacy_settingsUncheckedCreateInput>
  }

  /**
   * sp_privacy_settings createMany
   */
  export type sp_privacy_settingsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sp_privacy_settings.
     */
    data: sp_privacy_settingsCreateManyInput | sp_privacy_settingsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sp_privacy_settings update
   */
  export type sp_privacy_settingsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_privacy_settings
     */
    select?: sp_privacy_settingsSelect<ExtArgs> | null
    /**
     * The data needed to update a sp_privacy_settings.
     */
    data: XOR<sp_privacy_settingsUpdateInput, sp_privacy_settingsUncheckedUpdateInput>
    /**
     * Choose, which sp_privacy_settings to update.
     */
    where: sp_privacy_settingsWhereUniqueInput
  }

  /**
   * sp_privacy_settings updateMany
   */
  export type sp_privacy_settingsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sp_privacy_settings.
     */
    data: XOR<sp_privacy_settingsUpdateManyMutationInput, sp_privacy_settingsUncheckedUpdateManyInput>
    /**
     * Filter which sp_privacy_settings to update
     */
    where?: sp_privacy_settingsWhereInput
  }

  /**
   * sp_privacy_settings upsert
   */
  export type sp_privacy_settingsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_privacy_settings
     */
    select?: sp_privacy_settingsSelect<ExtArgs> | null
    /**
     * The filter to search for the sp_privacy_settings to update in case it exists.
     */
    where: sp_privacy_settingsWhereUniqueInput
    /**
     * In case the sp_privacy_settings found by the `where` argument doesn't exist, create a new sp_privacy_settings with this data.
     */
    create: XOR<sp_privacy_settingsCreateInput, sp_privacy_settingsUncheckedCreateInput>
    /**
     * In case the sp_privacy_settings was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sp_privacy_settingsUpdateInput, sp_privacy_settingsUncheckedUpdateInput>
  }

  /**
   * sp_privacy_settings delete
   */
  export type sp_privacy_settingsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_privacy_settings
     */
    select?: sp_privacy_settingsSelect<ExtArgs> | null
    /**
     * Filter which sp_privacy_settings to delete.
     */
    where: sp_privacy_settingsWhereUniqueInput
  }

  /**
   * sp_privacy_settings deleteMany
   */
  export type sp_privacy_settingsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_privacy_settings to delete
     */
    where?: sp_privacy_settingsWhereInput
  }

  /**
   * sp_privacy_settings without action
   */
  export type sp_privacy_settingsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_privacy_settings
     */
    select?: sp_privacy_settingsSelect<ExtArgs> | null
  }


  /**
   * Model sp_purchase_records
   */

  export type AggregateSp_purchase_records = {
    _count: Sp_purchase_recordsCountAggregateOutputType | null
    _avg: Sp_purchase_recordsAvgAggregateOutputType | null
    _sum: Sp_purchase_recordsSumAggregateOutputType | null
    _min: Sp_purchase_recordsMinAggregateOutputType | null
    _max: Sp_purchase_recordsMaxAggregateOutputType | null
  }

  export type Sp_purchase_recordsAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
    video_group_id: number | null
    video_id: number | null
    costs: number | null
    pay_type: number | null
  }

  export type Sp_purchase_recordsSumAggregateOutputType = {
    id: bigint | null
    user_id: bigint | null
    video_group_id: number | null
    video_id: number | null
    costs: number | null
    pay_type: number | null
  }

  export type Sp_purchase_recordsMinAggregateOutputType = {
    id: bigint | null
    user_id: bigint | null
    video_group_id: number | null
    video_id: number | null
    costs: number | null
    pay_type: number | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_purchase_recordsMaxAggregateOutputType = {
    id: bigint | null
    user_id: bigint | null
    video_group_id: number | null
    video_id: number | null
    costs: number | null
    pay_type: number | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_purchase_recordsCountAggregateOutputType = {
    id: number
    user_id: number
    video_group_id: number
    video_id: number
    costs: number
    pay_type: number
    created_at: number
    updated_at: number
    deleted_at: number
    _all: number
  }


  export type Sp_purchase_recordsAvgAggregateInputType = {
    id?: true
    user_id?: true
    video_group_id?: true
    video_id?: true
    costs?: true
    pay_type?: true
  }

  export type Sp_purchase_recordsSumAggregateInputType = {
    id?: true
    user_id?: true
    video_group_id?: true
    video_id?: true
    costs?: true
    pay_type?: true
  }

  export type Sp_purchase_recordsMinAggregateInputType = {
    id?: true
    user_id?: true
    video_group_id?: true
    video_id?: true
    costs?: true
    pay_type?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sp_purchase_recordsMaxAggregateInputType = {
    id?: true
    user_id?: true
    video_group_id?: true
    video_id?: true
    costs?: true
    pay_type?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sp_purchase_recordsCountAggregateInputType = {
    id?: true
    user_id?: true
    video_group_id?: true
    video_id?: true
    costs?: true
    pay_type?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    _all?: true
  }

  export type Sp_purchase_recordsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_purchase_records to aggregate.
     */
    where?: sp_purchase_recordsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_purchase_records to fetch.
     */
    orderBy?: sp_purchase_recordsOrderByWithRelationInput | sp_purchase_recordsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sp_purchase_recordsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_purchase_records from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_purchase_records.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sp_purchase_records
    **/
    _count?: true | Sp_purchase_recordsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sp_purchase_recordsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sp_purchase_recordsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sp_purchase_recordsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sp_purchase_recordsMaxAggregateInputType
  }

  export type GetSp_purchase_recordsAggregateType<T extends Sp_purchase_recordsAggregateArgs> = {
        [P in keyof T & keyof AggregateSp_purchase_records]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSp_purchase_records[P]>
      : GetScalarType<T[P], AggregateSp_purchase_records[P]>
  }




  export type sp_purchase_recordsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sp_purchase_recordsWhereInput
    orderBy?: sp_purchase_recordsOrderByWithAggregationInput | sp_purchase_recordsOrderByWithAggregationInput[]
    by: Sp_purchase_recordsScalarFieldEnum[] | Sp_purchase_recordsScalarFieldEnum
    having?: sp_purchase_recordsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sp_purchase_recordsCountAggregateInputType | true
    _avg?: Sp_purchase_recordsAvgAggregateInputType
    _sum?: Sp_purchase_recordsSumAggregateInputType
    _min?: Sp_purchase_recordsMinAggregateInputType
    _max?: Sp_purchase_recordsMaxAggregateInputType
  }

  export type Sp_purchase_recordsGroupByOutputType = {
    id: bigint
    user_id: bigint
    video_group_id: number
    video_id: number
    costs: number | null
    pay_type: number | null
    created_at: Date
    updated_at: Date | null
    deleted_at: Date | null
    _count: Sp_purchase_recordsCountAggregateOutputType | null
    _avg: Sp_purchase_recordsAvgAggregateOutputType | null
    _sum: Sp_purchase_recordsSumAggregateOutputType | null
    _min: Sp_purchase_recordsMinAggregateOutputType | null
    _max: Sp_purchase_recordsMaxAggregateOutputType | null
  }

  type GetSp_purchase_recordsGroupByPayload<T extends sp_purchase_recordsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sp_purchase_recordsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sp_purchase_recordsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sp_purchase_recordsGroupByOutputType[P]>
            : GetScalarType<T[P], Sp_purchase_recordsGroupByOutputType[P]>
        }
      >
    >


  export type sp_purchase_recordsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    video_group_id?: boolean
    video_id?: boolean
    costs?: boolean
    pay_type?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }, ExtArgs["result"]["sp_purchase_records"]>


  export type sp_purchase_recordsSelectScalar = {
    id?: boolean
    user_id?: boolean
    video_group_id?: boolean
    video_id?: boolean
    costs?: boolean
    pay_type?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }


  export type $sp_purchase_recordsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sp_purchase_records"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      user_id: bigint
      video_group_id: number
      video_id: number
      costs: number | null
      pay_type: number | null
      created_at: Date
      updated_at: Date | null
      deleted_at: Date | null
    }, ExtArgs["result"]["sp_purchase_records"]>
    composites: {}
  }

  type sp_purchase_recordsGetPayload<S extends boolean | null | undefined | sp_purchase_recordsDefaultArgs> = $Result.GetResult<Prisma.$sp_purchase_recordsPayload, S>

  type sp_purchase_recordsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<sp_purchase_recordsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Sp_purchase_recordsCountAggregateInputType | true
    }

  export interface sp_purchase_recordsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sp_purchase_records'], meta: { name: 'sp_purchase_records' } }
    /**
     * Find zero or one Sp_purchase_records that matches the filter.
     * @param {sp_purchase_recordsFindUniqueArgs} args - Arguments to find a Sp_purchase_records
     * @example
     * // Get one Sp_purchase_records
     * const sp_purchase_records = await prisma.sp_purchase_records.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sp_purchase_recordsFindUniqueArgs>(args: SelectSubset<T, sp_purchase_recordsFindUniqueArgs<ExtArgs>>): Prisma__sp_purchase_recordsClient<$Result.GetResult<Prisma.$sp_purchase_recordsPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Sp_purchase_records that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {sp_purchase_recordsFindUniqueOrThrowArgs} args - Arguments to find a Sp_purchase_records
     * @example
     * // Get one Sp_purchase_records
     * const sp_purchase_records = await prisma.sp_purchase_records.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sp_purchase_recordsFindUniqueOrThrowArgs>(args: SelectSubset<T, sp_purchase_recordsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sp_purchase_recordsClient<$Result.GetResult<Prisma.$sp_purchase_recordsPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Sp_purchase_records that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_purchase_recordsFindFirstArgs} args - Arguments to find a Sp_purchase_records
     * @example
     * // Get one Sp_purchase_records
     * const sp_purchase_records = await prisma.sp_purchase_records.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sp_purchase_recordsFindFirstArgs>(args?: SelectSubset<T, sp_purchase_recordsFindFirstArgs<ExtArgs>>): Prisma__sp_purchase_recordsClient<$Result.GetResult<Prisma.$sp_purchase_recordsPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Sp_purchase_records that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_purchase_recordsFindFirstOrThrowArgs} args - Arguments to find a Sp_purchase_records
     * @example
     * // Get one Sp_purchase_records
     * const sp_purchase_records = await prisma.sp_purchase_records.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sp_purchase_recordsFindFirstOrThrowArgs>(args?: SelectSubset<T, sp_purchase_recordsFindFirstOrThrowArgs<ExtArgs>>): Prisma__sp_purchase_recordsClient<$Result.GetResult<Prisma.$sp_purchase_recordsPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Sp_purchase_records that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_purchase_recordsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sp_purchase_records
     * const sp_purchase_records = await prisma.sp_purchase_records.findMany()
     * 
     * // Get first 10 Sp_purchase_records
     * const sp_purchase_records = await prisma.sp_purchase_records.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sp_purchase_recordsWithIdOnly = await prisma.sp_purchase_records.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sp_purchase_recordsFindManyArgs>(args?: SelectSubset<T, sp_purchase_recordsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sp_purchase_recordsPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Sp_purchase_records.
     * @param {sp_purchase_recordsCreateArgs} args - Arguments to create a Sp_purchase_records.
     * @example
     * // Create one Sp_purchase_records
     * const Sp_purchase_records = await prisma.sp_purchase_records.create({
     *   data: {
     *     // ... data to create a Sp_purchase_records
     *   }
     * })
     * 
     */
    create<T extends sp_purchase_recordsCreateArgs>(args: SelectSubset<T, sp_purchase_recordsCreateArgs<ExtArgs>>): Prisma__sp_purchase_recordsClient<$Result.GetResult<Prisma.$sp_purchase_recordsPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Sp_purchase_records.
     * @param {sp_purchase_recordsCreateManyArgs} args - Arguments to create many Sp_purchase_records.
     * @example
     * // Create many Sp_purchase_records
     * const sp_purchase_records = await prisma.sp_purchase_records.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sp_purchase_recordsCreateManyArgs>(args?: SelectSubset<T, sp_purchase_recordsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sp_purchase_records.
     * @param {sp_purchase_recordsDeleteArgs} args - Arguments to delete one Sp_purchase_records.
     * @example
     * // Delete one Sp_purchase_records
     * const Sp_purchase_records = await prisma.sp_purchase_records.delete({
     *   where: {
     *     // ... filter to delete one Sp_purchase_records
     *   }
     * })
     * 
     */
    delete<T extends sp_purchase_recordsDeleteArgs>(args: SelectSubset<T, sp_purchase_recordsDeleteArgs<ExtArgs>>): Prisma__sp_purchase_recordsClient<$Result.GetResult<Prisma.$sp_purchase_recordsPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Sp_purchase_records.
     * @param {sp_purchase_recordsUpdateArgs} args - Arguments to update one Sp_purchase_records.
     * @example
     * // Update one Sp_purchase_records
     * const sp_purchase_records = await prisma.sp_purchase_records.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sp_purchase_recordsUpdateArgs>(args: SelectSubset<T, sp_purchase_recordsUpdateArgs<ExtArgs>>): Prisma__sp_purchase_recordsClient<$Result.GetResult<Prisma.$sp_purchase_recordsPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Sp_purchase_records.
     * @param {sp_purchase_recordsDeleteManyArgs} args - Arguments to filter Sp_purchase_records to delete.
     * @example
     * // Delete a few Sp_purchase_records
     * const { count } = await prisma.sp_purchase_records.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sp_purchase_recordsDeleteManyArgs>(args?: SelectSubset<T, sp_purchase_recordsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sp_purchase_records.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_purchase_recordsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sp_purchase_records
     * const sp_purchase_records = await prisma.sp_purchase_records.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sp_purchase_recordsUpdateManyArgs>(args: SelectSubset<T, sp_purchase_recordsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sp_purchase_records.
     * @param {sp_purchase_recordsUpsertArgs} args - Arguments to update or create a Sp_purchase_records.
     * @example
     * // Update or create a Sp_purchase_records
     * const sp_purchase_records = await prisma.sp_purchase_records.upsert({
     *   create: {
     *     // ... data to create a Sp_purchase_records
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sp_purchase_records we want to update
     *   }
     * })
     */
    upsert<T extends sp_purchase_recordsUpsertArgs>(args: SelectSubset<T, sp_purchase_recordsUpsertArgs<ExtArgs>>): Prisma__sp_purchase_recordsClient<$Result.GetResult<Prisma.$sp_purchase_recordsPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Sp_purchase_records.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_purchase_recordsCountArgs} args - Arguments to filter Sp_purchase_records to count.
     * @example
     * // Count the number of Sp_purchase_records
     * const count = await prisma.sp_purchase_records.count({
     *   where: {
     *     // ... the filter for the Sp_purchase_records we want to count
     *   }
     * })
    **/
    count<T extends sp_purchase_recordsCountArgs>(
      args?: Subset<T, sp_purchase_recordsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sp_purchase_recordsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sp_purchase_records.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sp_purchase_recordsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sp_purchase_recordsAggregateArgs>(args: Subset<T, Sp_purchase_recordsAggregateArgs>): Prisma.PrismaPromise<GetSp_purchase_recordsAggregateType<T>>

    /**
     * Group by Sp_purchase_records.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_purchase_recordsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sp_purchase_recordsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sp_purchase_recordsGroupByArgs['orderBy'] }
        : { orderBy?: sp_purchase_recordsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sp_purchase_recordsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSp_purchase_recordsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sp_purchase_records model
   */
  readonly fields: sp_purchase_recordsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sp_purchase_records.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sp_purchase_recordsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sp_purchase_records model
   */ 
  interface sp_purchase_recordsFieldRefs {
    readonly id: FieldRef<"sp_purchase_records", 'BigInt'>
    readonly user_id: FieldRef<"sp_purchase_records", 'BigInt'>
    readonly video_group_id: FieldRef<"sp_purchase_records", 'Int'>
    readonly video_id: FieldRef<"sp_purchase_records", 'Int'>
    readonly costs: FieldRef<"sp_purchase_records", 'Int'>
    readonly pay_type: FieldRef<"sp_purchase_records", 'Int'>
    readonly created_at: FieldRef<"sp_purchase_records", 'DateTime'>
    readonly updated_at: FieldRef<"sp_purchase_records", 'DateTime'>
    readonly deleted_at: FieldRef<"sp_purchase_records", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sp_purchase_records findUnique
   */
  export type sp_purchase_recordsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_purchase_records
     */
    select?: sp_purchase_recordsSelect<ExtArgs> | null
    /**
     * Filter, which sp_purchase_records to fetch.
     */
    where: sp_purchase_recordsWhereUniqueInput
  }

  /**
   * sp_purchase_records findUniqueOrThrow
   */
  export type sp_purchase_recordsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_purchase_records
     */
    select?: sp_purchase_recordsSelect<ExtArgs> | null
    /**
     * Filter, which sp_purchase_records to fetch.
     */
    where: sp_purchase_recordsWhereUniqueInput
  }

  /**
   * sp_purchase_records findFirst
   */
  export type sp_purchase_recordsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_purchase_records
     */
    select?: sp_purchase_recordsSelect<ExtArgs> | null
    /**
     * Filter, which sp_purchase_records to fetch.
     */
    where?: sp_purchase_recordsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_purchase_records to fetch.
     */
    orderBy?: sp_purchase_recordsOrderByWithRelationInput | sp_purchase_recordsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_purchase_records.
     */
    cursor?: sp_purchase_recordsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_purchase_records from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_purchase_records.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_purchase_records.
     */
    distinct?: Sp_purchase_recordsScalarFieldEnum | Sp_purchase_recordsScalarFieldEnum[]
  }

  /**
   * sp_purchase_records findFirstOrThrow
   */
  export type sp_purchase_recordsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_purchase_records
     */
    select?: sp_purchase_recordsSelect<ExtArgs> | null
    /**
     * Filter, which sp_purchase_records to fetch.
     */
    where?: sp_purchase_recordsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_purchase_records to fetch.
     */
    orderBy?: sp_purchase_recordsOrderByWithRelationInput | sp_purchase_recordsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_purchase_records.
     */
    cursor?: sp_purchase_recordsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_purchase_records from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_purchase_records.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_purchase_records.
     */
    distinct?: Sp_purchase_recordsScalarFieldEnum | Sp_purchase_recordsScalarFieldEnum[]
  }

  /**
   * sp_purchase_records findMany
   */
  export type sp_purchase_recordsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_purchase_records
     */
    select?: sp_purchase_recordsSelect<ExtArgs> | null
    /**
     * Filter, which sp_purchase_records to fetch.
     */
    where?: sp_purchase_recordsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_purchase_records to fetch.
     */
    orderBy?: sp_purchase_recordsOrderByWithRelationInput | sp_purchase_recordsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sp_purchase_records.
     */
    cursor?: sp_purchase_recordsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_purchase_records from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_purchase_records.
     */
    skip?: number
    distinct?: Sp_purchase_recordsScalarFieldEnum | Sp_purchase_recordsScalarFieldEnum[]
  }

  /**
   * sp_purchase_records create
   */
  export type sp_purchase_recordsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_purchase_records
     */
    select?: sp_purchase_recordsSelect<ExtArgs> | null
    /**
     * The data needed to create a sp_purchase_records.
     */
    data: XOR<sp_purchase_recordsCreateInput, sp_purchase_recordsUncheckedCreateInput>
  }

  /**
   * sp_purchase_records createMany
   */
  export type sp_purchase_recordsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sp_purchase_records.
     */
    data: sp_purchase_recordsCreateManyInput | sp_purchase_recordsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sp_purchase_records update
   */
  export type sp_purchase_recordsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_purchase_records
     */
    select?: sp_purchase_recordsSelect<ExtArgs> | null
    /**
     * The data needed to update a sp_purchase_records.
     */
    data: XOR<sp_purchase_recordsUpdateInput, sp_purchase_recordsUncheckedUpdateInput>
    /**
     * Choose, which sp_purchase_records to update.
     */
    where: sp_purchase_recordsWhereUniqueInput
  }

  /**
   * sp_purchase_records updateMany
   */
  export type sp_purchase_recordsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sp_purchase_records.
     */
    data: XOR<sp_purchase_recordsUpdateManyMutationInput, sp_purchase_recordsUncheckedUpdateManyInput>
    /**
     * Filter which sp_purchase_records to update
     */
    where?: sp_purchase_recordsWhereInput
  }

  /**
   * sp_purchase_records upsert
   */
  export type sp_purchase_recordsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_purchase_records
     */
    select?: sp_purchase_recordsSelect<ExtArgs> | null
    /**
     * The filter to search for the sp_purchase_records to update in case it exists.
     */
    where: sp_purchase_recordsWhereUniqueInput
    /**
     * In case the sp_purchase_records found by the `where` argument doesn't exist, create a new sp_purchase_records with this data.
     */
    create: XOR<sp_purchase_recordsCreateInput, sp_purchase_recordsUncheckedCreateInput>
    /**
     * In case the sp_purchase_records was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sp_purchase_recordsUpdateInput, sp_purchase_recordsUncheckedUpdateInput>
  }

  /**
   * sp_purchase_records delete
   */
  export type sp_purchase_recordsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_purchase_records
     */
    select?: sp_purchase_recordsSelect<ExtArgs> | null
    /**
     * Filter which sp_purchase_records to delete.
     */
    where: sp_purchase_recordsWhereUniqueInput
  }

  /**
   * sp_purchase_records deleteMany
   */
  export type sp_purchase_recordsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_purchase_records to delete
     */
    where?: sp_purchase_recordsWhereInput
  }

  /**
   * sp_purchase_records without action
   */
  export type sp_purchase_recordsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_purchase_records
     */
    select?: sp_purchase_recordsSelect<ExtArgs> | null
  }


  /**
   * Model sp_reward_records
   */

  export type AggregateSp_reward_records = {
    _count: Sp_reward_recordsCountAggregateOutputType | null
    _avg: Sp_reward_recordsAvgAggregateOutputType | null
    _sum: Sp_reward_recordsSumAggregateOutputType | null
    _min: Sp_reward_recordsMinAggregateOutputType | null
    _max: Sp_reward_recordsMaxAggregateOutputType | null
  }

  export type Sp_reward_recordsAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
    reward_id: number | null
  }

  export type Sp_reward_recordsSumAggregateOutputType = {
    id: number | null
    user_id: bigint | null
    reward_id: number | null
  }

  export type Sp_reward_recordsMinAggregateOutputType = {
    id: number | null
    user_id: bigint | null
    reward_id: number | null
    updated_at: Date | null
    created_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_reward_recordsMaxAggregateOutputType = {
    id: number | null
    user_id: bigint | null
    reward_id: number | null
    updated_at: Date | null
    created_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_reward_recordsCountAggregateOutputType = {
    id: number
    user_id: number
    reward_id: number
    updated_at: number
    created_at: number
    deleted_at: number
    _all: number
  }


  export type Sp_reward_recordsAvgAggregateInputType = {
    id?: true
    user_id?: true
    reward_id?: true
  }

  export type Sp_reward_recordsSumAggregateInputType = {
    id?: true
    user_id?: true
    reward_id?: true
  }

  export type Sp_reward_recordsMinAggregateInputType = {
    id?: true
    user_id?: true
    reward_id?: true
    updated_at?: true
    created_at?: true
    deleted_at?: true
  }

  export type Sp_reward_recordsMaxAggregateInputType = {
    id?: true
    user_id?: true
    reward_id?: true
    updated_at?: true
    created_at?: true
    deleted_at?: true
  }

  export type Sp_reward_recordsCountAggregateInputType = {
    id?: true
    user_id?: true
    reward_id?: true
    updated_at?: true
    created_at?: true
    deleted_at?: true
    _all?: true
  }

  export type Sp_reward_recordsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_reward_records to aggregate.
     */
    where?: sp_reward_recordsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_reward_records to fetch.
     */
    orderBy?: sp_reward_recordsOrderByWithRelationInput | sp_reward_recordsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sp_reward_recordsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_reward_records from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_reward_records.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sp_reward_records
    **/
    _count?: true | Sp_reward_recordsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sp_reward_recordsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sp_reward_recordsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sp_reward_recordsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sp_reward_recordsMaxAggregateInputType
  }

  export type GetSp_reward_recordsAggregateType<T extends Sp_reward_recordsAggregateArgs> = {
        [P in keyof T & keyof AggregateSp_reward_records]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSp_reward_records[P]>
      : GetScalarType<T[P], AggregateSp_reward_records[P]>
  }




  export type sp_reward_recordsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sp_reward_recordsWhereInput
    orderBy?: sp_reward_recordsOrderByWithAggregationInput | sp_reward_recordsOrderByWithAggregationInput[]
    by: Sp_reward_recordsScalarFieldEnum[] | Sp_reward_recordsScalarFieldEnum
    having?: sp_reward_recordsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sp_reward_recordsCountAggregateInputType | true
    _avg?: Sp_reward_recordsAvgAggregateInputType
    _sum?: Sp_reward_recordsSumAggregateInputType
    _min?: Sp_reward_recordsMinAggregateInputType
    _max?: Sp_reward_recordsMaxAggregateInputType
  }

  export type Sp_reward_recordsGroupByOutputType = {
    id: number
    user_id: bigint
    reward_id: number
    updated_at: Date | null
    created_at: Date
    deleted_at: Date | null
    _count: Sp_reward_recordsCountAggregateOutputType | null
    _avg: Sp_reward_recordsAvgAggregateOutputType | null
    _sum: Sp_reward_recordsSumAggregateOutputType | null
    _min: Sp_reward_recordsMinAggregateOutputType | null
    _max: Sp_reward_recordsMaxAggregateOutputType | null
  }

  type GetSp_reward_recordsGroupByPayload<T extends sp_reward_recordsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sp_reward_recordsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sp_reward_recordsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sp_reward_recordsGroupByOutputType[P]>
            : GetScalarType<T[P], Sp_reward_recordsGroupByOutputType[P]>
        }
      >
    >


  export type sp_reward_recordsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    reward_id?: boolean
    updated_at?: boolean
    created_at?: boolean
    deleted_at?: boolean
  }, ExtArgs["result"]["sp_reward_records"]>


  export type sp_reward_recordsSelectScalar = {
    id?: boolean
    user_id?: boolean
    reward_id?: boolean
    updated_at?: boolean
    created_at?: boolean
    deleted_at?: boolean
  }


  export type $sp_reward_recordsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sp_reward_records"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      user_id: bigint
      reward_id: number
      updated_at: Date | null
      created_at: Date
      deleted_at: Date | null
    }, ExtArgs["result"]["sp_reward_records"]>
    composites: {}
  }

  type sp_reward_recordsGetPayload<S extends boolean | null | undefined | sp_reward_recordsDefaultArgs> = $Result.GetResult<Prisma.$sp_reward_recordsPayload, S>

  type sp_reward_recordsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<sp_reward_recordsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Sp_reward_recordsCountAggregateInputType | true
    }

  export interface sp_reward_recordsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sp_reward_records'], meta: { name: 'sp_reward_records' } }
    /**
     * Find zero or one Sp_reward_records that matches the filter.
     * @param {sp_reward_recordsFindUniqueArgs} args - Arguments to find a Sp_reward_records
     * @example
     * // Get one Sp_reward_records
     * const sp_reward_records = await prisma.sp_reward_records.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sp_reward_recordsFindUniqueArgs>(args: SelectSubset<T, sp_reward_recordsFindUniqueArgs<ExtArgs>>): Prisma__sp_reward_recordsClient<$Result.GetResult<Prisma.$sp_reward_recordsPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Sp_reward_records that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {sp_reward_recordsFindUniqueOrThrowArgs} args - Arguments to find a Sp_reward_records
     * @example
     * // Get one Sp_reward_records
     * const sp_reward_records = await prisma.sp_reward_records.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sp_reward_recordsFindUniqueOrThrowArgs>(args: SelectSubset<T, sp_reward_recordsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sp_reward_recordsClient<$Result.GetResult<Prisma.$sp_reward_recordsPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Sp_reward_records that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_reward_recordsFindFirstArgs} args - Arguments to find a Sp_reward_records
     * @example
     * // Get one Sp_reward_records
     * const sp_reward_records = await prisma.sp_reward_records.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sp_reward_recordsFindFirstArgs>(args?: SelectSubset<T, sp_reward_recordsFindFirstArgs<ExtArgs>>): Prisma__sp_reward_recordsClient<$Result.GetResult<Prisma.$sp_reward_recordsPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Sp_reward_records that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_reward_recordsFindFirstOrThrowArgs} args - Arguments to find a Sp_reward_records
     * @example
     * // Get one Sp_reward_records
     * const sp_reward_records = await prisma.sp_reward_records.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sp_reward_recordsFindFirstOrThrowArgs>(args?: SelectSubset<T, sp_reward_recordsFindFirstOrThrowArgs<ExtArgs>>): Prisma__sp_reward_recordsClient<$Result.GetResult<Prisma.$sp_reward_recordsPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Sp_reward_records that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_reward_recordsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sp_reward_records
     * const sp_reward_records = await prisma.sp_reward_records.findMany()
     * 
     * // Get first 10 Sp_reward_records
     * const sp_reward_records = await prisma.sp_reward_records.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sp_reward_recordsWithIdOnly = await prisma.sp_reward_records.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sp_reward_recordsFindManyArgs>(args?: SelectSubset<T, sp_reward_recordsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sp_reward_recordsPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Sp_reward_records.
     * @param {sp_reward_recordsCreateArgs} args - Arguments to create a Sp_reward_records.
     * @example
     * // Create one Sp_reward_records
     * const Sp_reward_records = await prisma.sp_reward_records.create({
     *   data: {
     *     // ... data to create a Sp_reward_records
     *   }
     * })
     * 
     */
    create<T extends sp_reward_recordsCreateArgs>(args: SelectSubset<T, sp_reward_recordsCreateArgs<ExtArgs>>): Prisma__sp_reward_recordsClient<$Result.GetResult<Prisma.$sp_reward_recordsPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Sp_reward_records.
     * @param {sp_reward_recordsCreateManyArgs} args - Arguments to create many Sp_reward_records.
     * @example
     * // Create many Sp_reward_records
     * const sp_reward_records = await prisma.sp_reward_records.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sp_reward_recordsCreateManyArgs>(args?: SelectSubset<T, sp_reward_recordsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sp_reward_records.
     * @param {sp_reward_recordsDeleteArgs} args - Arguments to delete one Sp_reward_records.
     * @example
     * // Delete one Sp_reward_records
     * const Sp_reward_records = await prisma.sp_reward_records.delete({
     *   where: {
     *     // ... filter to delete one Sp_reward_records
     *   }
     * })
     * 
     */
    delete<T extends sp_reward_recordsDeleteArgs>(args: SelectSubset<T, sp_reward_recordsDeleteArgs<ExtArgs>>): Prisma__sp_reward_recordsClient<$Result.GetResult<Prisma.$sp_reward_recordsPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Sp_reward_records.
     * @param {sp_reward_recordsUpdateArgs} args - Arguments to update one Sp_reward_records.
     * @example
     * // Update one Sp_reward_records
     * const sp_reward_records = await prisma.sp_reward_records.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sp_reward_recordsUpdateArgs>(args: SelectSubset<T, sp_reward_recordsUpdateArgs<ExtArgs>>): Prisma__sp_reward_recordsClient<$Result.GetResult<Prisma.$sp_reward_recordsPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Sp_reward_records.
     * @param {sp_reward_recordsDeleteManyArgs} args - Arguments to filter Sp_reward_records to delete.
     * @example
     * // Delete a few Sp_reward_records
     * const { count } = await prisma.sp_reward_records.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sp_reward_recordsDeleteManyArgs>(args?: SelectSubset<T, sp_reward_recordsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sp_reward_records.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_reward_recordsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sp_reward_records
     * const sp_reward_records = await prisma.sp_reward_records.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sp_reward_recordsUpdateManyArgs>(args: SelectSubset<T, sp_reward_recordsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sp_reward_records.
     * @param {sp_reward_recordsUpsertArgs} args - Arguments to update or create a Sp_reward_records.
     * @example
     * // Update or create a Sp_reward_records
     * const sp_reward_records = await prisma.sp_reward_records.upsert({
     *   create: {
     *     // ... data to create a Sp_reward_records
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sp_reward_records we want to update
     *   }
     * })
     */
    upsert<T extends sp_reward_recordsUpsertArgs>(args: SelectSubset<T, sp_reward_recordsUpsertArgs<ExtArgs>>): Prisma__sp_reward_recordsClient<$Result.GetResult<Prisma.$sp_reward_recordsPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Sp_reward_records.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_reward_recordsCountArgs} args - Arguments to filter Sp_reward_records to count.
     * @example
     * // Count the number of Sp_reward_records
     * const count = await prisma.sp_reward_records.count({
     *   where: {
     *     // ... the filter for the Sp_reward_records we want to count
     *   }
     * })
    **/
    count<T extends sp_reward_recordsCountArgs>(
      args?: Subset<T, sp_reward_recordsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sp_reward_recordsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sp_reward_records.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sp_reward_recordsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sp_reward_recordsAggregateArgs>(args: Subset<T, Sp_reward_recordsAggregateArgs>): Prisma.PrismaPromise<GetSp_reward_recordsAggregateType<T>>

    /**
     * Group by Sp_reward_records.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_reward_recordsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sp_reward_recordsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sp_reward_recordsGroupByArgs['orderBy'] }
        : { orderBy?: sp_reward_recordsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sp_reward_recordsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSp_reward_recordsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sp_reward_records model
   */
  readonly fields: sp_reward_recordsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sp_reward_records.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sp_reward_recordsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sp_reward_records model
   */ 
  interface sp_reward_recordsFieldRefs {
    readonly id: FieldRef<"sp_reward_records", 'Int'>
    readonly user_id: FieldRef<"sp_reward_records", 'BigInt'>
    readonly reward_id: FieldRef<"sp_reward_records", 'Int'>
    readonly updated_at: FieldRef<"sp_reward_records", 'DateTime'>
    readonly created_at: FieldRef<"sp_reward_records", 'DateTime'>
    readonly deleted_at: FieldRef<"sp_reward_records", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sp_reward_records findUnique
   */
  export type sp_reward_recordsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_reward_records
     */
    select?: sp_reward_recordsSelect<ExtArgs> | null
    /**
     * Filter, which sp_reward_records to fetch.
     */
    where: sp_reward_recordsWhereUniqueInput
  }

  /**
   * sp_reward_records findUniqueOrThrow
   */
  export type sp_reward_recordsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_reward_records
     */
    select?: sp_reward_recordsSelect<ExtArgs> | null
    /**
     * Filter, which sp_reward_records to fetch.
     */
    where: sp_reward_recordsWhereUniqueInput
  }

  /**
   * sp_reward_records findFirst
   */
  export type sp_reward_recordsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_reward_records
     */
    select?: sp_reward_recordsSelect<ExtArgs> | null
    /**
     * Filter, which sp_reward_records to fetch.
     */
    where?: sp_reward_recordsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_reward_records to fetch.
     */
    orderBy?: sp_reward_recordsOrderByWithRelationInput | sp_reward_recordsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_reward_records.
     */
    cursor?: sp_reward_recordsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_reward_records from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_reward_records.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_reward_records.
     */
    distinct?: Sp_reward_recordsScalarFieldEnum | Sp_reward_recordsScalarFieldEnum[]
  }

  /**
   * sp_reward_records findFirstOrThrow
   */
  export type sp_reward_recordsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_reward_records
     */
    select?: sp_reward_recordsSelect<ExtArgs> | null
    /**
     * Filter, which sp_reward_records to fetch.
     */
    where?: sp_reward_recordsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_reward_records to fetch.
     */
    orderBy?: sp_reward_recordsOrderByWithRelationInput | sp_reward_recordsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_reward_records.
     */
    cursor?: sp_reward_recordsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_reward_records from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_reward_records.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_reward_records.
     */
    distinct?: Sp_reward_recordsScalarFieldEnum | Sp_reward_recordsScalarFieldEnum[]
  }

  /**
   * sp_reward_records findMany
   */
  export type sp_reward_recordsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_reward_records
     */
    select?: sp_reward_recordsSelect<ExtArgs> | null
    /**
     * Filter, which sp_reward_records to fetch.
     */
    where?: sp_reward_recordsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_reward_records to fetch.
     */
    orderBy?: sp_reward_recordsOrderByWithRelationInput | sp_reward_recordsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sp_reward_records.
     */
    cursor?: sp_reward_recordsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_reward_records from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_reward_records.
     */
    skip?: number
    distinct?: Sp_reward_recordsScalarFieldEnum | Sp_reward_recordsScalarFieldEnum[]
  }

  /**
   * sp_reward_records create
   */
  export type sp_reward_recordsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_reward_records
     */
    select?: sp_reward_recordsSelect<ExtArgs> | null
    /**
     * The data needed to create a sp_reward_records.
     */
    data: XOR<sp_reward_recordsCreateInput, sp_reward_recordsUncheckedCreateInput>
  }

  /**
   * sp_reward_records createMany
   */
  export type sp_reward_recordsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sp_reward_records.
     */
    data: sp_reward_recordsCreateManyInput | sp_reward_recordsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sp_reward_records update
   */
  export type sp_reward_recordsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_reward_records
     */
    select?: sp_reward_recordsSelect<ExtArgs> | null
    /**
     * The data needed to update a sp_reward_records.
     */
    data: XOR<sp_reward_recordsUpdateInput, sp_reward_recordsUncheckedUpdateInput>
    /**
     * Choose, which sp_reward_records to update.
     */
    where: sp_reward_recordsWhereUniqueInput
  }

  /**
   * sp_reward_records updateMany
   */
  export type sp_reward_recordsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sp_reward_records.
     */
    data: XOR<sp_reward_recordsUpdateManyMutationInput, sp_reward_recordsUncheckedUpdateManyInput>
    /**
     * Filter which sp_reward_records to update
     */
    where?: sp_reward_recordsWhereInput
  }

  /**
   * sp_reward_records upsert
   */
  export type sp_reward_recordsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_reward_records
     */
    select?: sp_reward_recordsSelect<ExtArgs> | null
    /**
     * The filter to search for the sp_reward_records to update in case it exists.
     */
    where: sp_reward_recordsWhereUniqueInput
    /**
     * In case the sp_reward_records found by the `where` argument doesn't exist, create a new sp_reward_records with this data.
     */
    create: XOR<sp_reward_recordsCreateInput, sp_reward_recordsUncheckedCreateInput>
    /**
     * In case the sp_reward_records was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sp_reward_recordsUpdateInput, sp_reward_recordsUncheckedUpdateInput>
  }

  /**
   * sp_reward_records delete
   */
  export type sp_reward_recordsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_reward_records
     */
    select?: sp_reward_recordsSelect<ExtArgs> | null
    /**
     * Filter which sp_reward_records to delete.
     */
    where: sp_reward_recordsWhereUniqueInput
  }

  /**
   * sp_reward_records deleteMany
   */
  export type sp_reward_recordsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_reward_records to delete
     */
    where?: sp_reward_recordsWhereInput
  }

  /**
   * sp_reward_records without action
   */
  export type sp_reward_recordsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_reward_records
     */
    select?: sp_reward_recordsSelect<ExtArgs> | null
  }


  /**
   * Model sp_rewards_list
   */

  export type AggregateSp_rewards_list = {
    _count: Sp_rewards_listCountAggregateOutputType | null
    _avg: Sp_rewards_listAvgAggregateOutputType | null
    _sum: Sp_rewards_listSumAggregateOutputType | null
    _min: Sp_rewards_listMinAggregateOutputType | null
    _max: Sp_rewards_listMaxAggregateOutputType | null
  }

  export type Sp_rewards_listAvgAggregateOutputType = {
    id: number | null
    max_nums: number | null
    sort: number | null
    bonus: number | null
  }

  export type Sp_rewards_listSumAggregateOutputType = {
    id: number | null
    max_nums: number | null
    sort: number | null
    bonus: number | null
  }

  export type Sp_rewards_listMinAggregateOutputType = {
    id: number | null
    type: boolean | null
    is_once: boolean | null
    max_nums: number | null
    sort: number | null
    bonus: number | null
    updated_at: Date | null
    created_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_rewards_listMaxAggregateOutputType = {
    id: number | null
    type: boolean | null
    is_once: boolean | null
    max_nums: number | null
    sort: number | null
    bonus: number | null
    updated_at: Date | null
    created_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_rewards_listCountAggregateOutputType = {
    id: number
    type: number
    is_once: number
    max_nums: number
    sort: number
    bonus: number
    updated_at: number
    created_at: number
    deleted_at: number
    _all: number
  }


  export type Sp_rewards_listAvgAggregateInputType = {
    id?: true
    max_nums?: true
    sort?: true
    bonus?: true
  }

  export type Sp_rewards_listSumAggregateInputType = {
    id?: true
    max_nums?: true
    sort?: true
    bonus?: true
  }

  export type Sp_rewards_listMinAggregateInputType = {
    id?: true
    type?: true
    is_once?: true
    max_nums?: true
    sort?: true
    bonus?: true
    updated_at?: true
    created_at?: true
    deleted_at?: true
  }

  export type Sp_rewards_listMaxAggregateInputType = {
    id?: true
    type?: true
    is_once?: true
    max_nums?: true
    sort?: true
    bonus?: true
    updated_at?: true
    created_at?: true
    deleted_at?: true
  }

  export type Sp_rewards_listCountAggregateInputType = {
    id?: true
    type?: true
    is_once?: true
    max_nums?: true
    sort?: true
    bonus?: true
    updated_at?: true
    created_at?: true
    deleted_at?: true
    _all?: true
  }

  export type Sp_rewards_listAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_rewards_list to aggregate.
     */
    where?: sp_rewards_listWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_rewards_lists to fetch.
     */
    orderBy?: sp_rewards_listOrderByWithRelationInput | sp_rewards_listOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sp_rewards_listWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_rewards_lists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_rewards_lists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sp_rewards_lists
    **/
    _count?: true | Sp_rewards_listCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sp_rewards_listAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sp_rewards_listSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sp_rewards_listMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sp_rewards_listMaxAggregateInputType
  }

  export type GetSp_rewards_listAggregateType<T extends Sp_rewards_listAggregateArgs> = {
        [P in keyof T & keyof AggregateSp_rewards_list]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSp_rewards_list[P]>
      : GetScalarType<T[P], AggregateSp_rewards_list[P]>
  }




  export type sp_rewards_listGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sp_rewards_listWhereInput
    orderBy?: sp_rewards_listOrderByWithAggregationInput | sp_rewards_listOrderByWithAggregationInput[]
    by: Sp_rewards_listScalarFieldEnum[] | Sp_rewards_listScalarFieldEnum
    having?: sp_rewards_listScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sp_rewards_listCountAggregateInputType | true
    _avg?: Sp_rewards_listAvgAggregateInputType
    _sum?: Sp_rewards_listSumAggregateInputType
    _min?: Sp_rewards_listMinAggregateInputType
    _max?: Sp_rewards_listMaxAggregateInputType
  }

  export type Sp_rewards_listGroupByOutputType = {
    id: number
    type: boolean
    is_once: boolean
    max_nums: number
    sort: number | null
    bonus: number
    updated_at: Date | null
    created_at: Date
    deleted_at: Date | null
    _count: Sp_rewards_listCountAggregateOutputType | null
    _avg: Sp_rewards_listAvgAggregateOutputType | null
    _sum: Sp_rewards_listSumAggregateOutputType | null
    _min: Sp_rewards_listMinAggregateOutputType | null
    _max: Sp_rewards_listMaxAggregateOutputType | null
  }

  type GetSp_rewards_listGroupByPayload<T extends sp_rewards_listGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sp_rewards_listGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sp_rewards_listGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sp_rewards_listGroupByOutputType[P]>
            : GetScalarType<T[P], Sp_rewards_listGroupByOutputType[P]>
        }
      >
    >


  export type sp_rewards_listSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    is_once?: boolean
    max_nums?: boolean
    sort?: boolean
    bonus?: boolean
    updated_at?: boolean
    created_at?: boolean
    deleted_at?: boolean
  }, ExtArgs["result"]["sp_rewards_list"]>


  export type sp_rewards_listSelectScalar = {
    id?: boolean
    type?: boolean
    is_once?: boolean
    max_nums?: boolean
    sort?: boolean
    bonus?: boolean
    updated_at?: boolean
    created_at?: boolean
    deleted_at?: boolean
  }


  export type $sp_rewards_listPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sp_rewards_list"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      type: boolean
      is_once: boolean
      max_nums: number
      sort: number | null
      bonus: number
      updated_at: Date | null
      created_at: Date
      deleted_at: Date | null
    }, ExtArgs["result"]["sp_rewards_list"]>
    composites: {}
  }

  type sp_rewards_listGetPayload<S extends boolean | null | undefined | sp_rewards_listDefaultArgs> = $Result.GetResult<Prisma.$sp_rewards_listPayload, S>

  type sp_rewards_listCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<sp_rewards_listFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Sp_rewards_listCountAggregateInputType | true
    }

  export interface sp_rewards_listDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sp_rewards_list'], meta: { name: 'sp_rewards_list' } }
    /**
     * Find zero or one Sp_rewards_list that matches the filter.
     * @param {sp_rewards_listFindUniqueArgs} args - Arguments to find a Sp_rewards_list
     * @example
     * // Get one Sp_rewards_list
     * const sp_rewards_list = await prisma.sp_rewards_list.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sp_rewards_listFindUniqueArgs>(args: SelectSubset<T, sp_rewards_listFindUniqueArgs<ExtArgs>>): Prisma__sp_rewards_listClient<$Result.GetResult<Prisma.$sp_rewards_listPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Sp_rewards_list that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {sp_rewards_listFindUniqueOrThrowArgs} args - Arguments to find a Sp_rewards_list
     * @example
     * // Get one Sp_rewards_list
     * const sp_rewards_list = await prisma.sp_rewards_list.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sp_rewards_listFindUniqueOrThrowArgs>(args: SelectSubset<T, sp_rewards_listFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sp_rewards_listClient<$Result.GetResult<Prisma.$sp_rewards_listPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Sp_rewards_list that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_rewards_listFindFirstArgs} args - Arguments to find a Sp_rewards_list
     * @example
     * // Get one Sp_rewards_list
     * const sp_rewards_list = await prisma.sp_rewards_list.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sp_rewards_listFindFirstArgs>(args?: SelectSubset<T, sp_rewards_listFindFirstArgs<ExtArgs>>): Prisma__sp_rewards_listClient<$Result.GetResult<Prisma.$sp_rewards_listPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Sp_rewards_list that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_rewards_listFindFirstOrThrowArgs} args - Arguments to find a Sp_rewards_list
     * @example
     * // Get one Sp_rewards_list
     * const sp_rewards_list = await prisma.sp_rewards_list.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sp_rewards_listFindFirstOrThrowArgs>(args?: SelectSubset<T, sp_rewards_listFindFirstOrThrowArgs<ExtArgs>>): Prisma__sp_rewards_listClient<$Result.GetResult<Prisma.$sp_rewards_listPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Sp_rewards_lists that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_rewards_listFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sp_rewards_lists
     * const sp_rewards_lists = await prisma.sp_rewards_list.findMany()
     * 
     * // Get first 10 Sp_rewards_lists
     * const sp_rewards_lists = await prisma.sp_rewards_list.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sp_rewards_listWithIdOnly = await prisma.sp_rewards_list.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sp_rewards_listFindManyArgs>(args?: SelectSubset<T, sp_rewards_listFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sp_rewards_listPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Sp_rewards_list.
     * @param {sp_rewards_listCreateArgs} args - Arguments to create a Sp_rewards_list.
     * @example
     * // Create one Sp_rewards_list
     * const Sp_rewards_list = await prisma.sp_rewards_list.create({
     *   data: {
     *     // ... data to create a Sp_rewards_list
     *   }
     * })
     * 
     */
    create<T extends sp_rewards_listCreateArgs>(args: SelectSubset<T, sp_rewards_listCreateArgs<ExtArgs>>): Prisma__sp_rewards_listClient<$Result.GetResult<Prisma.$sp_rewards_listPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Sp_rewards_lists.
     * @param {sp_rewards_listCreateManyArgs} args - Arguments to create many Sp_rewards_lists.
     * @example
     * // Create many Sp_rewards_lists
     * const sp_rewards_list = await prisma.sp_rewards_list.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sp_rewards_listCreateManyArgs>(args?: SelectSubset<T, sp_rewards_listCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sp_rewards_list.
     * @param {sp_rewards_listDeleteArgs} args - Arguments to delete one Sp_rewards_list.
     * @example
     * // Delete one Sp_rewards_list
     * const Sp_rewards_list = await prisma.sp_rewards_list.delete({
     *   where: {
     *     // ... filter to delete one Sp_rewards_list
     *   }
     * })
     * 
     */
    delete<T extends sp_rewards_listDeleteArgs>(args: SelectSubset<T, sp_rewards_listDeleteArgs<ExtArgs>>): Prisma__sp_rewards_listClient<$Result.GetResult<Prisma.$sp_rewards_listPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Sp_rewards_list.
     * @param {sp_rewards_listUpdateArgs} args - Arguments to update one Sp_rewards_list.
     * @example
     * // Update one Sp_rewards_list
     * const sp_rewards_list = await prisma.sp_rewards_list.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sp_rewards_listUpdateArgs>(args: SelectSubset<T, sp_rewards_listUpdateArgs<ExtArgs>>): Prisma__sp_rewards_listClient<$Result.GetResult<Prisma.$sp_rewards_listPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Sp_rewards_lists.
     * @param {sp_rewards_listDeleteManyArgs} args - Arguments to filter Sp_rewards_lists to delete.
     * @example
     * // Delete a few Sp_rewards_lists
     * const { count } = await prisma.sp_rewards_list.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sp_rewards_listDeleteManyArgs>(args?: SelectSubset<T, sp_rewards_listDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sp_rewards_lists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_rewards_listUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sp_rewards_lists
     * const sp_rewards_list = await prisma.sp_rewards_list.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sp_rewards_listUpdateManyArgs>(args: SelectSubset<T, sp_rewards_listUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sp_rewards_list.
     * @param {sp_rewards_listUpsertArgs} args - Arguments to update or create a Sp_rewards_list.
     * @example
     * // Update or create a Sp_rewards_list
     * const sp_rewards_list = await prisma.sp_rewards_list.upsert({
     *   create: {
     *     // ... data to create a Sp_rewards_list
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sp_rewards_list we want to update
     *   }
     * })
     */
    upsert<T extends sp_rewards_listUpsertArgs>(args: SelectSubset<T, sp_rewards_listUpsertArgs<ExtArgs>>): Prisma__sp_rewards_listClient<$Result.GetResult<Prisma.$sp_rewards_listPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Sp_rewards_lists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_rewards_listCountArgs} args - Arguments to filter Sp_rewards_lists to count.
     * @example
     * // Count the number of Sp_rewards_lists
     * const count = await prisma.sp_rewards_list.count({
     *   where: {
     *     // ... the filter for the Sp_rewards_lists we want to count
     *   }
     * })
    **/
    count<T extends sp_rewards_listCountArgs>(
      args?: Subset<T, sp_rewards_listCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sp_rewards_listCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sp_rewards_list.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sp_rewards_listAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sp_rewards_listAggregateArgs>(args: Subset<T, Sp_rewards_listAggregateArgs>): Prisma.PrismaPromise<GetSp_rewards_listAggregateType<T>>

    /**
     * Group by Sp_rewards_list.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_rewards_listGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sp_rewards_listGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sp_rewards_listGroupByArgs['orderBy'] }
        : { orderBy?: sp_rewards_listGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sp_rewards_listGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSp_rewards_listGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sp_rewards_list model
   */
  readonly fields: sp_rewards_listFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sp_rewards_list.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sp_rewards_listClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sp_rewards_list model
   */ 
  interface sp_rewards_listFieldRefs {
    readonly id: FieldRef<"sp_rewards_list", 'Int'>
    readonly type: FieldRef<"sp_rewards_list", 'Boolean'>
    readonly is_once: FieldRef<"sp_rewards_list", 'Boolean'>
    readonly max_nums: FieldRef<"sp_rewards_list", 'Int'>
    readonly sort: FieldRef<"sp_rewards_list", 'Int'>
    readonly bonus: FieldRef<"sp_rewards_list", 'Int'>
    readonly updated_at: FieldRef<"sp_rewards_list", 'DateTime'>
    readonly created_at: FieldRef<"sp_rewards_list", 'DateTime'>
    readonly deleted_at: FieldRef<"sp_rewards_list", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sp_rewards_list findUnique
   */
  export type sp_rewards_listFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_rewards_list
     */
    select?: sp_rewards_listSelect<ExtArgs> | null
    /**
     * Filter, which sp_rewards_list to fetch.
     */
    where: sp_rewards_listWhereUniqueInput
  }

  /**
   * sp_rewards_list findUniqueOrThrow
   */
  export type sp_rewards_listFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_rewards_list
     */
    select?: sp_rewards_listSelect<ExtArgs> | null
    /**
     * Filter, which sp_rewards_list to fetch.
     */
    where: sp_rewards_listWhereUniqueInput
  }

  /**
   * sp_rewards_list findFirst
   */
  export type sp_rewards_listFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_rewards_list
     */
    select?: sp_rewards_listSelect<ExtArgs> | null
    /**
     * Filter, which sp_rewards_list to fetch.
     */
    where?: sp_rewards_listWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_rewards_lists to fetch.
     */
    orderBy?: sp_rewards_listOrderByWithRelationInput | sp_rewards_listOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_rewards_lists.
     */
    cursor?: sp_rewards_listWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_rewards_lists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_rewards_lists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_rewards_lists.
     */
    distinct?: Sp_rewards_listScalarFieldEnum | Sp_rewards_listScalarFieldEnum[]
  }

  /**
   * sp_rewards_list findFirstOrThrow
   */
  export type sp_rewards_listFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_rewards_list
     */
    select?: sp_rewards_listSelect<ExtArgs> | null
    /**
     * Filter, which sp_rewards_list to fetch.
     */
    where?: sp_rewards_listWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_rewards_lists to fetch.
     */
    orderBy?: sp_rewards_listOrderByWithRelationInput | sp_rewards_listOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_rewards_lists.
     */
    cursor?: sp_rewards_listWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_rewards_lists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_rewards_lists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_rewards_lists.
     */
    distinct?: Sp_rewards_listScalarFieldEnum | Sp_rewards_listScalarFieldEnum[]
  }

  /**
   * sp_rewards_list findMany
   */
  export type sp_rewards_listFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_rewards_list
     */
    select?: sp_rewards_listSelect<ExtArgs> | null
    /**
     * Filter, which sp_rewards_lists to fetch.
     */
    where?: sp_rewards_listWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_rewards_lists to fetch.
     */
    orderBy?: sp_rewards_listOrderByWithRelationInput | sp_rewards_listOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sp_rewards_lists.
     */
    cursor?: sp_rewards_listWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_rewards_lists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_rewards_lists.
     */
    skip?: number
    distinct?: Sp_rewards_listScalarFieldEnum | Sp_rewards_listScalarFieldEnum[]
  }

  /**
   * sp_rewards_list create
   */
  export type sp_rewards_listCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_rewards_list
     */
    select?: sp_rewards_listSelect<ExtArgs> | null
    /**
     * The data needed to create a sp_rewards_list.
     */
    data: XOR<sp_rewards_listCreateInput, sp_rewards_listUncheckedCreateInput>
  }

  /**
   * sp_rewards_list createMany
   */
  export type sp_rewards_listCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sp_rewards_lists.
     */
    data: sp_rewards_listCreateManyInput | sp_rewards_listCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sp_rewards_list update
   */
  export type sp_rewards_listUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_rewards_list
     */
    select?: sp_rewards_listSelect<ExtArgs> | null
    /**
     * The data needed to update a sp_rewards_list.
     */
    data: XOR<sp_rewards_listUpdateInput, sp_rewards_listUncheckedUpdateInput>
    /**
     * Choose, which sp_rewards_list to update.
     */
    where: sp_rewards_listWhereUniqueInput
  }

  /**
   * sp_rewards_list updateMany
   */
  export type sp_rewards_listUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sp_rewards_lists.
     */
    data: XOR<sp_rewards_listUpdateManyMutationInput, sp_rewards_listUncheckedUpdateManyInput>
    /**
     * Filter which sp_rewards_lists to update
     */
    where?: sp_rewards_listWhereInput
  }

  /**
   * sp_rewards_list upsert
   */
  export type sp_rewards_listUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_rewards_list
     */
    select?: sp_rewards_listSelect<ExtArgs> | null
    /**
     * The filter to search for the sp_rewards_list to update in case it exists.
     */
    where: sp_rewards_listWhereUniqueInput
    /**
     * In case the sp_rewards_list found by the `where` argument doesn't exist, create a new sp_rewards_list with this data.
     */
    create: XOR<sp_rewards_listCreateInput, sp_rewards_listUncheckedCreateInput>
    /**
     * In case the sp_rewards_list was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sp_rewards_listUpdateInput, sp_rewards_listUncheckedUpdateInput>
  }

  /**
   * sp_rewards_list delete
   */
  export type sp_rewards_listDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_rewards_list
     */
    select?: sp_rewards_listSelect<ExtArgs> | null
    /**
     * Filter which sp_rewards_list to delete.
     */
    where: sp_rewards_listWhereUniqueInput
  }

  /**
   * sp_rewards_list deleteMany
   */
  export type sp_rewards_listDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_rewards_lists to delete
     */
    where?: sp_rewards_listWhereInput
  }

  /**
   * sp_rewards_list without action
   */
  export type sp_rewards_listDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_rewards_list
     */
    select?: sp_rewards_listSelect<ExtArgs> | null
  }


  /**
   * Model sp_rewards_type
   */

  export type AggregateSp_rewards_type = {
    _count: Sp_rewards_typeCountAggregateOutputType | null
    _avg: Sp_rewards_typeAvgAggregateOutputType | null
    _sum: Sp_rewards_typeSumAggregateOutputType | null
    _min: Sp_rewards_typeMinAggregateOutputType | null
    _max: Sp_rewards_typeMaxAggregateOutputType | null
  }

  export type Sp_rewards_typeAvgAggregateOutputType = {
    id: number | null
  }

  export type Sp_rewards_typeSumAggregateOutputType = {
    id: number | null
  }

  export type Sp_rewards_typeMinAggregateOutputType = {
    id: number | null
    name: string | null
    status: boolean | null
    updated_at: Date | null
    created_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_rewards_typeMaxAggregateOutputType = {
    id: number | null
    name: string | null
    status: boolean | null
    updated_at: Date | null
    created_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_rewards_typeCountAggregateOutputType = {
    id: number
    name: number
    status: number
    updated_at: number
    created_at: number
    deleted_at: number
    _all: number
  }


  export type Sp_rewards_typeAvgAggregateInputType = {
    id?: true
  }

  export type Sp_rewards_typeSumAggregateInputType = {
    id?: true
  }

  export type Sp_rewards_typeMinAggregateInputType = {
    id?: true
    name?: true
    status?: true
    updated_at?: true
    created_at?: true
    deleted_at?: true
  }

  export type Sp_rewards_typeMaxAggregateInputType = {
    id?: true
    name?: true
    status?: true
    updated_at?: true
    created_at?: true
    deleted_at?: true
  }

  export type Sp_rewards_typeCountAggregateInputType = {
    id?: true
    name?: true
    status?: true
    updated_at?: true
    created_at?: true
    deleted_at?: true
    _all?: true
  }

  export type Sp_rewards_typeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_rewards_type to aggregate.
     */
    where?: sp_rewards_typeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_rewards_types to fetch.
     */
    orderBy?: sp_rewards_typeOrderByWithRelationInput | sp_rewards_typeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sp_rewards_typeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_rewards_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_rewards_types.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sp_rewards_types
    **/
    _count?: true | Sp_rewards_typeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sp_rewards_typeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sp_rewards_typeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sp_rewards_typeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sp_rewards_typeMaxAggregateInputType
  }

  export type GetSp_rewards_typeAggregateType<T extends Sp_rewards_typeAggregateArgs> = {
        [P in keyof T & keyof AggregateSp_rewards_type]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSp_rewards_type[P]>
      : GetScalarType<T[P], AggregateSp_rewards_type[P]>
  }




  export type sp_rewards_typeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sp_rewards_typeWhereInput
    orderBy?: sp_rewards_typeOrderByWithAggregationInput | sp_rewards_typeOrderByWithAggregationInput[]
    by: Sp_rewards_typeScalarFieldEnum[] | Sp_rewards_typeScalarFieldEnum
    having?: sp_rewards_typeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sp_rewards_typeCountAggregateInputType | true
    _avg?: Sp_rewards_typeAvgAggregateInputType
    _sum?: Sp_rewards_typeSumAggregateInputType
    _min?: Sp_rewards_typeMinAggregateInputType
    _max?: Sp_rewards_typeMaxAggregateInputType
  }

  export type Sp_rewards_typeGroupByOutputType = {
    id: number
    name: string
    status: boolean
    updated_at: Date | null
    created_at: Date
    deleted_at: Date | null
    _count: Sp_rewards_typeCountAggregateOutputType | null
    _avg: Sp_rewards_typeAvgAggregateOutputType | null
    _sum: Sp_rewards_typeSumAggregateOutputType | null
    _min: Sp_rewards_typeMinAggregateOutputType | null
    _max: Sp_rewards_typeMaxAggregateOutputType | null
  }

  type GetSp_rewards_typeGroupByPayload<T extends sp_rewards_typeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sp_rewards_typeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sp_rewards_typeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sp_rewards_typeGroupByOutputType[P]>
            : GetScalarType<T[P], Sp_rewards_typeGroupByOutputType[P]>
        }
      >
    >


  export type sp_rewards_typeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    status?: boolean
    updated_at?: boolean
    created_at?: boolean
    deleted_at?: boolean
  }, ExtArgs["result"]["sp_rewards_type"]>


  export type sp_rewards_typeSelectScalar = {
    id?: boolean
    name?: boolean
    status?: boolean
    updated_at?: boolean
    created_at?: boolean
    deleted_at?: boolean
  }


  export type $sp_rewards_typePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sp_rewards_type"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      status: boolean
      updated_at: Date | null
      created_at: Date
      deleted_at: Date | null
    }, ExtArgs["result"]["sp_rewards_type"]>
    composites: {}
  }

  type sp_rewards_typeGetPayload<S extends boolean | null | undefined | sp_rewards_typeDefaultArgs> = $Result.GetResult<Prisma.$sp_rewards_typePayload, S>

  type sp_rewards_typeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<sp_rewards_typeFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Sp_rewards_typeCountAggregateInputType | true
    }

  export interface sp_rewards_typeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sp_rewards_type'], meta: { name: 'sp_rewards_type' } }
    /**
     * Find zero or one Sp_rewards_type that matches the filter.
     * @param {sp_rewards_typeFindUniqueArgs} args - Arguments to find a Sp_rewards_type
     * @example
     * // Get one Sp_rewards_type
     * const sp_rewards_type = await prisma.sp_rewards_type.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sp_rewards_typeFindUniqueArgs>(args: SelectSubset<T, sp_rewards_typeFindUniqueArgs<ExtArgs>>): Prisma__sp_rewards_typeClient<$Result.GetResult<Prisma.$sp_rewards_typePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Sp_rewards_type that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {sp_rewards_typeFindUniqueOrThrowArgs} args - Arguments to find a Sp_rewards_type
     * @example
     * // Get one Sp_rewards_type
     * const sp_rewards_type = await prisma.sp_rewards_type.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sp_rewards_typeFindUniqueOrThrowArgs>(args: SelectSubset<T, sp_rewards_typeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sp_rewards_typeClient<$Result.GetResult<Prisma.$sp_rewards_typePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Sp_rewards_type that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_rewards_typeFindFirstArgs} args - Arguments to find a Sp_rewards_type
     * @example
     * // Get one Sp_rewards_type
     * const sp_rewards_type = await prisma.sp_rewards_type.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sp_rewards_typeFindFirstArgs>(args?: SelectSubset<T, sp_rewards_typeFindFirstArgs<ExtArgs>>): Prisma__sp_rewards_typeClient<$Result.GetResult<Prisma.$sp_rewards_typePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Sp_rewards_type that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_rewards_typeFindFirstOrThrowArgs} args - Arguments to find a Sp_rewards_type
     * @example
     * // Get one Sp_rewards_type
     * const sp_rewards_type = await prisma.sp_rewards_type.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sp_rewards_typeFindFirstOrThrowArgs>(args?: SelectSubset<T, sp_rewards_typeFindFirstOrThrowArgs<ExtArgs>>): Prisma__sp_rewards_typeClient<$Result.GetResult<Prisma.$sp_rewards_typePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Sp_rewards_types that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_rewards_typeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sp_rewards_types
     * const sp_rewards_types = await prisma.sp_rewards_type.findMany()
     * 
     * // Get first 10 Sp_rewards_types
     * const sp_rewards_types = await prisma.sp_rewards_type.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sp_rewards_typeWithIdOnly = await prisma.sp_rewards_type.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sp_rewards_typeFindManyArgs>(args?: SelectSubset<T, sp_rewards_typeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sp_rewards_typePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Sp_rewards_type.
     * @param {sp_rewards_typeCreateArgs} args - Arguments to create a Sp_rewards_type.
     * @example
     * // Create one Sp_rewards_type
     * const Sp_rewards_type = await prisma.sp_rewards_type.create({
     *   data: {
     *     // ... data to create a Sp_rewards_type
     *   }
     * })
     * 
     */
    create<T extends sp_rewards_typeCreateArgs>(args: SelectSubset<T, sp_rewards_typeCreateArgs<ExtArgs>>): Prisma__sp_rewards_typeClient<$Result.GetResult<Prisma.$sp_rewards_typePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Sp_rewards_types.
     * @param {sp_rewards_typeCreateManyArgs} args - Arguments to create many Sp_rewards_types.
     * @example
     * // Create many Sp_rewards_types
     * const sp_rewards_type = await prisma.sp_rewards_type.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sp_rewards_typeCreateManyArgs>(args?: SelectSubset<T, sp_rewards_typeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sp_rewards_type.
     * @param {sp_rewards_typeDeleteArgs} args - Arguments to delete one Sp_rewards_type.
     * @example
     * // Delete one Sp_rewards_type
     * const Sp_rewards_type = await prisma.sp_rewards_type.delete({
     *   where: {
     *     // ... filter to delete one Sp_rewards_type
     *   }
     * })
     * 
     */
    delete<T extends sp_rewards_typeDeleteArgs>(args: SelectSubset<T, sp_rewards_typeDeleteArgs<ExtArgs>>): Prisma__sp_rewards_typeClient<$Result.GetResult<Prisma.$sp_rewards_typePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Sp_rewards_type.
     * @param {sp_rewards_typeUpdateArgs} args - Arguments to update one Sp_rewards_type.
     * @example
     * // Update one Sp_rewards_type
     * const sp_rewards_type = await prisma.sp_rewards_type.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sp_rewards_typeUpdateArgs>(args: SelectSubset<T, sp_rewards_typeUpdateArgs<ExtArgs>>): Prisma__sp_rewards_typeClient<$Result.GetResult<Prisma.$sp_rewards_typePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Sp_rewards_types.
     * @param {sp_rewards_typeDeleteManyArgs} args - Arguments to filter Sp_rewards_types to delete.
     * @example
     * // Delete a few Sp_rewards_types
     * const { count } = await prisma.sp_rewards_type.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sp_rewards_typeDeleteManyArgs>(args?: SelectSubset<T, sp_rewards_typeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sp_rewards_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_rewards_typeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sp_rewards_types
     * const sp_rewards_type = await prisma.sp_rewards_type.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sp_rewards_typeUpdateManyArgs>(args: SelectSubset<T, sp_rewards_typeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sp_rewards_type.
     * @param {sp_rewards_typeUpsertArgs} args - Arguments to update or create a Sp_rewards_type.
     * @example
     * // Update or create a Sp_rewards_type
     * const sp_rewards_type = await prisma.sp_rewards_type.upsert({
     *   create: {
     *     // ... data to create a Sp_rewards_type
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sp_rewards_type we want to update
     *   }
     * })
     */
    upsert<T extends sp_rewards_typeUpsertArgs>(args: SelectSubset<T, sp_rewards_typeUpsertArgs<ExtArgs>>): Prisma__sp_rewards_typeClient<$Result.GetResult<Prisma.$sp_rewards_typePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Sp_rewards_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_rewards_typeCountArgs} args - Arguments to filter Sp_rewards_types to count.
     * @example
     * // Count the number of Sp_rewards_types
     * const count = await prisma.sp_rewards_type.count({
     *   where: {
     *     // ... the filter for the Sp_rewards_types we want to count
     *   }
     * })
    **/
    count<T extends sp_rewards_typeCountArgs>(
      args?: Subset<T, sp_rewards_typeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sp_rewards_typeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sp_rewards_type.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sp_rewards_typeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sp_rewards_typeAggregateArgs>(args: Subset<T, Sp_rewards_typeAggregateArgs>): Prisma.PrismaPromise<GetSp_rewards_typeAggregateType<T>>

    /**
     * Group by Sp_rewards_type.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_rewards_typeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sp_rewards_typeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sp_rewards_typeGroupByArgs['orderBy'] }
        : { orderBy?: sp_rewards_typeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sp_rewards_typeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSp_rewards_typeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sp_rewards_type model
   */
  readonly fields: sp_rewards_typeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sp_rewards_type.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sp_rewards_typeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sp_rewards_type model
   */ 
  interface sp_rewards_typeFieldRefs {
    readonly id: FieldRef<"sp_rewards_type", 'Int'>
    readonly name: FieldRef<"sp_rewards_type", 'String'>
    readonly status: FieldRef<"sp_rewards_type", 'Boolean'>
    readonly updated_at: FieldRef<"sp_rewards_type", 'DateTime'>
    readonly created_at: FieldRef<"sp_rewards_type", 'DateTime'>
    readonly deleted_at: FieldRef<"sp_rewards_type", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sp_rewards_type findUnique
   */
  export type sp_rewards_typeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_rewards_type
     */
    select?: sp_rewards_typeSelect<ExtArgs> | null
    /**
     * Filter, which sp_rewards_type to fetch.
     */
    where: sp_rewards_typeWhereUniqueInput
  }

  /**
   * sp_rewards_type findUniqueOrThrow
   */
  export type sp_rewards_typeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_rewards_type
     */
    select?: sp_rewards_typeSelect<ExtArgs> | null
    /**
     * Filter, which sp_rewards_type to fetch.
     */
    where: sp_rewards_typeWhereUniqueInput
  }

  /**
   * sp_rewards_type findFirst
   */
  export type sp_rewards_typeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_rewards_type
     */
    select?: sp_rewards_typeSelect<ExtArgs> | null
    /**
     * Filter, which sp_rewards_type to fetch.
     */
    where?: sp_rewards_typeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_rewards_types to fetch.
     */
    orderBy?: sp_rewards_typeOrderByWithRelationInput | sp_rewards_typeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_rewards_types.
     */
    cursor?: sp_rewards_typeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_rewards_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_rewards_types.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_rewards_types.
     */
    distinct?: Sp_rewards_typeScalarFieldEnum | Sp_rewards_typeScalarFieldEnum[]
  }

  /**
   * sp_rewards_type findFirstOrThrow
   */
  export type sp_rewards_typeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_rewards_type
     */
    select?: sp_rewards_typeSelect<ExtArgs> | null
    /**
     * Filter, which sp_rewards_type to fetch.
     */
    where?: sp_rewards_typeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_rewards_types to fetch.
     */
    orderBy?: sp_rewards_typeOrderByWithRelationInput | sp_rewards_typeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_rewards_types.
     */
    cursor?: sp_rewards_typeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_rewards_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_rewards_types.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_rewards_types.
     */
    distinct?: Sp_rewards_typeScalarFieldEnum | Sp_rewards_typeScalarFieldEnum[]
  }

  /**
   * sp_rewards_type findMany
   */
  export type sp_rewards_typeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_rewards_type
     */
    select?: sp_rewards_typeSelect<ExtArgs> | null
    /**
     * Filter, which sp_rewards_types to fetch.
     */
    where?: sp_rewards_typeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_rewards_types to fetch.
     */
    orderBy?: sp_rewards_typeOrderByWithRelationInput | sp_rewards_typeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sp_rewards_types.
     */
    cursor?: sp_rewards_typeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_rewards_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_rewards_types.
     */
    skip?: number
    distinct?: Sp_rewards_typeScalarFieldEnum | Sp_rewards_typeScalarFieldEnum[]
  }

  /**
   * sp_rewards_type create
   */
  export type sp_rewards_typeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_rewards_type
     */
    select?: sp_rewards_typeSelect<ExtArgs> | null
    /**
     * The data needed to create a sp_rewards_type.
     */
    data?: XOR<sp_rewards_typeCreateInput, sp_rewards_typeUncheckedCreateInput>
  }

  /**
   * sp_rewards_type createMany
   */
  export type sp_rewards_typeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sp_rewards_types.
     */
    data: sp_rewards_typeCreateManyInput | sp_rewards_typeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sp_rewards_type update
   */
  export type sp_rewards_typeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_rewards_type
     */
    select?: sp_rewards_typeSelect<ExtArgs> | null
    /**
     * The data needed to update a sp_rewards_type.
     */
    data: XOR<sp_rewards_typeUpdateInput, sp_rewards_typeUncheckedUpdateInput>
    /**
     * Choose, which sp_rewards_type to update.
     */
    where: sp_rewards_typeWhereUniqueInput
  }

  /**
   * sp_rewards_type updateMany
   */
  export type sp_rewards_typeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sp_rewards_types.
     */
    data: XOR<sp_rewards_typeUpdateManyMutationInput, sp_rewards_typeUncheckedUpdateManyInput>
    /**
     * Filter which sp_rewards_types to update
     */
    where?: sp_rewards_typeWhereInput
  }

  /**
   * sp_rewards_type upsert
   */
  export type sp_rewards_typeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_rewards_type
     */
    select?: sp_rewards_typeSelect<ExtArgs> | null
    /**
     * The filter to search for the sp_rewards_type to update in case it exists.
     */
    where: sp_rewards_typeWhereUniqueInput
    /**
     * In case the sp_rewards_type found by the `where` argument doesn't exist, create a new sp_rewards_type with this data.
     */
    create: XOR<sp_rewards_typeCreateInput, sp_rewards_typeUncheckedCreateInput>
    /**
     * In case the sp_rewards_type was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sp_rewards_typeUpdateInput, sp_rewards_typeUncheckedUpdateInput>
  }

  /**
   * sp_rewards_type delete
   */
  export type sp_rewards_typeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_rewards_type
     */
    select?: sp_rewards_typeSelect<ExtArgs> | null
    /**
     * Filter which sp_rewards_type to delete.
     */
    where: sp_rewards_typeWhereUniqueInput
  }

  /**
   * sp_rewards_type deleteMany
   */
  export type sp_rewards_typeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_rewards_types to delete
     */
    where?: sp_rewards_typeWhereInput
  }

  /**
   * sp_rewards_type without action
   */
  export type sp_rewards_typeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_rewards_type
     */
    select?: sp_rewards_typeSelect<ExtArgs> | null
  }


  /**
   * Model sp_tokens
   */

  export type AggregateSp_tokens = {
    _count: Sp_tokensCountAggregateOutputType | null
    _avg: Sp_tokensAvgAggregateOutputType | null
    _sum: Sp_tokensSumAggregateOutputType | null
    _min: Sp_tokensMinAggregateOutputType | null
    _max: Sp_tokensMaxAggregateOutputType | null
  }

  export type Sp_tokensAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
  }

  export type Sp_tokensSumAggregateOutputType = {
    id: bigint | null
    user_id: bigint | null
  }

  export type Sp_tokensMinAggregateOutputType = {
    id: bigint | null
    user_id: bigint | null
    token: string | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_tokensMaxAggregateOutputType = {
    id: bigint | null
    user_id: bigint | null
    token: string | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_tokensCountAggregateOutputType = {
    id: number
    user_id: number
    token: number
    created_at: number
    updated_at: number
    deleted_at: number
    _all: number
  }


  export type Sp_tokensAvgAggregateInputType = {
    id?: true
    user_id?: true
  }

  export type Sp_tokensSumAggregateInputType = {
    id?: true
    user_id?: true
  }

  export type Sp_tokensMinAggregateInputType = {
    id?: true
    user_id?: true
    token?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sp_tokensMaxAggregateInputType = {
    id?: true
    user_id?: true
    token?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sp_tokensCountAggregateInputType = {
    id?: true
    user_id?: true
    token?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    _all?: true
  }

  export type Sp_tokensAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_tokens to aggregate.
     */
    where?: sp_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_tokens to fetch.
     */
    orderBy?: sp_tokensOrderByWithRelationInput | sp_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sp_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sp_tokens
    **/
    _count?: true | Sp_tokensCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sp_tokensAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sp_tokensSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sp_tokensMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sp_tokensMaxAggregateInputType
  }

  export type GetSp_tokensAggregateType<T extends Sp_tokensAggregateArgs> = {
        [P in keyof T & keyof AggregateSp_tokens]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSp_tokens[P]>
      : GetScalarType<T[P], AggregateSp_tokens[P]>
  }




  export type sp_tokensGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sp_tokensWhereInput
    orderBy?: sp_tokensOrderByWithAggregationInput | sp_tokensOrderByWithAggregationInput[]
    by: Sp_tokensScalarFieldEnum[] | Sp_tokensScalarFieldEnum
    having?: sp_tokensScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sp_tokensCountAggregateInputType | true
    _avg?: Sp_tokensAvgAggregateInputType
    _sum?: Sp_tokensSumAggregateInputType
    _min?: Sp_tokensMinAggregateInputType
    _max?: Sp_tokensMaxAggregateInputType
  }

  export type Sp_tokensGroupByOutputType = {
    id: bigint
    user_id: bigint
    token: string | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
    _count: Sp_tokensCountAggregateOutputType | null
    _avg: Sp_tokensAvgAggregateOutputType | null
    _sum: Sp_tokensSumAggregateOutputType | null
    _min: Sp_tokensMinAggregateOutputType | null
    _max: Sp_tokensMaxAggregateOutputType | null
  }

  type GetSp_tokensGroupByPayload<T extends sp_tokensGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sp_tokensGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sp_tokensGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sp_tokensGroupByOutputType[P]>
            : GetScalarType<T[P], Sp_tokensGroupByOutputType[P]>
        }
      >
    >


  export type sp_tokensSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    token?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }, ExtArgs["result"]["sp_tokens"]>


  export type sp_tokensSelectScalar = {
    id?: boolean
    user_id?: boolean
    token?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }


  export type $sp_tokensPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sp_tokens"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      user_id: bigint
      token: string | null
      created_at: Date | null
      updated_at: Date | null
      deleted_at: Date | null
    }, ExtArgs["result"]["sp_tokens"]>
    composites: {}
  }

  type sp_tokensGetPayload<S extends boolean | null | undefined | sp_tokensDefaultArgs> = $Result.GetResult<Prisma.$sp_tokensPayload, S>

  type sp_tokensCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<sp_tokensFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Sp_tokensCountAggregateInputType | true
    }

  export interface sp_tokensDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sp_tokens'], meta: { name: 'sp_tokens' } }
    /**
     * Find zero or one Sp_tokens that matches the filter.
     * @param {sp_tokensFindUniqueArgs} args - Arguments to find a Sp_tokens
     * @example
     * // Get one Sp_tokens
     * const sp_tokens = await prisma.sp_tokens.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sp_tokensFindUniqueArgs>(args: SelectSubset<T, sp_tokensFindUniqueArgs<ExtArgs>>): Prisma__sp_tokensClient<$Result.GetResult<Prisma.$sp_tokensPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Sp_tokens that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {sp_tokensFindUniqueOrThrowArgs} args - Arguments to find a Sp_tokens
     * @example
     * // Get one Sp_tokens
     * const sp_tokens = await prisma.sp_tokens.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sp_tokensFindUniqueOrThrowArgs>(args: SelectSubset<T, sp_tokensFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sp_tokensClient<$Result.GetResult<Prisma.$sp_tokensPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Sp_tokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_tokensFindFirstArgs} args - Arguments to find a Sp_tokens
     * @example
     * // Get one Sp_tokens
     * const sp_tokens = await prisma.sp_tokens.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sp_tokensFindFirstArgs>(args?: SelectSubset<T, sp_tokensFindFirstArgs<ExtArgs>>): Prisma__sp_tokensClient<$Result.GetResult<Prisma.$sp_tokensPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Sp_tokens that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_tokensFindFirstOrThrowArgs} args - Arguments to find a Sp_tokens
     * @example
     * // Get one Sp_tokens
     * const sp_tokens = await prisma.sp_tokens.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sp_tokensFindFirstOrThrowArgs>(args?: SelectSubset<T, sp_tokensFindFirstOrThrowArgs<ExtArgs>>): Prisma__sp_tokensClient<$Result.GetResult<Prisma.$sp_tokensPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Sp_tokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_tokensFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sp_tokens
     * const sp_tokens = await prisma.sp_tokens.findMany()
     * 
     * // Get first 10 Sp_tokens
     * const sp_tokens = await prisma.sp_tokens.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sp_tokensWithIdOnly = await prisma.sp_tokens.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sp_tokensFindManyArgs>(args?: SelectSubset<T, sp_tokensFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sp_tokensPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Sp_tokens.
     * @param {sp_tokensCreateArgs} args - Arguments to create a Sp_tokens.
     * @example
     * // Create one Sp_tokens
     * const Sp_tokens = await prisma.sp_tokens.create({
     *   data: {
     *     // ... data to create a Sp_tokens
     *   }
     * })
     * 
     */
    create<T extends sp_tokensCreateArgs>(args: SelectSubset<T, sp_tokensCreateArgs<ExtArgs>>): Prisma__sp_tokensClient<$Result.GetResult<Prisma.$sp_tokensPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Sp_tokens.
     * @param {sp_tokensCreateManyArgs} args - Arguments to create many Sp_tokens.
     * @example
     * // Create many Sp_tokens
     * const sp_tokens = await prisma.sp_tokens.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sp_tokensCreateManyArgs>(args?: SelectSubset<T, sp_tokensCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sp_tokens.
     * @param {sp_tokensDeleteArgs} args - Arguments to delete one Sp_tokens.
     * @example
     * // Delete one Sp_tokens
     * const Sp_tokens = await prisma.sp_tokens.delete({
     *   where: {
     *     // ... filter to delete one Sp_tokens
     *   }
     * })
     * 
     */
    delete<T extends sp_tokensDeleteArgs>(args: SelectSubset<T, sp_tokensDeleteArgs<ExtArgs>>): Prisma__sp_tokensClient<$Result.GetResult<Prisma.$sp_tokensPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Sp_tokens.
     * @param {sp_tokensUpdateArgs} args - Arguments to update one Sp_tokens.
     * @example
     * // Update one Sp_tokens
     * const sp_tokens = await prisma.sp_tokens.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sp_tokensUpdateArgs>(args: SelectSubset<T, sp_tokensUpdateArgs<ExtArgs>>): Prisma__sp_tokensClient<$Result.GetResult<Prisma.$sp_tokensPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Sp_tokens.
     * @param {sp_tokensDeleteManyArgs} args - Arguments to filter Sp_tokens to delete.
     * @example
     * // Delete a few Sp_tokens
     * const { count } = await prisma.sp_tokens.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sp_tokensDeleteManyArgs>(args?: SelectSubset<T, sp_tokensDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sp_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_tokensUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sp_tokens
     * const sp_tokens = await prisma.sp_tokens.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sp_tokensUpdateManyArgs>(args: SelectSubset<T, sp_tokensUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sp_tokens.
     * @param {sp_tokensUpsertArgs} args - Arguments to update or create a Sp_tokens.
     * @example
     * // Update or create a Sp_tokens
     * const sp_tokens = await prisma.sp_tokens.upsert({
     *   create: {
     *     // ... data to create a Sp_tokens
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sp_tokens we want to update
     *   }
     * })
     */
    upsert<T extends sp_tokensUpsertArgs>(args: SelectSubset<T, sp_tokensUpsertArgs<ExtArgs>>): Prisma__sp_tokensClient<$Result.GetResult<Prisma.$sp_tokensPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Sp_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_tokensCountArgs} args - Arguments to filter Sp_tokens to count.
     * @example
     * // Count the number of Sp_tokens
     * const count = await prisma.sp_tokens.count({
     *   where: {
     *     // ... the filter for the Sp_tokens we want to count
     *   }
     * })
    **/
    count<T extends sp_tokensCountArgs>(
      args?: Subset<T, sp_tokensCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sp_tokensCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sp_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sp_tokensAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sp_tokensAggregateArgs>(args: Subset<T, Sp_tokensAggregateArgs>): Prisma.PrismaPromise<GetSp_tokensAggregateType<T>>

    /**
     * Group by Sp_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_tokensGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sp_tokensGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sp_tokensGroupByArgs['orderBy'] }
        : { orderBy?: sp_tokensGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sp_tokensGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSp_tokensGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sp_tokens model
   */
  readonly fields: sp_tokensFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sp_tokens.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sp_tokensClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sp_tokens model
   */ 
  interface sp_tokensFieldRefs {
    readonly id: FieldRef<"sp_tokens", 'BigInt'>
    readonly user_id: FieldRef<"sp_tokens", 'BigInt'>
    readonly token: FieldRef<"sp_tokens", 'String'>
    readonly created_at: FieldRef<"sp_tokens", 'DateTime'>
    readonly updated_at: FieldRef<"sp_tokens", 'DateTime'>
    readonly deleted_at: FieldRef<"sp_tokens", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sp_tokens findUnique
   */
  export type sp_tokensFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_tokens
     */
    select?: sp_tokensSelect<ExtArgs> | null
    /**
     * Filter, which sp_tokens to fetch.
     */
    where: sp_tokensWhereUniqueInput
  }

  /**
   * sp_tokens findUniqueOrThrow
   */
  export type sp_tokensFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_tokens
     */
    select?: sp_tokensSelect<ExtArgs> | null
    /**
     * Filter, which sp_tokens to fetch.
     */
    where: sp_tokensWhereUniqueInput
  }

  /**
   * sp_tokens findFirst
   */
  export type sp_tokensFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_tokens
     */
    select?: sp_tokensSelect<ExtArgs> | null
    /**
     * Filter, which sp_tokens to fetch.
     */
    where?: sp_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_tokens to fetch.
     */
    orderBy?: sp_tokensOrderByWithRelationInput | sp_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_tokens.
     */
    cursor?: sp_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_tokens.
     */
    distinct?: Sp_tokensScalarFieldEnum | Sp_tokensScalarFieldEnum[]
  }

  /**
   * sp_tokens findFirstOrThrow
   */
  export type sp_tokensFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_tokens
     */
    select?: sp_tokensSelect<ExtArgs> | null
    /**
     * Filter, which sp_tokens to fetch.
     */
    where?: sp_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_tokens to fetch.
     */
    orderBy?: sp_tokensOrderByWithRelationInput | sp_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_tokens.
     */
    cursor?: sp_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_tokens.
     */
    distinct?: Sp_tokensScalarFieldEnum | Sp_tokensScalarFieldEnum[]
  }

  /**
   * sp_tokens findMany
   */
  export type sp_tokensFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_tokens
     */
    select?: sp_tokensSelect<ExtArgs> | null
    /**
     * Filter, which sp_tokens to fetch.
     */
    where?: sp_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_tokens to fetch.
     */
    orderBy?: sp_tokensOrderByWithRelationInput | sp_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sp_tokens.
     */
    cursor?: sp_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_tokens.
     */
    skip?: number
    distinct?: Sp_tokensScalarFieldEnum | Sp_tokensScalarFieldEnum[]
  }

  /**
   * sp_tokens create
   */
  export type sp_tokensCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_tokens
     */
    select?: sp_tokensSelect<ExtArgs> | null
    /**
     * The data needed to create a sp_tokens.
     */
    data: XOR<sp_tokensCreateInput, sp_tokensUncheckedCreateInput>
  }

  /**
   * sp_tokens createMany
   */
  export type sp_tokensCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sp_tokens.
     */
    data: sp_tokensCreateManyInput | sp_tokensCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sp_tokens update
   */
  export type sp_tokensUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_tokens
     */
    select?: sp_tokensSelect<ExtArgs> | null
    /**
     * The data needed to update a sp_tokens.
     */
    data: XOR<sp_tokensUpdateInput, sp_tokensUncheckedUpdateInput>
    /**
     * Choose, which sp_tokens to update.
     */
    where: sp_tokensWhereUniqueInput
  }

  /**
   * sp_tokens updateMany
   */
  export type sp_tokensUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sp_tokens.
     */
    data: XOR<sp_tokensUpdateManyMutationInput, sp_tokensUncheckedUpdateManyInput>
    /**
     * Filter which sp_tokens to update
     */
    where?: sp_tokensWhereInput
  }

  /**
   * sp_tokens upsert
   */
  export type sp_tokensUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_tokens
     */
    select?: sp_tokensSelect<ExtArgs> | null
    /**
     * The filter to search for the sp_tokens to update in case it exists.
     */
    where: sp_tokensWhereUniqueInput
    /**
     * In case the sp_tokens found by the `where` argument doesn't exist, create a new sp_tokens with this data.
     */
    create: XOR<sp_tokensCreateInput, sp_tokensUncheckedCreateInput>
    /**
     * In case the sp_tokens was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sp_tokensUpdateInput, sp_tokensUncheckedUpdateInput>
  }

  /**
   * sp_tokens delete
   */
  export type sp_tokensDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_tokens
     */
    select?: sp_tokensSelect<ExtArgs> | null
    /**
     * Filter which sp_tokens to delete.
     */
    where: sp_tokensWhereUniqueInput
  }

  /**
   * sp_tokens deleteMany
   */
  export type sp_tokensDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_tokens to delete
     */
    where?: sp_tokensWhereInput
  }

  /**
   * sp_tokens without action
   */
  export type sp_tokensDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_tokens
     */
    select?: sp_tokensSelect<ExtArgs> | null
  }


  /**
   * Model sp_upload_logs
   */

  export type AggregateSp_upload_logs = {
    _count: Sp_upload_logsCountAggregateOutputType | null
    _avg: Sp_upload_logsAvgAggregateOutputType | null
    _sum: Sp_upload_logsSumAggregateOutputType | null
    _min: Sp_upload_logsMinAggregateOutputType | null
    _max: Sp_upload_logsMaxAggregateOutputType | null
  }

  export type Sp_upload_logsAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
    sid: number | null
  }

  export type Sp_upload_logsSumAggregateOutputType = {
    id: bigint | null
    user_id: bigint | null
    sid: bigint | null
  }

  export type Sp_upload_logsMinAggregateOutputType = {
    id: bigint | null
    user_id: bigint | null
    sid: bigint | null
    name: string | null
    file_id: string | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_upload_logsMaxAggregateOutputType = {
    id: bigint | null
    user_id: bigint | null
    sid: bigint | null
    name: string | null
    file_id: string | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_upload_logsCountAggregateOutputType = {
    id: number
    user_id: number
    sid: number
    name: number
    file_id: number
    created_at: number
    updated_at: number
    deleted_at: number
    _all: number
  }


  export type Sp_upload_logsAvgAggregateInputType = {
    id?: true
    user_id?: true
    sid?: true
  }

  export type Sp_upload_logsSumAggregateInputType = {
    id?: true
    user_id?: true
    sid?: true
  }

  export type Sp_upload_logsMinAggregateInputType = {
    id?: true
    user_id?: true
    sid?: true
    name?: true
    file_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sp_upload_logsMaxAggregateInputType = {
    id?: true
    user_id?: true
    sid?: true
    name?: true
    file_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sp_upload_logsCountAggregateInputType = {
    id?: true
    user_id?: true
    sid?: true
    name?: true
    file_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    _all?: true
  }

  export type Sp_upload_logsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_upload_logs to aggregate.
     */
    where?: sp_upload_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_upload_logs to fetch.
     */
    orderBy?: sp_upload_logsOrderByWithRelationInput | sp_upload_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sp_upload_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_upload_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_upload_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sp_upload_logs
    **/
    _count?: true | Sp_upload_logsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sp_upload_logsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sp_upload_logsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sp_upload_logsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sp_upload_logsMaxAggregateInputType
  }

  export type GetSp_upload_logsAggregateType<T extends Sp_upload_logsAggregateArgs> = {
        [P in keyof T & keyof AggregateSp_upload_logs]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSp_upload_logs[P]>
      : GetScalarType<T[P], AggregateSp_upload_logs[P]>
  }




  export type sp_upload_logsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sp_upload_logsWhereInput
    orderBy?: sp_upload_logsOrderByWithAggregationInput | sp_upload_logsOrderByWithAggregationInput[]
    by: Sp_upload_logsScalarFieldEnum[] | Sp_upload_logsScalarFieldEnum
    having?: sp_upload_logsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sp_upload_logsCountAggregateInputType | true
    _avg?: Sp_upload_logsAvgAggregateInputType
    _sum?: Sp_upload_logsSumAggregateInputType
    _min?: Sp_upload_logsMinAggregateInputType
    _max?: Sp_upload_logsMaxAggregateInputType
  }

  export type Sp_upload_logsGroupByOutputType = {
    id: bigint
    user_id: bigint
    sid: bigint
    name: string
    file_id: string
    created_at: Date
    updated_at: Date | null
    deleted_at: Date | null
    _count: Sp_upload_logsCountAggregateOutputType | null
    _avg: Sp_upload_logsAvgAggregateOutputType | null
    _sum: Sp_upload_logsSumAggregateOutputType | null
    _min: Sp_upload_logsMinAggregateOutputType | null
    _max: Sp_upload_logsMaxAggregateOutputType | null
  }

  type GetSp_upload_logsGroupByPayload<T extends sp_upload_logsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sp_upload_logsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sp_upload_logsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sp_upload_logsGroupByOutputType[P]>
            : GetScalarType<T[P], Sp_upload_logsGroupByOutputType[P]>
        }
      >
    >


  export type sp_upload_logsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    sid?: boolean
    name?: boolean
    file_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }, ExtArgs["result"]["sp_upload_logs"]>


  export type sp_upload_logsSelectScalar = {
    id?: boolean
    user_id?: boolean
    sid?: boolean
    name?: boolean
    file_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }


  export type $sp_upload_logsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sp_upload_logs"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      user_id: bigint
      sid: bigint
      name: string
      file_id: string
      created_at: Date
      updated_at: Date | null
      deleted_at: Date | null
    }, ExtArgs["result"]["sp_upload_logs"]>
    composites: {}
  }

  type sp_upload_logsGetPayload<S extends boolean | null | undefined | sp_upload_logsDefaultArgs> = $Result.GetResult<Prisma.$sp_upload_logsPayload, S>

  type sp_upload_logsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<sp_upload_logsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Sp_upload_logsCountAggregateInputType | true
    }

  export interface sp_upload_logsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sp_upload_logs'], meta: { name: 'sp_upload_logs' } }
    /**
     * Find zero or one Sp_upload_logs that matches the filter.
     * @param {sp_upload_logsFindUniqueArgs} args - Arguments to find a Sp_upload_logs
     * @example
     * // Get one Sp_upload_logs
     * const sp_upload_logs = await prisma.sp_upload_logs.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sp_upload_logsFindUniqueArgs>(args: SelectSubset<T, sp_upload_logsFindUniqueArgs<ExtArgs>>): Prisma__sp_upload_logsClient<$Result.GetResult<Prisma.$sp_upload_logsPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Sp_upload_logs that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {sp_upload_logsFindUniqueOrThrowArgs} args - Arguments to find a Sp_upload_logs
     * @example
     * // Get one Sp_upload_logs
     * const sp_upload_logs = await prisma.sp_upload_logs.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sp_upload_logsFindUniqueOrThrowArgs>(args: SelectSubset<T, sp_upload_logsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sp_upload_logsClient<$Result.GetResult<Prisma.$sp_upload_logsPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Sp_upload_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_upload_logsFindFirstArgs} args - Arguments to find a Sp_upload_logs
     * @example
     * // Get one Sp_upload_logs
     * const sp_upload_logs = await prisma.sp_upload_logs.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sp_upload_logsFindFirstArgs>(args?: SelectSubset<T, sp_upload_logsFindFirstArgs<ExtArgs>>): Prisma__sp_upload_logsClient<$Result.GetResult<Prisma.$sp_upload_logsPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Sp_upload_logs that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_upload_logsFindFirstOrThrowArgs} args - Arguments to find a Sp_upload_logs
     * @example
     * // Get one Sp_upload_logs
     * const sp_upload_logs = await prisma.sp_upload_logs.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sp_upload_logsFindFirstOrThrowArgs>(args?: SelectSubset<T, sp_upload_logsFindFirstOrThrowArgs<ExtArgs>>): Prisma__sp_upload_logsClient<$Result.GetResult<Prisma.$sp_upload_logsPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Sp_upload_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_upload_logsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sp_upload_logs
     * const sp_upload_logs = await prisma.sp_upload_logs.findMany()
     * 
     * // Get first 10 Sp_upload_logs
     * const sp_upload_logs = await prisma.sp_upload_logs.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sp_upload_logsWithIdOnly = await prisma.sp_upload_logs.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sp_upload_logsFindManyArgs>(args?: SelectSubset<T, sp_upload_logsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sp_upload_logsPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Sp_upload_logs.
     * @param {sp_upload_logsCreateArgs} args - Arguments to create a Sp_upload_logs.
     * @example
     * // Create one Sp_upload_logs
     * const Sp_upload_logs = await prisma.sp_upload_logs.create({
     *   data: {
     *     // ... data to create a Sp_upload_logs
     *   }
     * })
     * 
     */
    create<T extends sp_upload_logsCreateArgs>(args: SelectSubset<T, sp_upload_logsCreateArgs<ExtArgs>>): Prisma__sp_upload_logsClient<$Result.GetResult<Prisma.$sp_upload_logsPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Sp_upload_logs.
     * @param {sp_upload_logsCreateManyArgs} args - Arguments to create many Sp_upload_logs.
     * @example
     * // Create many Sp_upload_logs
     * const sp_upload_logs = await prisma.sp_upload_logs.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sp_upload_logsCreateManyArgs>(args?: SelectSubset<T, sp_upload_logsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sp_upload_logs.
     * @param {sp_upload_logsDeleteArgs} args - Arguments to delete one Sp_upload_logs.
     * @example
     * // Delete one Sp_upload_logs
     * const Sp_upload_logs = await prisma.sp_upload_logs.delete({
     *   where: {
     *     // ... filter to delete one Sp_upload_logs
     *   }
     * })
     * 
     */
    delete<T extends sp_upload_logsDeleteArgs>(args: SelectSubset<T, sp_upload_logsDeleteArgs<ExtArgs>>): Prisma__sp_upload_logsClient<$Result.GetResult<Prisma.$sp_upload_logsPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Sp_upload_logs.
     * @param {sp_upload_logsUpdateArgs} args - Arguments to update one Sp_upload_logs.
     * @example
     * // Update one Sp_upload_logs
     * const sp_upload_logs = await prisma.sp_upload_logs.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sp_upload_logsUpdateArgs>(args: SelectSubset<T, sp_upload_logsUpdateArgs<ExtArgs>>): Prisma__sp_upload_logsClient<$Result.GetResult<Prisma.$sp_upload_logsPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Sp_upload_logs.
     * @param {sp_upload_logsDeleteManyArgs} args - Arguments to filter Sp_upload_logs to delete.
     * @example
     * // Delete a few Sp_upload_logs
     * const { count } = await prisma.sp_upload_logs.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sp_upload_logsDeleteManyArgs>(args?: SelectSubset<T, sp_upload_logsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sp_upload_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_upload_logsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sp_upload_logs
     * const sp_upload_logs = await prisma.sp_upload_logs.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sp_upload_logsUpdateManyArgs>(args: SelectSubset<T, sp_upload_logsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sp_upload_logs.
     * @param {sp_upload_logsUpsertArgs} args - Arguments to update or create a Sp_upload_logs.
     * @example
     * // Update or create a Sp_upload_logs
     * const sp_upload_logs = await prisma.sp_upload_logs.upsert({
     *   create: {
     *     // ... data to create a Sp_upload_logs
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sp_upload_logs we want to update
     *   }
     * })
     */
    upsert<T extends sp_upload_logsUpsertArgs>(args: SelectSubset<T, sp_upload_logsUpsertArgs<ExtArgs>>): Prisma__sp_upload_logsClient<$Result.GetResult<Prisma.$sp_upload_logsPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Sp_upload_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_upload_logsCountArgs} args - Arguments to filter Sp_upload_logs to count.
     * @example
     * // Count the number of Sp_upload_logs
     * const count = await prisma.sp_upload_logs.count({
     *   where: {
     *     // ... the filter for the Sp_upload_logs we want to count
     *   }
     * })
    **/
    count<T extends sp_upload_logsCountArgs>(
      args?: Subset<T, sp_upload_logsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sp_upload_logsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sp_upload_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sp_upload_logsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sp_upload_logsAggregateArgs>(args: Subset<T, Sp_upload_logsAggregateArgs>): Prisma.PrismaPromise<GetSp_upload_logsAggregateType<T>>

    /**
     * Group by Sp_upload_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_upload_logsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sp_upload_logsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sp_upload_logsGroupByArgs['orderBy'] }
        : { orderBy?: sp_upload_logsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sp_upload_logsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSp_upload_logsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sp_upload_logs model
   */
  readonly fields: sp_upload_logsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sp_upload_logs.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sp_upload_logsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sp_upload_logs model
   */ 
  interface sp_upload_logsFieldRefs {
    readonly id: FieldRef<"sp_upload_logs", 'BigInt'>
    readonly user_id: FieldRef<"sp_upload_logs", 'BigInt'>
    readonly sid: FieldRef<"sp_upload_logs", 'BigInt'>
    readonly name: FieldRef<"sp_upload_logs", 'String'>
    readonly file_id: FieldRef<"sp_upload_logs", 'String'>
    readonly created_at: FieldRef<"sp_upload_logs", 'DateTime'>
    readonly updated_at: FieldRef<"sp_upload_logs", 'DateTime'>
    readonly deleted_at: FieldRef<"sp_upload_logs", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sp_upload_logs findUnique
   */
  export type sp_upload_logsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_upload_logs
     */
    select?: sp_upload_logsSelect<ExtArgs> | null
    /**
     * Filter, which sp_upload_logs to fetch.
     */
    where: sp_upload_logsWhereUniqueInput
  }

  /**
   * sp_upload_logs findUniqueOrThrow
   */
  export type sp_upload_logsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_upload_logs
     */
    select?: sp_upload_logsSelect<ExtArgs> | null
    /**
     * Filter, which sp_upload_logs to fetch.
     */
    where: sp_upload_logsWhereUniqueInput
  }

  /**
   * sp_upload_logs findFirst
   */
  export type sp_upload_logsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_upload_logs
     */
    select?: sp_upload_logsSelect<ExtArgs> | null
    /**
     * Filter, which sp_upload_logs to fetch.
     */
    where?: sp_upload_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_upload_logs to fetch.
     */
    orderBy?: sp_upload_logsOrderByWithRelationInput | sp_upload_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_upload_logs.
     */
    cursor?: sp_upload_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_upload_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_upload_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_upload_logs.
     */
    distinct?: Sp_upload_logsScalarFieldEnum | Sp_upload_logsScalarFieldEnum[]
  }

  /**
   * sp_upload_logs findFirstOrThrow
   */
  export type sp_upload_logsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_upload_logs
     */
    select?: sp_upload_logsSelect<ExtArgs> | null
    /**
     * Filter, which sp_upload_logs to fetch.
     */
    where?: sp_upload_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_upload_logs to fetch.
     */
    orderBy?: sp_upload_logsOrderByWithRelationInput | sp_upload_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_upload_logs.
     */
    cursor?: sp_upload_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_upload_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_upload_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_upload_logs.
     */
    distinct?: Sp_upload_logsScalarFieldEnum | Sp_upload_logsScalarFieldEnum[]
  }

  /**
   * sp_upload_logs findMany
   */
  export type sp_upload_logsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_upload_logs
     */
    select?: sp_upload_logsSelect<ExtArgs> | null
    /**
     * Filter, which sp_upload_logs to fetch.
     */
    where?: sp_upload_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_upload_logs to fetch.
     */
    orderBy?: sp_upload_logsOrderByWithRelationInput | sp_upload_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sp_upload_logs.
     */
    cursor?: sp_upload_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_upload_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_upload_logs.
     */
    skip?: number
    distinct?: Sp_upload_logsScalarFieldEnum | Sp_upload_logsScalarFieldEnum[]
  }

  /**
   * sp_upload_logs create
   */
  export type sp_upload_logsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_upload_logs
     */
    select?: sp_upload_logsSelect<ExtArgs> | null
    /**
     * The data needed to create a sp_upload_logs.
     */
    data: XOR<sp_upload_logsCreateInput, sp_upload_logsUncheckedCreateInput>
  }

  /**
   * sp_upload_logs createMany
   */
  export type sp_upload_logsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sp_upload_logs.
     */
    data: sp_upload_logsCreateManyInput | sp_upload_logsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sp_upload_logs update
   */
  export type sp_upload_logsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_upload_logs
     */
    select?: sp_upload_logsSelect<ExtArgs> | null
    /**
     * The data needed to update a sp_upload_logs.
     */
    data: XOR<sp_upload_logsUpdateInput, sp_upload_logsUncheckedUpdateInput>
    /**
     * Choose, which sp_upload_logs to update.
     */
    where: sp_upload_logsWhereUniqueInput
  }

  /**
   * sp_upload_logs updateMany
   */
  export type sp_upload_logsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sp_upload_logs.
     */
    data: XOR<sp_upload_logsUpdateManyMutationInput, sp_upload_logsUncheckedUpdateManyInput>
    /**
     * Filter which sp_upload_logs to update
     */
    where?: sp_upload_logsWhereInput
  }

  /**
   * sp_upload_logs upsert
   */
  export type sp_upload_logsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_upload_logs
     */
    select?: sp_upload_logsSelect<ExtArgs> | null
    /**
     * The filter to search for the sp_upload_logs to update in case it exists.
     */
    where: sp_upload_logsWhereUniqueInput
    /**
     * In case the sp_upload_logs found by the `where` argument doesn't exist, create a new sp_upload_logs with this data.
     */
    create: XOR<sp_upload_logsCreateInput, sp_upload_logsUncheckedCreateInput>
    /**
     * In case the sp_upload_logs was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sp_upload_logsUpdateInput, sp_upload_logsUncheckedUpdateInput>
  }

  /**
   * sp_upload_logs delete
   */
  export type sp_upload_logsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_upload_logs
     */
    select?: sp_upload_logsSelect<ExtArgs> | null
    /**
     * Filter which sp_upload_logs to delete.
     */
    where: sp_upload_logsWhereUniqueInput
  }

  /**
   * sp_upload_logs deleteMany
   */
  export type sp_upload_logsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_upload_logs to delete
     */
    where?: sp_upload_logsWhereInput
  }

  /**
   * sp_upload_logs without action
   */
  export type sp_upload_logsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_upload_logs
     */
    select?: sp_upload_logsSelect<ExtArgs> | null
  }


  /**
   * Model sp_user_check_in
   */

  export type AggregateSp_user_check_in = {
    _count: Sp_user_check_inCountAggregateOutputType | null
    _avg: Sp_user_check_inAvgAggregateOutputType | null
    _sum: Sp_user_check_inSumAggregateOutputType | null
    _min: Sp_user_check_inMinAggregateOutputType | null
    _max: Sp_user_check_inMaxAggregateOutputType | null
  }

  export type Sp_user_check_inAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
    bonus: number | null
    days: number | null
  }

  export type Sp_user_check_inSumAggregateOutputType = {
    id: number | null
    user_id: bigint | null
    bonus: number | null
    days: number | null
  }

  export type Sp_user_check_inMinAggregateOutputType = {
    id: number | null
    user_id: bigint | null
    bonus: number | null
    days: number | null
    type: boolean | null
    updated_at: Date | null
    created_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_user_check_inMaxAggregateOutputType = {
    id: number | null
    user_id: bigint | null
    bonus: number | null
    days: number | null
    type: boolean | null
    updated_at: Date | null
    created_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_user_check_inCountAggregateOutputType = {
    id: number
    user_id: number
    bonus: number
    days: number
    type: number
    updated_at: number
    created_at: number
    deleted_at: number
    _all: number
  }


  export type Sp_user_check_inAvgAggregateInputType = {
    id?: true
    user_id?: true
    bonus?: true
    days?: true
  }

  export type Sp_user_check_inSumAggregateInputType = {
    id?: true
    user_id?: true
    bonus?: true
    days?: true
  }

  export type Sp_user_check_inMinAggregateInputType = {
    id?: true
    user_id?: true
    bonus?: true
    days?: true
    type?: true
    updated_at?: true
    created_at?: true
    deleted_at?: true
  }

  export type Sp_user_check_inMaxAggregateInputType = {
    id?: true
    user_id?: true
    bonus?: true
    days?: true
    type?: true
    updated_at?: true
    created_at?: true
    deleted_at?: true
  }

  export type Sp_user_check_inCountAggregateInputType = {
    id?: true
    user_id?: true
    bonus?: true
    days?: true
    type?: true
    updated_at?: true
    created_at?: true
    deleted_at?: true
    _all?: true
  }

  export type Sp_user_check_inAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_user_check_in to aggregate.
     */
    where?: sp_user_check_inWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_user_check_ins to fetch.
     */
    orderBy?: sp_user_check_inOrderByWithRelationInput | sp_user_check_inOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sp_user_check_inWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_user_check_ins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_user_check_ins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sp_user_check_ins
    **/
    _count?: true | Sp_user_check_inCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sp_user_check_inAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sp_user_check_inSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sp_user_check_inMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sp_user_check_inMaxAggregateInputType
  }

  export type GetSp_user_check_inAggregateType<T extends Sp_user_check_inAggregateArgs> = {
        [P in keyof T & keyof AggregateSp_user_check_in]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSp_user_check_in[P]>
      : GetScalarType<T[P], AggregateSp_user_check_in[P]>
  }




  export type sp_user_check_inGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sp_user_check_inWhereInput
    orderBy?: sp_user_check_inOrderByWithAggregationInput | sp_user_check_inOrderByWithAggregationInput[]
    by: Sp_user_check_inScalarFieldEnum[] | Sp_user_check_inScalarFieldEnum
    having?: sp_user_check_inScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sp_user_check_inCountAggregateInputType | true
    _avg?: Sp_user_check_inAvgAggregateInputType
    _sum?: Sp_user_check_inSumAggregateInputType
    _min?: Sp_user_check_inMinAggregateInputType
    _max?: Sp_user_check_inMaxAggregateInputType
  }

  export type Sp_user_check_inGroupByOutputType = {
    id: number
    user_id: bigint
    bonus: number | null
    days: number
    type: boolean | null
    updated_at: Date | null
    created_at: Date
    deleted_at: Date | null
    _count: Sp_user_check_inCountAggregateOutputType | null
    _avg: Sp_user_check_inAvgAggregateOutputType | null
    _sum: Sp_user_check_inSumAggregateOutputType | null
    _min: Sp_user_check_inMinAggregateOutputType | null
    _max: Sp_user_check_inMaxAggregateOutputType | null
  }

  type GetSp_user_check_inGroupByPayload<T extends sp_user_check_inGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sp_user_check_inGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sp_user_check_inGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sp_user_check_inGroupByOutputType[P]>
            : GetScalarType<T[P], Sp_user_check_inGroupByOutputType[P]>
        }
      >
    >


  export type sp_user_check_inSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    bonus?: boolean
    days?: boolean
    type?: boolean
    updated_at?: boolean
    created_at?: boolean
    deleted_at?: boolean
  }, ExtArgs["result"]["sp_user_check_in"]>


  export type sp_user_check_inSelectScalar = {
    id?: boolean
    user_id?: boolean
    bonus?: boolean
    days?: boolean
    type?: boolean
    updated_at?: boolean
    created_at?: boolean
    deleted_at?: boolean
  }


  export type $sp_user_check_inPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sp_user_check_in"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      user_id: bigint
      bonus: number | null
      days: number
      type: boolean | null
      updated_at: Date | null
      created_at: Date
      deleted_at: Date | null
    }, ExtArgs["result"]["sp_user_check_in"]>
    composites: {}
  }

  type sp_user_check_inGetPayload<S extends boolean | null | undefined | sp_user_check_inDefaultArgs> = $Result.GetResult<Prisma.$sp_user_check_inPayload, S>

  type sp_user_check_inCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<sp_user_check_inFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Sp_user_check_inCountAggregateInputType | true
    }

  export interface sp_user_check_inDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sp_user_check_in'], meta: { name: 'sp_user_check_in' } }
    /**
     * Find zero or one Sp_user_check_in that matches the filter.
     * @param {sp_user_check_inFindUniqueArgs} args - Arguments to find a Sp_user_check_in
     * @example
     * // Get one Sp_user_check_in
     * const sp_user_check_in = await prisma.sp_user_check_in.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sp_user_check_inFindUniqueArgs>(args: SelectSubset<T, sp_user_check_inFindUniqueArgs<ExtArgs>>): Prisma__sp_user_check_inClient<$Result.GetResult<Prisma.$sp_user_check_inPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Sp_user_check_in that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {sp_user_check_inFindUniqueOrThrowArgs} args - Arguments to find a Sp_user_check_in
     * @example
     * // Get one Sp_user_check_in
     * const sp_user_check_in = await prisma.sp_user_check_in.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sp_user_check_inFindUniqueOrThrowArgs>(args: SelectSubset<T, sp_user_check_inFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sp_user_check_inClient<$Result.GetResult<Prisma.$sp_user_check_inPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Sp_user_check_in that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_user_check_inFindFirstArgs} args - Arguments to find a Sp_user_check_in
     * @example
     * // Get one Sp_user_check_in
     * const sp_user_check_in = await prisma.sp_user_check_in.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sp_user_check_inFindFirstArgs>(args?: SelectSubset<T, sp_user_check_inFindFirstArgs<ExtArgs>>): Prisma__sp_user_check_inClient<$Result.GetResult<Prisma.$sp_user_check_inPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Sp_user_check_in that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_user_check_inFindFirstOrThrowArgs} args - Arguments to find a Sp_user_check_in
     * @example
     * // Get one Sp_user_check_in
     * const sp_user_check_in = await prisma.sp_user_check_in.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sp_user_check_inFindFirstOrThrowArgs>(args?: SelectSubset<T, sp_user_check_inFindFirstOrThrowArgs<ExtArgs>>): Prisma__sp_user_check_inClient<$Result.GetResult<Prisma.$sp_user_check_inPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Sp_user_check_ins that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_user_check_inFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sp_user_check_ins
     * const sp_user_check_ins = await prisma.sp_user_check_in.findMany()
     * 
     * // Get first 10 Sp_user_check_ins
     * const sp_user_check_ins = await prisma.sp_user_check_in.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sp_user_check_inWithIdOnly = await prisma.sp_user_check_in.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sp_user_check_inFindManyArgs>(args?: SelectSubset<T, sp_user_check_inFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sp_user_check_inPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Sp_user_check_in.
     * @param {sp_user_check_inCreateArgs} args - Arguments to create a Sp_user_check_in.
     * @example
     * // Create one Sp_user_check_in
     * const Sp_user_check_in = await prisma.sp_user_check_in.create({
     *   data: {
     *     // ... data to create a Sp_user_check_in
     *   }
     * })
     * 
     */
    create<T extends sp_user_check_inCreateArgs>(args: SelectSubset<T, sp_user_check_inCreateArgs<ExtArgs>>): Prisma__sp_user_check_inClient<$Result.GetResult<Prisma.$sp_user_check_inPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Sp_user_check_ins.
     * @param {sp_user_check_inCreateManyArgs} args - Arguments to create many Sp_user_check_ins.
     * @example
     * // Create many Sp_user_check_ins
     * const sp_user_check_in = await prisma.sp_user_check_in.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sp_user_check_inCreateManyArgs>(args?: SelectSubset<T, sp_user_check_inCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sp_user_check_in.
     * @param {sp_user_check_inDeleteArgs} args - Arguments to delete one Sp_user_check_in.
     * @example
     * // Delete one Sp_user_check_in
     * const Sp_user_check_in = await prisma.sp_user_check_in.delete({
     *   where: {
     *     // ... filter to delete one Sp_user_check_in
     *   }
     * })
     * 
     */
    delete<T extends sp_user_check_inDeleteArgs>(args: SelectSubset<T, sp_user_check_inDeleteArgs<ExtArgs>>): Prisma__sp_user_check_inClient<$Result.GetResult<Prisma.$sp_user_check_inPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Sp_user_check_in.
     * @param {sp_user_check_inUpdateArgs} args - Arguments to update one Sp_user_check_in.
     * @example
     * // Update one Sp_user_check_in
     * const sp_user_check_in = await prisma.sp_user_check_in.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sp_user_check_inUpdateArgs>(args: SelectSubset<T, sp_user_check_inUpdateArgs<ExtArgs>>): Prisma__sp_user_check_inClient<$Result.GetResult<Prisma.$sp_user_check_inPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Sp_user_check_ins.
     * @param {sp_user_check_inDeleteManyArgs} args - Arguments to filter Sp_user_check_ins to delete.
     * @example
     * // Delete a few Sp_user_check_ins
     * const { count } = await prisma.sp_user_check_in.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sp_user_check_inDeleteManyArgs>(args?: SelectSubset<T, sp_user_check_inDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sp_user_check_ins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_user_check_inUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sp_user_check_ins
     * const sp_user_check_in = await prisma.sp_user_check_in.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sp_user_check_inUpdateManyArgs>(args: SelectSubset<T, sp_user_check_inUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sp_user_check_in.
     * @param {sp_user_check_inUpsertArgs} args - Arguments to update or create a Sp_user_check_in.
     * @example
     * // Update or create a Sp_user_check_in
     * const sp_user_check_in = await prisma.sp_user_check_in.upsert({
     *   create: {
     *     // ... data to create a Sp_user_check_in
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sp_user_check_in we want to update
     *   }
     * })
     */
    upsert<T extends sp_user_check_inUpsertArgs>(args: SelectSubset<T, sp_user_check_inUpsertArgs<ExtArgs>>): Prisma__sp_user_check_inClient<$Result.GetResult<Prisma.$sp_user_check_inPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Sp_user_check_ins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_user_check_inCountArgs} args - Arguments to filter Sp_user_check_ins to count.
     * @example
     * // Count the number of Sp_user_check_ins
     * const count = await prisma.sp_user_check_in.count({
     *   where: {
     *     // ... the filter for the Sp_user_check_ins we want to count
     *   }
     * })
    **/
    count<T extends sp_user_check_inCountArgs>(
      args?: Subset<T, sp_user_check_inCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sp_user_check_inCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sp_user_check_in.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sp_user_check_inAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sp_user_check_inAggregateArgs>(args: Subset<T, Sp_user_check_inAggregateArgs>): Prisma.PrismaPromise<GetSp_user_check_inAggregateType<T>>

    /**
     * Group by Sp_user_check_in.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_user_check_inGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sp_user_check_inGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sp_user_check_inGroupByArgs['orderBy'] }
        : { orderBy?: sp_user_check_inGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sp_user_check_inGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSp_user_check_inGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sp_user_check_in model
   */
  readonly fields: sp_user_check_inFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sp_user_check_in.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sp_user_check_inClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sp_user_check_in model
   */ 
  interface sp_user_check_inFieldRefs {
    readonly id: FieldRef<"sp_user_check_in", 'Int'>
    readonly user_id: FieldRef<"sp_user_check_in", 'BigInt'>
    readonly bonus: FieldRef<"sp_user_check_in", 'Int'>
    readonly days: FieldRef<"sp_user_check_in", 'Int'>
    readonly type: FieldRef<"sp_user_check_in", 'Boolean'>
    readonly updated_at: FieldRef<"sp_user_check_in", 'DateTime'>
    readonly created_at: FieldRef<"sp_user_check_in", 'DateTime'>
    readonly deleted_at: FieldRef<"sp_user_check_in", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sp_user_check_in findUnique
   */
  export type sp_user_check_inFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_check_in
     */
    select?: sp_user_check_inSelect<ExtArgs> | null
    /**
     * Filter, which sp_user_check_in to fetch.
     */
    where: sp_user_check_inWhereUniqueInput
  }

  /**
   * sp_user_check_in findUniqueOrThrow
   */
  export type sp_user_check_inFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_check_in
     */
    select?: sp_user_check_inSelect<ExtArgs> | null
    /**
     * Filter, which sp_user_check_in to fetch.
     */
    where: sp_user_check_inWhereUniqueInput
  }

  /**
   * sp_user_check_in findFirst
   */
  export type sp_user_check_inFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_check_in
     */
    select?: sp_user_check_inSelect<ExtArgs> | null
    /**
     * Filter, which sp_user_check_in to fetch.
     */
    where?: sp_user_check_inWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_user_check_ins to fetch.
     */
    orderBy?: sp_user_check_inOrderByWithRelationInput | sp_user_check_inOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_user_check_ins.
     */
    cursor?: sp_user_check_inWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_user_check_ins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_user_check_ins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_user_check_ins.
     */
    distinct?: Sp_user_check_inScalarFieldEnum | Sp_user_check_inScalarFieldEnum[]
  }

  /**
   * sp_user_check_in findFirstOrThrow
   */
  export type sp_user_check_inFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_check_in
     */
    select?: sp_user_check_inSelect<ExtArgs> | null
    /**
     * Filter, which sp_user_check_in to fetch.
     */
    where?: sp_user_check_inWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_user_check_ins to fetch.
     */
    orderBy?: sp_user_check_inOrderByWithRelationInput | sp_user_check_inOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_user_check_ins.
     */
    cursor?: sp_user_check_inWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_user_check_ins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_user_check_ins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_user_check_ins.
     */
    distinct?: Sp_user_check_inScalarFieldEnum | Sp_user_check_inScalarFieldEnum[]
  }

  /**
   * sp_user_check_in findMany
   */
  export type sp_user_check_inFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_check_in
     */
    select?: sp_user_check_inSelect<ExtArgs> | null
    /**
     * Filter, which sp_user_check_ins to fetch.
     */
    where?: sp_user_check_inWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_user_check_ins to fetch.
     */
    orderBy?: sp_user_check_inOrderByWithRelationInput | sp_user_check_inOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sp_user_check_ins.
     */
    cursor?: sp_user_check_inWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_user_check_ins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_user_check_ins.
     */
    skip?: number
    distinct?: Sp_user_check_inScalarFieldEnum | Sp_user_check_inScalarFieldEnum[]
  }

  /**
   * sp_user_check_in create
   */
  export type sp_user_check_inCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_check_in
     */
    select?: sp_user_check_inSelect<ExtArgs> | null
    /**
     * The data needed to create a sp_user_check_in.
     */
    data: XOR<sp_user_check_inCreateInput, sp_user_check_inUncheckedCreateInput>
  }

  /**
   * sp_user_check_in createMany
   */
  export type sp_user_check_inCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sp_user_check_ins.
     */
    data: sp_user_check_inCreateManyInput | sp_user_check_inCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sp_user_check_in update
   */
  export type sp_user_check_inUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_check_in
     */
    select?: sp_user_check_inSelect<ExtArgs> | null
    /**
     * The data needed to update a sp_user_check_in.
     */
    data: XOR<sp_user_check_inUpdateInput, sp_user_check_inUncheckedUpdateInput>
    /**
     * Choose, which sp_user_check_in to update.
     */
    where: sp_user_check_inWhereUniqueInput
  }

  /**
   * sp_user_check_in updateMany
   */
  export type sp_user_check_inUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sp_user_check_ins.
     */
    data: XOR<sp_user_check_inUpdateManyMutationInput, sp_user_check_inUncheckedUpdateManyInput>
    /**
     * Filter which sp_user_check_ins to update
     */
    where?: sp_user_check_inWhereInput
  }

  /**
   * sp_user_check_in upsert
   */
  export type sp_user_check_inUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_check_in
     */
    select?: sp_user_check_inSelect<ExtArgs> | null
    /**
     * The filter to search for the sp_user_check_in to update in case it exists.
     */
    where: sp_user_check_inWhereUniqueInput
    /**
     * In case the sp_user_check_in found by the `where` argument doesn't exist, create a new sp_user_check_in with this data.
     */
    create: XOR<sp_user_check_inCreateInput, sp_user_check_inUncheckedCreateInput>
    /**
     * In case the sp_user_check_in was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sp_user_check_inUpdateInput, sp_user_check_inUncheckedUpdateInput>
  }

  /**
   * sp_user_check_in delete
   */
  export type sp_user_check_inDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_check_in
     */
    select?: sp_user_check_inSelect<ExtArgs> | null
    /**
     * Filter which sp_user_check_in to delete.
     */
    where: sp_user_check_inWhereUniqueInput
  }

  /**
   * sp_user_check_in deleteMany
   */
  export type sp_user_check_inDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_user_check_ins to delete
     */
    where?: sp_user_check_inWhereInput
  }

  /**
   * sp_user_check_in without action
   */
  export type sp_user_check_inDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_check_in
     */
    select?: sp_user_check_inSelect<ExtArgs> | null
  }


  /**
   * Model sp_user_collections
   */

  export type AggregateSp_user_collections = {
    _count: Sp_user_collectionsCountAggregateOutputType | null
    _avg: Sp_user_collectionsAvgAggregateOutputType | null
    _sum: Sp_user_collectionsSumAggregateOutputType | null
    _min: Sp_user_collectionsMinAggregateOutputType | null
    _max: Sp_user_collectionsMaxAggregateOutputType | null
  }

  export type Sp_user_collectionsAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
    video_id: number | null
    video_group_id: number | null
  }

  export type Sp_user_collectionsSumAggregateOutputType = {
    id: number | null
    user_id: bigint | null
    video_id: bigint | null
    video_group_id: bigint | null
  }

  export type Sp_user_collectionsMinAggregateOutputType = {
    id: number | null
    user_id: bigint | null
    video_id: bigint | null
    video_group_id: bigint | null
    status: boolean | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_user_collectionsMaxAggregateOutputType = {
    id: number | null
    user_id: bigint | null
    video_id: bigint | null
    video_group_id: bigint | null
    status: boolean | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_user_collectionsCountAggregateOutputType = {
    id: number
    user_id: number
    video_id: number
    video_group_id: number
    status: number
    created_at: number
    updated_at: number
    deleted_at: number
    _all: number
  }


  export type Sp_user_collectionsAvgAggregateInputType = {
    id?: true
    user_id?: true
    video_id?: true
    video_group_id?: true
  }

  export type Sp_user_collectionsSumAggregateInputType = {
    id?: true
    user_id?: true
    video_id?: true
    video_group_id?: true
  }

  export type Sp_user_collectionsMinAggregateInputType = {
    id?: true
    user_id?: true
    video_id?: true
    video_group_id?: true
    status?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sp_user_collectionsMaxAggregateInputType = {
    id?: true
    user_id?: true
    video_id?: true
    video_group_id?: true
    status?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sp_user_collectionsCountAggregateInputType = {
    id?: true
    user_id?: true
    video_id?: true
    video_group_id?: true
    status?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    _all?: true
  }

  export type Sp_user_collectionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_user_collections to aggregate.
     */
    where?: sp_user_collectionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_user_collections to fetch.
     */
    orderBy?: sp_user_collectionsOrderByWithRelationInput | sp_user_collectionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sp_user_collectionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_user_collections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_user_collections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sp_user_collections
    **/
    _count?: true | Sp_user_collectionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sp_user_collectionsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sp_user_collectionsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sp_user_collectionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sp_user_collectionsMaxAggregateInputType
  }

  export type GetSp_user_collectionsAggregateType<T extends Sp_user_collectionsAggregateArgs> = {
        [P in keyof T & keyof AggregateSp_user_collections]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSp_user_collections[P]>
      : GetScalarType<T[P], AggregateSp_user_collections[P]>
  }




  export type sp_user_collectionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sp_user_collectionsWhereInput
    orderBy?: sp_user_collectionsOrderByWithAggregationInput | sp_user_collectionsOrderByWithAggregationInput[]
    by: Sp_user_collectionsScalarFieldEnum[] | Sp_user_collectionsScalarFieldEnum
    having?: sp_user_collectionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sp_user_collectionsCountAggregateInputType | true
    _avg?: Sp_user_collectionsAvgAggregateInputType
    _sum?: Sp_user_collectionsSumAggregateInputType
    _min?: Sp_user_collectionsMinAggregateInputType
    _max?: Sp_user_collectionsMaxAggregateInputType
  }

  export type Sp_user_collectionsGroupByOutputType = {
    id: number
    user_id: bigint
    video_id: bigint
    video_group_id: bigint
    status: boolean
    created_at: Date
    updated_at: Date | null
    deleted_at: Date | null
    _count: Sp_user_collectionsCountAggregateOutputType | null
    _avg: Sp_user_collectionsAvgAggregateOutputType | null
    _sum: Sp_user_collectionsSumAggregateOutputType | null
    _min: Sp_user_collectionsMinAggregateOutputType | null
    _max: Sp_user_collectionsMaxAggregateOutputType | null
  }

  type GetSp_user_collectionsGroupByPayload<T extends sp_user_collectionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sp_user_collectionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sp_user_collectionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sp_user_collectionsGroupByOutputType[P]>
            : GetScalarType<T[P], Sp_user_collectionsGroupByOutputType[P]>
        }
      >
    >


  export type sp_user_collectionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    video_id?: boolean
    video_group_id?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }, ExtArgs["result"]["sp_user_collections"]>


  export type sp_user_collectionsSelectScalar = {
    id?: boolean
    user_id?: boolean
    video_id?: boolean
    video_group_id?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }


  export type $sp_user_collectionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sp_user_collections"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      user_id: bigint
      video_id: bigint
      video_group_id: bigint
      status: boolean
      created_at: Date
      updated_at: Date | null
      deleted_at: Date | null
    }, ExtArgs["result"]["sp_user_collections"]>
    composites: {}
  }

  type sp_user_collectionsGetPayload<S extends boolean | null | undefined | sp_user_collectionsDefaultArgs> = $Result.GetResult<Prisma.$sp_user_collectionsPayload, S>

  type sp_user_collectionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<sp_user_collectionsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Sp_user_collectionsCountAggregateInputType | true
    }

  export interface sp_user_collectionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sp_user_collections'], meta: { name: 'sp_user_collections' } }
    /**
     * Find zero or one Sp_user_collections that matches the filter.
     * @param {sp_user_collectionsFindUniqueArgs} args - Arguments to find a Sp_user_collections
     * @example
     * // Get one Sp_user_collections
     * const sp_user_collections = await prisma.sp_user_collections.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sp_user_collectionsFindUniqueArgs>(args: SelectSubset<T, sp_user_collectionsFindUniqueArgs<ExtArgs>>): Prisma__sp_user_collectionsClient<$Result.GetResult<Prisma.$sp_user_collectionsPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Sp_user_collections that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {sp_user_collectionsFindUniqueOrThrowArgs} args - Arguments to find a Sp_user_collections
     * @example
     * // Get one Sp_user_collections
     * const sp_user_collections = await prisma.sp_user_collections.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sp_user_collectionsFindUniqueOrThrowArgs>(args: SelectSubset<T, sp_user_collectionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sp_user_collectionsClient<$Result.GetResult<Prisma.$sp_user_collectionsPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Sp_user_collections that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_user_collectionsFindFirstArgs} args - Arguments to find a Sp_user_collections
     * @example
     * // Get one Sp_user_collections
     * const sp_user_collections = await prisma.sp_user_collections.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sp_user_collectionsFindFirstArgs>(args?: SelectSubset<T, sp_user_collectionsFindFirstArgs<ExtArgs>>): Prisma__sp_user_collectionsClient<$Result.GetResult<Prisma.$sp_user_collectionsPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Sp_user_collections that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_user_collectionsFindFirstOrThrowArgs} args - Arguments to find a Sp_user_collections
     * @example
     * // Get one Sp_user_collections
     * const sp_user_collections = await prisma.sp_user_collections.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sp_user_collectionsFindFirstOrThrowArgs>(args?: SelectSubset<T, sp_user_collectionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__sp_user_collectionsClient<$Result.GetResult<Prisma.$sp_user_collectionsPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Sp_user_collections that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_user_collectionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sp_user_collections
     * const sp_user_collections = await prisma.sp_user_collections.findMany()
     * 
     * // Get first 10 Sp_user_collections
     * const sp_user_collections = await prisma.sp_user_collections.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sp_user_collectionsWithIdOnly = await prisma.sp_user_collections.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sp_user_collectionsFindManyArgs>(args?: SelectSubset<T, sp_user_collectionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sp_user_collectionsPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Sp_user_collections.
     * @param {sp_user_collectionsCreateArgs} args - Arguments to create a Sp_user_collections.
     * @example
     * // Create one Sp_user_collections
     * const Sp_user_collections = await prisma.sp_user_collections.create({
     *   data: {
     *     // ... data to create a Sp_user_collections
     *   }
     * })
     * 
     */
    create<T extends sp_user_collectionsCreateArgs>(args: SelectSubset<T, sp_user_collectionsCreateArgs<ExtArgs>>): Prisma__sp_user_collectionsClient<$Result.GetResult<Prisma.$sp_user_collectionsPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Sp_user_collections.
     * @param {sp_user_collectionsCreateManyArgs} args - Arguments to create many Sp_user_collections.
     * @example
     * // Create many Sp_user_collections
     * const sp_user_collections = await prisma.sp_user_collections.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sp_user_collectionsCreateManyArgs>(args?: SelectSubset<T, sp_user_collectionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sp_user_collections.
     * @param {sp_user_collectionsDeleteArgs} args - Arguments to delete one Sp_user_collections.
     * @example
     * // Delete one Sp_user_collections
     * const Sp_user_collections = await prisma.sp_user_collections.delete({
     *   where: {
     *     // ... filter to delete one Sp_user_collections
     *   }
     * })
     * 
     */
    delete<T extends sp_user_collectionsDeleteArgs>(args: SelectSubset<T, sp_user_collectionsDeleteArgs<ExtArgs>>): Prisma__sp_user_collectionsClient<$Result.GetResult<Prisma.$sp_user_collectionsPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Sp_user_collections.
     * @param {sp_user_collectionsUpdateArgs} args - Arguments to update one Sp_user_collections.
     * @example
     * // Update one Sp_user_collections
     * const sp_user_collections = await prisma.sp_user_collections.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sp_user_collectionsUpdateArgs>(args: SelectSubset<T, sp_user_collectionsUpdateArgs<ExtArgs>>): Prisma__sp_user_collectionsClient<$Result.GetResult<Prisma.$sp_user_collectionsPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Sp_user_collections.
     * @param {sp_user_collectionsDeleteManyArgs} args - Arguments to filter Sp_user_collections to delete.
     * @example
     * // Delete a few Sp_user_collections
     * const { count } = await prisma.sp_user_collections.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sp_user_collectionsDeleteManyArgs>(args?: SelectSubset<T, sp_user_collectionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sp_user_collections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_user_collectionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sp_user_collections
     * const sp_user_collections = await prisma.sp_user_collections.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sp_user_collectionsUpdateManyArgs>(args: SelectSubset<T, sp_user_collectionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sp_user_collections.
     * @param {sp_user_collectionsUpsertArgs} args - Arguments to update or create a Sp_user_collections.
     * @example
     * // Update or create a Sp_user_collections
     * const sp_user_collections = await prisma.sp_user_collections.upsert({
     *   create: {
     *     // ... data to create a Sp_user_collections
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sp_user_collections we want to update
     *   }
     * })
     */
    upsert<T extends sp_user_collectionsUpsertArgs>(args: SelectSubset<T, sp_user_collectionsUpsertArgs<ExtArgs>>): Prisma__sp_user_collectionsClient<$Result.GetResult<Prisma.$sp_user_collectionsPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Sp_user_collections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_user_collectionsCountArgs} args - Arguments to filter Sp_user_collections to count.
     * @example
     * // Count the number of Sp_user_collections
     * const count = await prisma.sp_user_collections.count({
     *   where: {
     *     // ... the filter for the Sp_user_collections we want to count
     *   }
     * })
    **/
    count<T extends sp_user_collectionsCountArgs>(
      args?: Subset<T, sp_user_collectionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sp_user_collectionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sp_user_collections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sp_user_collectionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sp_user_collectionsAggregateArgs>(args: Subset<T, Sp_user_collectionsAggregateArgs>): Prisma.PrismaPromise<GetSp_user_collectionsAggregateType<T>>

    /**
     * Group by Sp_user_collections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_user_collectionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sp_user_collectionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sp_user_collectionsGroupByArgs['orderBy'] }
        : { orderBy?: sp_user_collectionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sp_user_collectionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSp_user_collectionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sp_user_collections model
   */
  readonly fields: sp_user_collectionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sp_user_collections.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sp_user_collectionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sp_user_collections model
   */ 
  interface sp_user_collectionsFieldRefs {
    readonly id: FieldRef<"sp_user_collections", 'Int'>
    readonly user_id: FieldRef<"sp_user_collections", 'BigInt'>
    readonly video_id: FieldRef<"sp_user_collections", 'BigInt'>
    readonly video_group_id: FieldRef<"sp_user_collections", 'BigInt'>
    readonly status: FieldRef<"sp_user_collections", 'Boolean'>
    readonly created_at: FieldRef<"sp_user_collections", 'DateTime'>
    readonly updated_at: FieldRef<"sp_user_collections", 'DateTime'>
    readonly deleted_at: FieldRef<"sp_user_collections", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sp_user_collections findUnique
   */
  export type sp_user_collectionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_collections
     */
    select?: sp_user_collectionsSelect<ExtArgs> | null
    /**
     * Filter, which sp_user_collections to fetch.
     */
    where: sp_user_collectionsWhereUniqueInput
  }

  /**
   * sp_user_collections findUniqueOrThrow
   */
  export type sp_user_collectionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_collections
     */
    select?: sp_user_collectionsSelect<ExtArgs> | null
    /**
     * Filter, which sp_user_collections to fetch.
     */
    where: sp_user_collectionsWhereUniqueInput
  }

  /**
   * sp_user_collections findFirst
   */
  export type sp_user_collectionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_collections
     */
    select?: sp_user_collectionsSelect<ExtArgs> | null
    /**
     * Filter, which sp_user_collections to fetch.
     */
    where?: sp_user_collectionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_user_collections to fetch.
     */
    orderBy?: sp_user_collectionsOrderByWithRelationInput | sp_user_collectionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_user_collections.
     */
    cursor?: sp_user_collectionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_user_collections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_user_collections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_user_collections.
     */
    distinct?: Sp_user_collectionsScalarFieldEnum | Sp_user_collectionsScalarFieldEnum[]
  }

  /**
   * sp_user_collections findFirstOrThrow
   */
  export type sp_user_collectionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_collections
     */
    select?: sp_user_collectionsSelect<ExtArgs> | null
    /**
     * Filter, which sp_user_collections to fetch.
     */
    where?: sp_user_collectionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_user_collections to fetch.
     */
    orderBy?: sp_user_collectionsOrderByWithRelationInput | sp_user_collectionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_user_collections.
     */
    cursor?: sp_user_collectionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_user_collections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_user_collections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_user_collections.
     */
    distinct?: Sp_user_collectionsScalarFieldEnum | Sp_user_collectionsScalarFieldEnum[]
  }

  /**
   * sp_user_collections findMany
   */
  export type sp_user_collectionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_collections
     */
    select?: sp_user_collectionsSelect<ExtArgs> | null
    /**
     * Filter, which sp_user_collections to fetch.
     */
    where?: sp_user_collectionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_user_collections to fetch.
     */
    orderBy?: sp_user_collectionsOrderByWithRelationInput | sp_user_collectionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sp_user_collections.
     */
    cursor?: sp_user_collectionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_user_collections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_user_collections.
     */
    skip?: number
    distinct?: Sp_user_collectionsScalarFieldEnum | Sp_user_collectionsScalarFieldEnum[]
  }

  /**
   * sp_user_collections create
   */
  export type sp_user_collectionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_collections
     */
    select?: sp_user_collectionsSelect<ExtArgs> | null
    /**
     * The data needed to create a sp_user_collections.
     */
    data: XOR<sp_user_collectionsCreateInput, sp_user_collectionsUncheckedCreateInput>
  }

  /**
   * sp_user_collections createMany
   */
  export type sp_user_collectionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sp_user_collections.
     */
    data: sp_user_collectionsCreateManyInput | sp_user_collectionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sp_user_collections update
   */
  export type sp_user_collectionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_collections
     */
    select?: sp_user_collectionsSelect<ExtArgs> | null
    /**
     * The data needed to update a sp_user_collections.
     */
    data: XOR<sp_user_collectionsUpdateInput, sp_user_collectionsUncheckedUpdateInput>
    /**
     * Choose, which sp_user_collections to update.
     */
    where: sp_user_collectionsWhereUniqueInput
  }

  /**
   * sp_user_collections updateMany
   */
  export type sp_user_collectionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sp_user_collections.
     */
    data: XOR<sp_user_collectionsUpdateManyMutationInput, sp_user_collectionsUncheckedUpdateManyInput>
    /**
     * Filter which sp_user_collections to update
     */
    where?: sp_user_collectionsWhereInput
  }

  /**
   * sp_user_collections upsert
   */
  export type sp_user_collectionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_collections
     */
    select?: sp_user_collectionsSelect<ExtArgs> | null
    /**
     * The filter to search for the sp_user_collections to update in case it exists.
     */
    where: sp_user_collectionsWhereUniqueInput
    /**
     * In case the sp_user_collections found by the `where` argument doesn't exist, create a new sp_user_collections with this data.
     */
    create: XOR<sp_user_collectionsCreateInput, sp_user_collectionsUncheckedCreateInput>
    /**
     * In case the sp_user_collections was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sp_user_collectionsUpdateInput, sp_user_collectionsUncheckedUpdateInput>
  }

  /**
   * sp_user_collections delete
   */
  export type sp_user_collectionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_collections
     */
    select?: sp_user_collectionsSelect<ExtArgs> | null
    /**
     * Filter which sp_user_collections to delete.
     */
    where: sp_user_collectionsWhereUniqueInput
  }

  /**
   * sp_user_collections deleteMany
   */
  export type sp_user_collectionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_user_collections to delete
     */
    where?: sp_user_collectionsWhereInput
  }

  /**
   * sp_user_collections without action
   */
  export type sp_user_collectionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_collections
     */
    select?: sp_user_collectionsSelect<ExtArgs> | null
  }


  /**
   * Model sp_user_likes
   */

  export type AggregateSp_user_likes = {
    _count: Sp_user_likesCountAggregateOutputType | null
    _avg: Sp_user_likesAvgAggregateOutputType | null
    _sum: Sp_user_likesSumAggregateOutputType | null
    _min: Sp_user_likesMinAggregateOutputType | null
    _max: Sp_user_likesMaxAggregateOutputType | null
  }

  export type Sp_user_likesAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
    video_id: number | null
    video_group_id: number | null
  }

  export type Sp_user_likesSumAggregateOutputType = {
    id: number | null
    user_id: bigint | null
    video_id: bigint | null
    video_group_id: bigint | null
  }

  export type Sp_user_likesMinAggregateOutputType = {
    id: number | null
    user_id: bigint | null
    video_id: bigint | null
    video_group_id: bigint | null
    status: boolean | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_user_likesMaxAggregateOutputType = {
    id: number | null
    user_id: bigint | null
    video_id: bigint | null
    video_group_id: bigint | null
    status: boolean | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_user_likesCountAggregateOutputType = {
    id: number
    user_id: number
    video_id: number
    video_group_id: number
    status: number
    created_at: number
    updated_at: number
    deleted_at: number
    _all: number
  }


  export type Sp_user_likesAvgAggregateInputType = {
    id?: true
    user_id?: true
    video_id?: true
    video_group_id?: true
  }

  export type Sp_user_likesSumAggregateInputType = {
    id?: true
    user_id?: true
    video_id?: true
    video_group_id?: true
  }

  export type Sp_user_likesMinAggregateInputType = {
    id?: true
    user_id?: true
    video_id?: true
    video_group_id?: true
    status?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sp_user_likesMaxAggregateInputType = {
    id?: true
    user_id?: true
    video_id?: true
    video_group_id?: true
    status?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sp_user_likesCountAggregateInputType = {
    id?: true
    user_id?: true
    video_id?: true
    video_group_id?: true
    status?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    _all?: true
  }

  export type Sp_user_likesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_user_likes to aggregate.
     */
    where?: sp_user_likesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_user_likes to fetch.
     */
    orderBy?: sp_user_likesOrderByWithRelationInput | sp_user_likesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sp_user_likesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_user_likes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_user_likes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sp_user_likes
    **/
    _count?: true | Sp_user_likesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sp_user_likesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sp_user_likesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sp_user_likesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sp_user_likesMaxAggregateInputType
  }

  export type GetSp_user_likesAggregateType<T extends Sp_user_likesAggregateArgs> = {
        [P in keyof T & keyof AggregateSp_user_likes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSp_user_likes[P]>
      : GetScalarType<T[P], AggregateSp_user_likes[P]>
  }




  export type sp_user_likesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sp_user_likesWhereInput
    orderBy?: sp_user_likesOrderByWithAggregationInput | sp_user_likesOrderByWithAggregationInput[]
    by: Sp_user_likesScalarFieldEnum[] | Sp_user_likesScalarFieldEnum
    having?: sp_user_likesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sp_user_likesCountAggregateInputType | true
    _avg?: Sp_user_likesAvgAggregateInputType
    _sum?: Sp_user_likesSumAggregateInputType
    _min?: Sp_user_likesMinAggregateInputType
    _max?: Sp_user_likesMaxAggregateInputType
  }

  export type Sp_user_likesGroupByOutputType = {
    id: number
    user_id: bigint
    video_id: bigint
    video_group_id: bigint
    status: boolean
    created_at: Date
    updated_at: Date | null
    deleted_at: Date | null
    _count: Sp_user_likesCountAggregateOutputType | null
    _avg: Sp_user_likesAvgAggregateOutputType | null
    _sum: Sp_user_likesSumAggregateOutputType | null
    _min: Sp_user_likesMinAggregateOutputType | null
    _max: Sp_user_likesMaxAggregateOutputType | null
  }

  type GetSp_user_likesGroupByPayload<T extends sp_user_likesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sp_user_likesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sp_user_likesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sp_user_likesGroupByOutputType[P]>
            : GetScalarType<T[P], Sp_user_likesGroupByOutputType[P]>
        }
      >
    >


  export type sp_user_likesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    video_id?: boolean
    video_group_id?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }, ExtArgs["result"]["sp_user_likes"]>


  export type sp_user_likesSelectScalar = {
    id?: boolean
    user_id?: boolean
    video_id?: boolean
    video_group_id?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }


  export type $sp_user_likesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sp_user_likes"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      user_id: bigint
      video_id: bigint
      video_group_id: bigint
      status: boolean
      created_at: Date
      updated_at: Date | null
      deleted_at: Date | null
    }, ExtArgs["result"]["sp_user_likes"]>
    composites: {}
  }

  type sp_user_likesGetPayload<S extends boolean | null | undefined | sp_user_likesDefaultArgs> = $Result.GetResult<Prisma.$sp_user_likesPayload, S>

  type sp_user_likesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<sp_user_likesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Sp_user_likesCountAggregateInputType | true
    }

  export interface sp_user_likesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sp_user_likes'], meta: { name: 'sp_user_likes' } }
    /**
     * Find zero or one Sp_user_likes that matches the filter.
     * @param {sp_user_likesFindUniqueArgs} args - Arguments to find a Sp_user_likes
     * @example
     * // Get one Sp_user_likes
     * const sp_user_likes = await prisma.sp_user_likes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sp_user_likesFindUniqueArgs>(args: SelectSubset<T, sp_user_likesFindUniqueArgs<ExtArgs>>): Prisma__sp_user_likesClient<$Result.GetResult<Prisma.$sp_user_likesPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Sp_user_likes that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {sp_user_likesFindUniqueOrThrowArgs} args - Arguments to find a Sp_user_likes
     * @example
     * // Get one Sp_user_likes
     * const sp_user_likes = await prisma.sp_user_likes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sp_user_likesFindUniqueOrThrowArgs>(args: SelectSubset<T, sp_user_likesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sp_user_likesClient<$Result.GetResult<Prisma.$sp_user_likesPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Sp_user_likes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_user_likesFindFirstArgs} args - Arguments to find a Sp_user_likes
     * @example
     * // Get one Sp_user_likes
     * const sp_user_likes = await prisma.sp_user_likes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sp_user_likesFindFirstArgs>(args?: SelectSubset<T, sp_user_likesFindFirstArgs<ExtArgs>>): Prisma__sp_user_likesClient<$Result.GetResult<Prisma.$sp_user_likesPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Sp_user_likes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_user_likesFindFirstOrThrowArgs} args - Arguments to find a Sp_user_likes
     * @example
     * // Get one Sp_user_likes
     * const sp_user_likes = await prisma.sp_user_likes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sp_user_likesFindFirstOrThrowArgs>(args?: SelectSubset<T, sp_user_likesFindFirstOrThrowArgs<ExtArgs>>): Prisma__sp_user_likesClient<$Result.GetResult<Prisma.$sp_user_likesPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Sp_user_likes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_user_likesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sp_user_likes
     * const sp_user_likes = await prisma.sp_user_likes.findMany()
     * 
     * // Get first 10 Sp_user_likes
     * const sp_user_likes = await prisma.sp_user_likes.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sp_user_likesWithIdOnly = await prisma.sp_user_likes.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sp_user_likesFindManyArgs>(args?: SelectSubset<T, sp_user_likesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sp_user_likesPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Sp_user_likes.
     * @param {sp_user_likesCreateArgs} args - Arguments to create a Sp_user_likes.
     * @example
     * // Create one Sp_user_likes
     * const Sp_user_likes = await prisma.sp_user_likes.create({
     *   data: {
     *     // ... data to create a Sp_user_likes
     *   }
     * })
     * 
     */
    create<T extends sp_user_likesCreateArgs>(args: SelectSubset<T, sp_user_likesCreateArgs<ExtArgs>>): Prisma__sp_user_likesClient<$Result.GetResult<Prisma.$sp_user_likesPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Sp_user_likes.
     * @param {sp_user_likesCreateManyArgs} args - Arguments to create many Sp_user_likes.
     * @example
     * // Create many Sp_user_likes
     * const sp_user_likes = await prisma.sp_user_likes.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sp_user_likesCreateManyArgs>(args?: SelectSubset<T, sp_user_likesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sp_user_likes.
     * @param {sp_user_likesDeleteArgs} args - Arguments to delete one Sp_user_likes.
     * @example
     * // Delete one Sp_user_likes
     * const Sp_user_likes = await prisma.sp_user_likes.delete({
     *   where: {
     *     // ... filter to delete one Sp_user_likes
     *   }
     * })
     * 
     */
    delete<T extends sp_user_likesDeleteArgs>(args: SelectSubset<T, sp_user_likesDeleteArgs<ExtArgs>>): Prisma__sp_user_likesClient<$Result.GetResult<Prisma.$sp_user_likesPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Sp_user_likes.
     * @param {sp_user_likesUpdateArgs} args - Arguments to update one Sp_user_likes.
     * @example
     * // Update one Sp_user_likes
     * const sp_user_likes = await prisma.sp_user_likes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sp_user_likesUpdateArgs>(args: SelectSubset<T, sp_user_likesUpdateArgs<ExtArgs>>): Prisma__sp_user_likesClient<$Result.GetResult<Prisma.$sp_user_likesPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Sp_user_likes.
     * @param {sp_user_likesDeleteManyArgs} args - Arguments to filter Sp_user_likes to delete.
     * @example
     * // Delete a few Sp_user_likes
     * const { count } = await prisma.sp_user_likes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sp_user_likesDeleteManyArgs>(args?: SelectSubset<T, sp_user_likesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sp_user_likes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_user_likesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sp_user_likes
     * const sp_user_likes = await prisma.sp_user_likes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sp_user_likesUpdateManyArgs>(args: SelectSubset<T, sp_user_likesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sp_user_likes.
     * @param {sp_user_likesUpsertArgs} args - Arguments to update or create a Sp_user_likes.
     * @example
     * // Update or create a Sp_user_likes
     * const sp_user_likes = await prisma.sp_user_likes.upsert({
     *   create: {
     *     // ... data to create a Sp_user_likes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sp_user_likes we want to update
     *   }
     * })
     */
    upsert<T extends sp_user_likesUpsertArgs>(args: SelectSubset<T, sp_user_likesUpsertArgs<ExtArgs>>): Prisma__sp_user_likesClient<$Result.GetResult<Prisma.$sp_user_likesPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Sp_user_likes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_user_likesCountArgs} args - Arguments to filter Sp_user_likes to count.
     * @example
     * // Count the number of Sp_user_likes
     * const count = await prisma.sp_user_likes.count({
     *   where: {
     *     // ... the filter for the Sp_user_likes we want to count
     *   }
     * })
    **/
    count<T extends sp_user_likesCountArgs>(
      args?: Subset<T, sp_user_likesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sp_user_likesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sp_user_likes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sp_user_likesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sp_user_likesAggregateArgs>(args: Subset<T, Sp_user_likesAggregateArgs>): Prisma.PrismaPromise<GetSp_user_likesAggregateType<T>>

    /**
     * Group by Sp_user_likes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_user_likesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sp_user_likesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sp_user_likesGroupByArgs['orderBy'] }
        : { orderBy?: sp_user_likesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sp_user_likesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSp_user_likesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sp_user_likes model
   */
  readonly fields: sp_user_likesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sp_user_likes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sp_user_likesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sp_user_likes model
   */ 
  interface sp_user_likesFieldRefs {
    readonly id: FieldRef<"sp_user_likes", 'Int'>
    readonly user_id: FieldRef<"sp_user_likes", 'BigInt'>
    readonly video_id: FieldRef<"sp_user_likes", 'BigInt'>
    readonly video_group_id: FieldRef<"sp_user_likes", 'BigInt'>
    readonly status: FieldRef<"sp_user_likes", 'Boolean'>
    readonly created_at: FieldRef<"sp_user_likes", 'DateTime'>
    readonly updated_at: FieldRef<"sp_user_likes", 'DateTime'>
    readonly deleted_at: FieldRef<"sp_user_likes", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sp_user_likes findUnique
   */
  export type sp_user_likesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_likes
     */
    select?: sp_user_likesSelect<ExtArgs> | null
    /**
     * Filter, which sp_user_likes to fetch.
     */
    where: sp_user_likesWhereUniqueInput
  }

  /**
   * sp_user_likes findUniqueOrThrow
   */
  export type sp_user_likesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_likes
     */
    select?: sp_user_likesSelect<ExtArgs> | null
    /**
     * Filter, which sp_user_likes to fetch.
     */
    where: sp_user_likesWhereUniqueInput
  }

  /**
   * sp_user_likes findFirst
   */
  export type sp_user_likesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_likes
     */
    select?: sp_user_likesSelect<ExtArgs> | null
    /**
     * Filter, which sp_user_likes to fetch.
     */
    where?: sp_user_likesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_user_likes to fetch.
     */
    orderBy?: sp_user_likesOrderByWithRelationInput | sp_user_likesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_user_likes.
     */
    cursor?: sp_user_likesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_user_likes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_user_likes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_user_likes.
     */
    distinct?: Sp_user_likesScalarFieldEnum | Sp_user_likesScalarFieldEnum[]
  }

  /**
   * sp_user_likes findFirstOrThrow
   */
  export type sp_user_likesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_likes
     */
    select?: sp_user_likesSelect<ExtArgs> | null
    /**
     * Filter, which sp_user_likes to fetch.
     */
    where?: sp_user_likesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_user_likes to fetch.
     */
    orderBy?: sp_user_likesOrderByWithRelationInput | sp_user_likesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_user_likes.
     */
    cursor?: sp_user_likesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_user_likes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_user_likes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_user_likes.
     */
    distinct?: Sp_user_likesScalarFieldEnum | Sp_user_likesScalarFieldEnum[]
  }

  /**
   * sp_user_likes findMany
   */
  export type sp_user_likesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_likes
     */
    select?: sp_user_likesSelect<ExtArgs> | null
    /**
     * Filter, which sp_user_likes to fetch.
     */
    where?: sp_user_likesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_user_likes to fetch.
     */
    orderBy?: sp_user_likesOrderByWithRelationInput | sp_user_likesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sp_user_likes.
     */
    cursor?: sp_user_likesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_user_likes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_user_likes.
     */
    skip?: number
    distinct?: Sp_user_likesScalarFieldEnum | Sp_user_likesScalarFieldEnum[]
  }

  /**
   * sp_user_likes create
   */
  export type sp_user_likesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_likes
     */
    select?: sp_user_likesSelect<ExtArgs> | null
    /**
     * The data needed to create a sp_user_likes.
     */
    data: XOR<sp_user_likesCreateInput, sp_user_likesUncheckedCreateInput>
  }

  /**
   * sp_user_likes createMany
   */
  export type sp_user_likesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sp_user_likes.
     */
    data: sp_user_likesCreateManyInput | sp_user_likesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sp_user_likes update
   */
  export type sp_user_likesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_likes
     */
    select?: sp_user_likesSelect<ExtArgs> | null
    /**
     * The data needed to update a sp_user_likes.
     */
    data: XOR<sp_user_likesUpdateInput, sp_user_likesUncheckedUpdateInput>
    /**
     * Choose, which sp_user_likes to update.
     */
    where: sp_user_likesWhereUniqueInput
  }

  /**
   * sp_user_likes updateMany
   */
  export type sp_user_likesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sp_user_likes.
     */
    data: XOR<sp_user_likesUpdateManyMutationInput, sp_user_likesUncheckedUpdateManyInput>
    /**
     * Filter which sp_user_likes to update
     */
    where?: sp_user_likesWhereInput
  }

  /**
   * sp_user_likes upsert
   */
  export type sp_user_likesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_likes
     */
    select?: sp_user_likesSelect<ExtArgs> | null
    /**
     * The filter to search for the sp_user_likes to update in case it exists.
     */
    where: sp_user_likesWhereUniqueInput
    /**
     * In case the sp_user_likes found by the `where` argument doesn't exist, create a new sp_user_likes with this data.
     */
    create: XOR<sp_user_likesCreateInput, sp_user_likesUncheckedCreateInput>
    /**
     * In case the sp_user_likes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sp_user_likesUpdateInput, sp_user_likesUncheckedUpdateInput>
  }

  /**
   * sp_user_likes delete
   */
  export type sp_user_likesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_likes
     */
    select?: sp_user_likesSelect<ExtArgs> | null
    /**
     * Filter which sp_user_likes to delete.
     */
    where: sp_user_likesWhereUniqueInput
  }

  /**
   * sp_user_likes deleteMany
   */
  export type sp_user_likesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_user_likes to delete
     */
    where?: sp_user_likesWhereInput
  }

  /**
   * sp_user_likes without action
   */
  export type sp_user_likesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_likes
     */
    select?: sp_user_likesSelect<ExtArgs> | null
  }


  /**
   * Model sp_user_my_lists
   */

  export type AggregateSp_user_my_lists = {
    _count: Sp_user_my_listsCountAggregateOutputType | null
    _avg: Sp_user_my_listsAvgAggregateOutputType | null
    _sum: Sp_user_my_listsSumAggregateOutputType | null
    _min: Sp_user_my_listsMinAggregateOutputType | null
    _max: Sp_user_my_listsMaxAggregateOutputType | null
  }

  export type Sp_user_my_listsAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
    video_group_id: number | null
  }

  export type Sp_user_my_listsSumAggregateOutputType = {
    id: bigint | null
    user_id: bigint | null
    video_group_id: number | null
  }

  export type Sp_user_my_listsMinAggregateOutputType = {
    id: bigint | null
    user_id: bigint | null
    video_group_id: number | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_user_my_listsMaxAggregateOutputType = {
    id: bigint | null
    user_id: bigint | null
    video_group_id: number | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_user_my_listsCountAggregateOutputType = {
    id: number
    user_id: number
    video_group_id: number
    created_at: number
    updated_at: number
    deleted_at: number
    _all: number
  }


  export type Sp_user_my_listsAvgAggregateInputType = {
    id?: true
    user_id?: true
    video_group_id?: true
  }

  export type Sp_user_my_listsSumAggregateInputType = {
    id?: true
    user_id?: true
    video_group_id?: true
  }

  export type Sp_user_my_listsMinAggregateInputType = {
    id?: true
    user_id?: true
    video_group_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sp_user_my_listsMaxAggregateInputType = {
    id?: true
    user_id?: true
    video_group_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sp_user_my_listsCountAggregateInputType = {
    id?: true
    user_id?: true
    video_group_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    _all?: true
  }

  export type Sp_user_my_listsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_user_my_lists to aggregate.
     */
    where?: sp_user_my_listsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_user_my_lists to fetch.
     */
    orderBy?: sp_user_my_listsOrderByWithRelationInput | sp_user_my_listsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sp_user_my_listsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_user_my_lists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_user_my_lists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sp_user_my_lists
    **/
    _count?: true | Sp_user_my_listsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sp_user_my_listsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sp_user_my_listsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sp_user_my_listsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sp_user_my_listsMaxAggregateInputType
  }

  export type GetSp_user_my_listsAggregateType<T extends Sp_user_my_listsAggregateArgs> = {
        [P in keyof T & keyof AggregateSp_user_my_lists]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSp_user_my_lists[P]>
      : GetScalarType<T[P], AggregateSp_user_my_lists[P]>
  }




  export type sp_user_my_listsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sp_user_my_listsWhereInput
    orderBy?: sp_user_my_listsOrderByWithAggregationInput | sp_user_my_listsOrderByWithAggregationInput[]
    by: Sp_user_my_listsScalarFieldEnum[] | Sp_user_my_listsScalarFieldEnum
    having?: sp_user_my_listsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sp_user_my_listsCountAggregateInputType | true
    _avg?: Sp_user_my_listsAvgAggregateInputType
    _sum?: Sp_user_my_listsSumAggregateInputType
    _min?: Sp_user_my_listsMinAggregateInputType
    _max?: Sp_user_my_listsMaxAggregateInputType
  }

  export type Sp_user_my_listsGroupByOutputType = {
    id: bigint
    user_id: bigint
    video_group_id: number
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
    _count: Sp_user_my_listsCountAggregateOutputType | null
    _avg: Sp_user_my_listsAvgAggregateOutputType | null
    _sum: Sp_user_my_listsSumAggregateOutputType | null
    _min: Sp_user_my_listsMinAggregateOutputType | null
    _max: Sp_user_my_listsMaxAggregateOutputType | null
  }

  type GetSp_user_my_listsGroupByPayload<T extends sp_user_my_listsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sp_user_my_listsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sp_user_my_listsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sp_user_my_listsGroupByOutputType[P]>
            : GetScalarType<T[P], Sp_user_my_listsGroupByOutputType[P]>
        }
      >
    >


  export type sp_user_my_listsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    video_group_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }, ExtArgs["result"]["sp_user_my_lists"]>


  export type sp_user_my_listsSelectScalar = {
    id?: boolean
    user_id?: boolean
    video_group_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }


  export type $sp_user_my_listsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sp_user_my_lists"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      user_id: bigint
      video_group_id: number
      created_at: Date | null
      updated_at: Date | null
      deleted_at: Date | null
    }, ExtArgs["result"]["sp_user_my_lists"]>
    composites: {}
  }

  type sp_user_my_listsGetPayload<S extends boolean | null | undefined | sp_user_my_listsDefaultArgs> = $Result.GetResult<Prisma.$sp_user_my_listsPayload, S>

  type sp_user_my_listsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<sp_user_my_listsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Sp_user_my_listsCountAggregateInputType | true
    }

  export interface sp_user_my_listsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sp_user_my_lists'], meta: { name: 'sp_user_my_lists' } }
    /**
     * Find zero or one Sp_user_my_lists that matches the filter.
     * @param {sp_user_my_listsFindUniqueArgs} args - Arguments to find a Sp_user_my_lists
     * @example
     * // Get one Sp_user_my_lists
     * const sp_user_my_lists = await prisma.sp_user_my_lists.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sp_user_my_listsFindUniqueArgs>(args: SelectSubset<T, sp_user_my_listsFindUniqueArgs<ExtArgs>>): Prisma__sp_user_my_listsClient<$Result.GetResult<Prisma.$sp_user_my_listsPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Sp_user_my_lists that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {sp_user_my_listsFindUniqueOrThrowArgs} args - Arguments to find a Sp_user_my_lists
     * @example
     * // Get one Sp_user_my_lists
     * const sp_user_my_lists = await prisma.sp_user_my_lists.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sp_user_my_listsFindUniqueOrThrowArgs>(args: SelectSubset<T, sp_user_my_listsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sp_user_my_listsClient<$Result.GetResult<Prisma.$sp_user_my_listsPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Sp_user_my_lists that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_user_my_listsFindFirstArgs} args - Arguments to find a Sp_user_my_lists
     * @example
     * // Get one Sp_user_my_lists
     * const sp_user_my_lists = await prisma.sp_user_my_lists.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sp_user_my_listsFindFirstArgs>(args?: SelectSubset<T, sp_user_my_listsFindFirstArgs<ExtArgs>>): Prisma__sp_user_my_listsClient<$Result.GetResult<Prisma.$sp_user_my_listsPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Sp_user_my_lists that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_user_my_listsFindFirstOrThrowArgs} args - Arguments to find a Sp_user_my_lists
     * @example
     * // Get one Sp_user_my_lists
     * const sp_user_my_lists = await prisma.sp_user_my_lists.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sp_user_my_listsFindFirstOrThrowArgs>(args?: SelectSubset<T, sp_user_my_listsFindFirstOrThrowArgs<ExtArgs>>): Prisma__sp_user_my_listsClient<$Result.GetResult<Prisma.$sp_user_my_listsPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Sp_user_my_lists that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_user_my_listsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sp_user_my_lists
     * const sp_user_my_lists = await prisma.sp_user_my_lists.findMany()
     * 
     * // Get first 10 Sp_user_my_lists
     * const sp_user_my_lists = await prisma.sp_user_my_lists.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sp_user_my_listsWithIdOnly = await prisma.sp_user_my_lists.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sp_user_my_listsFindManyArgs>(args?: SelectSubset<T, sp_user_my_listsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sp_user_my_listsPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Sp_user_my_lists.
     * @param {sp_user_my_listsCreateArgs} args - Arguments to create a Sp_user_my_lists.
     * @example
     * // Create one Sp_user_my_lists
     * const Sp_user_my_lists = await prisma.sp_user_my_lists.create({
     *   data: {
     *     // ... data to create a Sp_user_my_lists
     *   }
     * })
     * 
     */
    create<T extends sp_user_my_listsCreateArgs>(args: SelectSubset<T, sp_user_my_listsCreateArgs<ExtArgs>>): Prisma__sp_user_my_listsClient<$Result.GetResult<Prisma.$sp_user_my_listsPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Sp_user_my_lists.
     * @param {sp_user_my_listsCreateManyArgs} args - Arguments to create many Sp_user_my_lists.
     * @example
     * // Create many Sp_user_my_lists
     * const sp_user_my_lists = await prisma.sp_user_my_lists.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sp_user_my_listsCreateManyArgs>(args?: SelectSubset<T, sp_user_my_listsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sp_user_my_lists.
     * @param {sp_user_my_listsDeleteArgs} args - Arguments to delete one Sp_user_my_lists.
     * @example
     * // Delete one Sp_user_my_lists
     * const Sp_user_my_lists = await prisma.sp_user_my_lists.delete({
     *   where: {
     *     // ... filter to delete one Sp_user_my_lists
     *   }
     * })
     * 
     */
    delete<T extends sp_user_my_listsDeleteArgs>(args: SelectSubset<T, sp_user_my_listsDeleteArgs<ExtArgs>>): Prisma__sp_user_my_listsClient<$Result.GetResult<Prisma.$sp_user_my_listsPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Sp_user_my_lists.
     * @param {sp_user_my_listsUpdateArgs} args - Arguments to update one Sp_user_my_lists.
     * @example
     * // Update one Sp_user_my_lists
     * const sp_user_my_lists = await prisma.sp_user_my_lists.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sp_user_my_listsUpdateArgs>(args: SelectSubset<T, sp_user_my_listsUpdateArgs<ExtArgs>>): Prisma__sp_user_my_listsClient<$Result.GetResult<Prisma.$sp_user_my_listsPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Sp_user_my_lists.
     * @param {sp_user_my_listsDeleteManyArgs} args - Arguments to filter Sp_user_my_lists to delete.
     * @example
     * // Delete a few Sp_user_my_lists
     * const { count } = await prisma.sp_user_my_lists.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sp_user_my_listsDeleteManyArgs>(args?: SelectSubset<T, sp_user_my_listsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sp_user_my_lists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_user_my_listsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sp_user_my_lists
     * const sp_user_my_lists = await prisma.sp_user_my_lists.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sp_user_my_listsUpdateManyArgs>(args: SelectSubset<T, sp_user_my_listsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sp_user_my_lists.
     * @param {sp_user_my_listsUpsertArgs} args - Arguments to update or create a Sp_user_my_lists.
     * @example
     * // Update or create a Sp_user_my_lists
     * const sp_user_my_lists = await prisma.sp_user_my_lists.upsert({
     *   create: {
     *     // ... data to create a Sp_user_my_lists
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sp_user_my_lists we want to update
     *   }
     * })
     */
    upsert<T extends sp_user_my_listsUpsertArgs>(args: SelectSubset<T, sp_user_my_listsUpsertArgs<ExtArgs>>): Prisma__sp_user_my_listsClient<$Result.GetResult<Prisma.$sp_user_my_listsPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Sp_user_my_lists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_user_my_listsCountArgs} args - Arguments to filter Sp_user_my_lists to count.
     * @example
     * // Count the number of Sp_user_my_lists
     * const count = await prisma.sp_user_my_lists.count({
     *   where: {
     *     // ... the filter for the Sp_user_my_lists we want to count
     *   }
     * })
    **/
    count<T extends sp_user_my_listsCountArgs>(
      args?: Subset<T, sp_user_my_listsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sp_user_my_listsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sp_user_my_lists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sp_user_my_listsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sp_user_my_listsAggregateArgs>(args: Subset<T, Sp_user_my_listsAggregateArgs>): Prisma.PrismaPromise<GetSp_user_my_listsAggregateType<T>>

    /**
     * Group by Sp_user_my_lists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_user_my_listsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sp_user_my_listsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sp_user_my_listsGroupByArgs['orderBy'] }
        : { orderBy?: sp_user_my_listsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sp_user_my_listsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSp_user_my_listsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sp_user_my_lists model
   */
  readonly fields: sp_user_my_listsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sp_user_my_lists.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sp_user_my_listsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sp_user_my_lists model
   */ 
  interface sp_user_my_listsFieldRefs {
    readonly id: FieldRef<"sp_user_my_lists", 'BigInt'>
    readonly user_id: FieldRef<"sp_user_my_lists", 'BigInt'>
    readonly video_group_id: FieldRef<"sp_user_my_lists", 'Int'>
    readonly created_at: FieldRef<"sp_user_my_lists", 'DateTime'>
    readonly updated_at: FieldRef<"sp_user_my_lists", 'DateTime'>
    readonly deleted_at: FieldRef<"sp_user_my_lists", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sp_user_my_lists findUnique
   */
  export type sp_user_my_listsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_my_lists
     */
    select?: sp_user_my_listsSelect<ExtArgs> | null
    /**
     * Filter, which sp_user_my_lists to fetch.
     */
    where: sp_user_my_listsWhereUniqueInput
  }

  /**
   * sp_user_my_lists findUniqueOrThrow
   */
  export type sp_user_my_listsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_my_lists
     */
    select?: sp_user_my_listsSelect<ExtArgs> | null
    /**
     * Filter, which sp_user_my_lists to fetch.
     */
    where: sp_user_my_listsWhereUniqueInput
  }

  /**
   * sp_user_my_lists findFirst
   */
  export type sp_user_my_listsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_my_lists
     */
    select?: sp_user_my_listsSelect<ExtArgs> | null
    /**
     * Filter, which sp_user_my_lists to fetch.
     */
    where?: sp_user_my_listsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_user_my_lists to fetch.
     */
    orderBy?: sp_user_my_listsOrderByWithRelationInput | sp_user_my_listsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_user_my_lists.
     */
    cursor?: sp_user_my_listsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_user_my_lists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_user_my_lists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_user_my_lists.
     */
    distinct?: Sp_user_my_listsScalarFieldEnum | Sp_user_my_listsScalarFieldEnum[]
  }

  /**
   * sp_user_my_lists findFirstOrThrow
   */
  export type sp_user_my_listsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_my_lists
     */
    select?: sp_user_my_listsSelect<ExtArgs> | null
    /**
     * Filter, which sp_user_my_lists to fetch.
     */
    where?: sp_user_my_listsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_user_my_lists to fetch.
     */
    orderBy?: sp_user_my_listsOrderByWithRelationInput | sp_user_my_listsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_user_my_lists.
     */
    cursor?: sp_user_my_listsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_user_my_lists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_user_my_lists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_user_my_lists.
     */
    distinct?: Sp_user_my_listsScalarFieldEnum | Sp_user_my_listsScalarFieldEnum[]
  }

  /**
   * sp_user_my_lists findMany
   */
  export type sp_user_my_listsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_my_lists
     */
    select?: sp_user_my_listsSelect<ExtArgs> | null
    /**
     * Filter, which sp_user_my_lists to fetch.
     */
    where?: sp_user_my_listsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_user_my_lists to fetch.
     */
    orderBy?: sp_user_my_listsOrderByWithRelationInput | sp_user_my_listsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sp_user_my_lists.
     */
    cursor?: sp_user_my_listsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_user_my_lists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_user_my_lists.
     */
    skip?: number
    distinct?: Sp_user_my_listsScalarFieldEnum | Sp_user_my_listsScalarFieldEnum[]
  }

  /**
   * sp_user_my_lists create
   */
  export type sp_user_my_listsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_my_lists
     */
    select?: sp_user_my_listsSelect<ExtArgs> | null
    /**
     * The data needed to create a sp_user_my_lists.
     */
    data: XOR<sp_user_my_listsCreateInput, sp_user_my_listsUncheckedCreateInput>
  }

  /**
   * sp_user_my_lists createMany
   */
  export type sp_user_my_listsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sp_user_my_lists.
     */
    data: sp_user_my_listsCreateManyInput | sp_user_my_listsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sp_user_my_lists update
   */
  export type sp_user_my_listsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_my_lists
     */
    select?: sp_user_my_listsSelect<ExtArgs> | null
    /**
     * The data needed to update a sp_user_my_lists.
     */
    data: XOR<sp_user_my_listsUpdateInput, sp_user_my_listsUncheckedUpdateInput>
    /**
     * Choose, which sp_user_my_lists to update.
     */
    where: sp_user_my_listsWhereUniqueInput
  }

  /**
   * sp_user_my_lists updateMany
   */
  export type sp_user_my_listsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sp_user_my_lists.
     */
    data: XOR<sp_user_my_listsUpdateManyMutationInput, sp_user_my_listsUncheckedUpdateManyInput>
    /**
     * Filter which sp_user_my_lists to update
     */
    where?: sp_user_my_listsWhereInput
  }

  /**
   * sp_user_my_lists upsert
   */
  export type sp_user_my_listsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_my_lists
     */
    select?: sp_user_my_listsSelect<ExtArgs> | null
    /**
     * The filter to search for the sp_user_my_lists to update in case it exists.
     */
    where: sp_user_my_listsWhereUniqueInput
    /**
     * In case the sp_user_my_lists found by the `where` argument doesn't exist, create a new sp_user_my_lists with this data.
     */
    create: XOR<sp_user_my_listsCreateInput, sp_user_my_listsUncheckedCreateInput>
    /**
     * In case the sp_user_my_lists was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sp_user_my_listsUpdateInput, sp_user_my_listsUncheckedUpdateInput>
  }

  /**
   * sp_user_my_lists delete
   */
  export type sp_user_my_listsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_my_lists
     */
    select?: sp_user_my_listsSelect<ExtArgs> | null
    /**
     * Filter which sp_user_my_lists to delete.
     */
    where: sp_user_my_listsWhereUniqueInput
  }

  /**
   * sp_user_my_lists deleteMany
   */
  export type sp_user_my_listsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_user_my_lists to delete
     */
    where?: sp_user_my_listsWhereInput
  }

  /**
   * sp_user_my_lists without action
   */
  export type sp_user_my_listsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_my_lists
     */
    select?: sp_user_my_listsSelect<ExtArgs> | null
  }


  /**
   * Model sp_user_suggests
   */

  export type AggregateSp_user_suggests = {
    _count: Sp_user_suggestsCountAggregateOutputType | null
    _avg: Sp_user_suggestsAvgAggregateOutputType | null
    _sum: Sp_user_suggestsSumAggregateOutputType | null
    _min: Sp_user_suggestsMinAggregateOutputType | null
    _max: Sp_user_suggestsMaxAggregateOutputType | null
  }

  export type Sp_user_suggestsAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
  }

  export type Sp_user_suggestsSumAggregateOutputType = {
    id: bigint | null
    user_id: bigint | null
  }

  export type Sp_user_suggestsMinAggregateOutputType = {
    id: bigint | null
    user_id: bigint | null
    title: string | null
    content: string | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
    email: string | null
  }

  export type Sp_user_suggestsMaxAggregateOutputType = {
    id: bigint | null
    user_id: bigint | null
    title: string | null
    content: string | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
    email: string | null
  }

  export type Sp_user_suggestsCountAggregateOutputType = {
    id: number
    user_id: number
    title: number
    content: number
    created_at: number
    updated_at: number
    deleted_at: number
    email: number
    _all: number
  }


  export type Sp_user_suggestsAvgAggregateInputType = {
    id?: true
    user_id?: true
  }

  export type Sp_user_suggestsSumAggregateInputType = {
    id?: true
    user_id?: true
  }

  export type Sp_user_suggestsMinAggregateInputType = {
    id?: true
    user_id?: true
    title?: true
    content?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    email?: true
  }

  export type Sp_user_suggestsMaxAggregateInputType = {
    id?: true
    user_id?: true
    title?: true
    content?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    email?: true
  }

  export type Sp_user_suggestsCountAggregateInputType = {
    id?: true
    user_id?: true
    title?: true
    content?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    email?: true
    _all?: true
  }

  export type Sp_user_suggestsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_user_suggests to aggregate.
     */
    where?: sp_user_suggestsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_user_suggests to fetch.
     */
    orderBy?: sp_user_suggestsOrderByWithRelationInput | sp_user_suggestsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sp_user_suggestsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_user_suggests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_user_suggests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sp_user_suggests
    **/
    _count?: true | Sp_user_suggestsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sp_user_suggestsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sp_user_suggestsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sp_user_suggestsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sp_user_suggestsMaxAggregateInputType
  }

  export type GetSp_user_suggestsAggregateType<T extends Sp_user_suggestsAggregateArgs> = {
        [P in keyof T & keyof AggregateSp_user_suggests]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSp_user_suggests[P]>
      : GetScalarType<T[P], AggregateSp_user_suggests[P]>
  }




  export type sp_user_suggestsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sp_user_suggestsWhereInput
    orderBy?: sp_user_suggestsOrderByWithAggregationInput | sp_user_suggestsOrderByWithAggregationInput[]
    by: Sp_user_suggestsScalarFieldEnum[] | Sp_user_suggestsScalarFieldEnum
    having?: sp_user_suggestsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sp_user_suggestsCountAggregateInputType | true
    _avg?: Sp_user_suggestsAvgAggregateInputType
    _sum?: Sp_user_suggestsSumAggregateInputType
    _min?: Sp_user_suggestsMinAggregateInputType
    _max?: Sp_user_suggestsMaxAggregateInputType
  }

  export type Sp_user_suggestsGroupByOutputType = {
    id: bigint
    user_id: bigint
    title: string
    content: string
    created_at: Date
    updated_at: Date | null
    deleted_at: Date | null
    email: string | null
    _count: Sp_user_suggestsCountAggregateOutputType | null
    _avg: Sp_user_suggestsAvgAggregateOutputType | null
    _sum: Sp_user_suggestsSumAggregateOutputType | null
    _min: Sp_user_suggestsMinAggregateOutputType | null
    _max: Sp_user_suggestsMaxAggregateOutputType | null
  }

  type GetSp_user_suggestsGroupByPayload<T extends sp_user_suggestsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sp_user_suggestsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sp_user_suggestsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sp_user_suggestsGroupByOutputType[P]>
            : GetScalarType<T[P], Sp_user_suggestsGroupByOutputType[P]>
        }
      >
    >


  export type sp_user_suggestsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    title?: boolean
    content?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
    email?: boolean
  }, ExtArgs["result"]["sp_user_suggests"]>


  export type sp_user_suggestsSelectScalar = {
    id?: boolean
    user_id?: boolean
    title?: boolean
    content?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
    email?: boolean
  }


  export type $sp_user_suggestsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sp_user_suggests"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      user_id: bigint
      title: string
      content: string
      created_at: Date
      updated_at: Date | null
      deleted_at: Date | null
      email: string | null
    }, ExtArgs["result"]["sp_user_suggests"]>
    composites: {}
  }

  type sp_user_suggestsGetPayload<S extends boolean | null | undefined | sp_user_suggestsDefaultArgs> = $Result.GetResult<Prisma.$sp_user_suggestsPayload, S>

  type sp_user_suggestsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<sp_user_suggestsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Sp_user_suggestsCountAggregateInputType | true
    }

  export interface sp_user_suggestsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sp_user_suggests'], meta: { name: 'sp_user_suggests' } }
    /**
     * Find zero or one Sp_user_suggests that matches the filter.
     * @param {sp_user_suggestsFindUniqueArgs} args - Arguments to find a Sp_user_suggests
     * @example
     * // Get one Sp_user_suggests
     * const sp_user_suggests = await prisma.sp_user_suggests.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sp_user_suggestsFindUniqueArgs>(args: SelectSubset<T, sp_user_suggestsFindUniqueArgs<ExtArgs>>): Prisma__sp_user_suggestsClient<$Result.GetResult<Prisma.$sp_user_suggestsPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Sp_user_suggests that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {sp_user_suggestsFindUniqueOrThrowArgs} args - Arguments to find a Sp_user_suggests
     * @example
     * // Get one Sp_user_suggests
     * const sp_user_suggests = await prisma.sp_user_suggests.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sp_user_suggestsFindUniqueOrThrowArgs>(args: SelectSubset<T, sp_user_suggestsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sp_user_suggestsClient<$Result.GetResult<Prisma.$sp_user_suggestsPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Sp_user_suggests that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_user_suggestsFindFirstArgs} args - Arguments to find a Sp_user_suggests
     * @example
     * // Get one Sp_user_suggests
     * const sp_user_suggests = await prisma.sp_user_suggests.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sp_user_suggestsFindFirstArgs>(args?: SelectSubset<T, sp_user_suggestsFindFirstArgs<ExtArgs>>): Prisma__sp_user_suggestsClient<$Result.GetResult<Prisma.$sp_user_suggestsPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Sp_user_suggests that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_user_suggestsFindFirstOrThrowArgs} args - Arguments to find a Sp_user_suggests
     * @example
     * // Get one Sp_user_suggests
     * const sp_user_suggests = await prisma.sp_user_suggests.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sp_user_suggestsFindFirstOrThrowArgs>(args?: SelectSubset<T, sp_user_suggestsFindFirstOrThrowArgs<ExtArgs>>): Prisma__sp_user_suggestsClient<$Result.GetResult<Prisma.$sp_user_suggestsPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Sp_user_suggests that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_user_suggestsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sp_user_suggests
     * const sp_user_suggests = await prisma.sp_user_suggests.findMany()
     * 
     * // Get first 10 Sp_user_suggests
     * const sp_user_suggests = await prisma.sp_user_suggests.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sp_user_suggestsWithIdOnly = await prisma.sp_user_suggests.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sp_user_suggestsFindManyArgs>(args?: SelectSubset<T, sp_user_suggestsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sp_user_suggestsPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Sp_user_suggests.
     * @param {sp_user_suggestsCreateArgs} args - Arguments to create a Sp_user_suggests.
     * @example
     * // Create one Sp_user_suggests
     * const Sp_user_suggests = await prisma.sp_user_suggests.create({
     *   data: {
     *     // ... data to create a Sp_user_suggests
     *   }
     * })
     * 
     */
    create<T extends sp_user_suggestsCreateArgs>(args: SelectSubset<T, sp_user_suggestsCreateArgs<ExtArgs>>): Prisma__sp_user_suggestsClient<$Result.GetResult<Prisma.$sp_user_suggestsPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Sp_user_suggests.
     * @param {sp_user_suggestsCreateManyArgs} args - Arguments to create many Sp_user_suggests.
     * @example
     * // Create many Sp_user_suggests
     * const sp_user_suggests = await prisma.sp_user_suggests.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sp_user_suggestsCreateManyArgs>(args?: SelectSubset<T, sp_user_suggestsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sp_user_suggests.
     * @param {sp_user_suggestsDeleteArgs} args - Arguments to delete one Sp_user_suggests.
     * @example
     * // Delete one Sp_user_suggests
     * const Sp_user_suggests = await prisma.sp_user_suggests.delete({
     *   where: {
     *     // ... filter to delete one Sp_user_suggests
     *   }
     * })
     * 
     */
    delete<T extends sp_user_suggestsDeleteArgs>(args: SelectSubset<T, sp_user_suggestsDeleteArgs<ExtArgs>>): Prisma__sp_user_suggestsClient<$Result.GetResult<Prisma.$sp_user_suggestsPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Sp_user_suggests.
     * @param {sp_user_suggestsUpdateArgs} args - Arguments to update one Sp_user_suggests.
     * @example
     * // Update one Sp_user_suggests
     * const sp_user_suggests = await prisma.sp_user_suggests.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sp_user_suggestsUpdateArgs>(args: SelectSubset<T, sp_user_suggestsUpdateArgs<ExtArgs>>): Prisma__sp_user_suggestsClient<$Result.GetResult<Prisma.$sp_user_suggestsPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Sp_user_suggests.
     * @param {sp_user_suggestsDeleteManyArgs} args - Arguments to filter Sp_user_suggests to delete.
     * @example
     * // Delete a few Sp_user_suggests
     * const { count } = await prisma.sp_user_suggests.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sp_user_suggestsDeleteManyArgs>(args?: SelectSubset<T, sp_user_suggestsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sp_user_suggests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_user_suggestsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sp_user_suggests
     * const sp_user_suggests = await prisma.sp_user_suggests.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sp_user_suggestsUpdateManyArgs>(args: SelectSubset<T, sp_user_suggestsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sp_user_suggests.
     * @param {sp_user_suggestsUpsertArgs} args - Arguments to update or create a Sp_user_suggests.
     * @example
     * // Update or create a Sp_user_suggests
     * const sp_user_suggests = await prisma.sp_user_suggests.upsert({
     *   create: {
     *     // ... data to create a Sp_user_suggests
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sp_user_suggests we want to update
     *   }
     * })
     */
    upsert<T extends sp_user_suggestsUpsertArgs>(args: SelectSubset<T, sp_user_suggestsUpsertArgs<ExtArgs>>): Prisma__sp_user_suggestsClient<$Result.GetResult<Prisma.$sp_user_suggestsPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Sp_user_suggests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_user_suggestsCountArgs} args - Arguments to filter Sp_user_suggests to count.
     * @example
     * // Count the number of Sp_user_suggests
     * const count = await prisma.sp_user_suggests.count({
     *   where: {
     *     // ... the filter for the Sp_user_suggests we want to count
     *   }
     * })
    **/
    count<T extends sp_user_suggestsCountArgs>(
      args?: Subset<T, sp_user_suggestsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sp_user_suggestsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sp_user_suggests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sp_user_suggestsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sp_user_suggestsAggregateArgs>(args: Subset<T, Sp_user_suggestsAggregateArgs>): Prisma.PrismaPromise<GetSp_user_suggestsAggregateType<T>>

    /**
     * Group by Sp_user_suggests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_user_suggestsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sp_user_suggestsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sp_user_suggestsGroupByArgs['orderBy'] }
        : { orderBy?: sp_user_suggestsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sp_user_suggestsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSp_user_suggestsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sp_user_suggests model
   */
  readonly fields: sp_user_suggestsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sp_user_suggests.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sp_user_suggestsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sp_user_suggests model
   */ 
  interface sp_user_suggestsFieldRefs {
    readonly id: FieldRef<"sp_user_suggests", 'BigInt'>
    readonly user_id: FieldRef<"sp_user_suggests", 'BigInt'>
    readonly title: FieldRef<"sp_user_suggests", 'String'>
    readonly content: FieldRef<"sp_user_suggests", 'String'>
    readonly created_at: FieldRef<"sp_user_suggests", 'DateTime'>
    readonly updated_at: FieldRef<"sp_user_suggests", 'DateTime'>
    readonly deleted_at: FieldRef<"sp_user_suggests", 'DateTime'>
    readonly email: FieldRef<"sp_user_suggests", 'String'>
  }
    

  // Custom InputTypes
  /**
   * sp_user_suggests findUnique
   */
  export type sp_user_suggestsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_suggests
     */
    select?: sp_user_suggestsSelect<ExtArgs> | null
    /**
     * Filter, which sp_user_suggests to fetch.
     */
    where: sp_user_suggestsWhereUniqueInput
  }

  /**
   * sp_user_suggests findUniqueOrThrow
   */
  export type sp_user_suggestsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_suggests
     */
    select?: sp_user_suggestsSelect<ExtArgs> | null
    /**
     * Filter, which sp_user_suggests to fetch.
     */
    where: sp_user_suggestsWhereUniqueInput
  }

  /**
   * sp_user_suggests findFirst
   */
  export type sp_user_suggestsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_suggests
     */
    select?: sp_user_suggestsSelect<ExtArgs> | null
    /**
     * Filter, which sp_user_suggests to fetch.
     */
    where?: sp_user_suggestsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_user_suggests to fetch.
     */
    orderBy?: sp_user_suggestsOrderByWithRelationInput | sp_user_suggestsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_user_suggests.
     */
    cursor?: sp_user_suggestsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_user_suggests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_user_suggests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_user_suggests.
     */
    distinct?: Sp_user_suggestsScalarFieldEnum | Sp_user_suggestsScalarFieldEnum[]
  }

  /**
   * sp_user_suggests findFirstOrThrow
   */
  export type sp_user_suggestsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_suggests
     */
    select?: sp_user_suggestsSelect<ExtArgs> | null
    /**
     * Filter, which sp_user_suggests to fetch.
     */
    where?: sp_user_suggestsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_user_suggests to fetch.
     */
    orderBy?: sp_user_suggestsOrderByWithRelationInput | sp_user_suggestsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_user_suggests.
     */
    cursor?: sp_user_suggestsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_user_suggests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_user_suggests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_user_suggests.
     */
    distinct?: Sp_user_suggestsScalarFieldEnum | Sp_user_suggestsScalarFieldEnum[]
  }

  /**
   * sp_user_suggests findMany
   */
  export type sp_user_suggestsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_suggests
     */
    select?: sp_user_suggestsSelect<ExtArgs> | null
    /**
     * Filter, which sp_user_suggests to fetch.
     */
    where?: sp_user_suggestsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_user_suggests to fetch.
     */
    orderBy?: sp_user_suggestsOrderByWithRelationInput | sp_user_suggestsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sp_user_suggests.
     */
    cursor?: sp_user_suggestsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_user_suggests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_user_suggests.
     */
    skip?: number
    distinct?: Sp_user_suggestsScalarFieldEnum | Sp_user_suggestsScalarFieldEnum[]
  }

  /**
   * sp_user_suggests create
   */
  export type sp_user_suggestsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_suggests
     */
    select?: sp_user_suggestsSelect<ExtArgs> | null
    /**
     * The data needed to create a sp_user_suggests.
     */
    data: XOR<sp_user_suggestsCreateInput, sp_user_suggestsUncheckedCreateInput>
  }

  /**
   * sp_user_suggests createMany
   */
  export type sp_user_suggestsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sp_user_suggests.
     */
    data: sp_user_suggestsCreateManyInput | sp_user_suggestsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sp_user_suggests update
   */
  export type sp_user_suggestsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_suggests
     */
    select?: sp_user_suggestsSelect<ExtArgs> | null
    /**
     * The data needed to update a sp_user_suggests.
     */
    data: XOR<sp_user_suggestsUpdateInput, sp_user_suggestsUncheckedUpdateInput>
    /**
     * Choose, which sp_user_suggests to update.
     */
    where: sp_user_suggestsWhereUniqueInput
  }

  /**
   * sp_user_suggests updateMany
   */
  export type sp_user_suggestsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sp_user_suggests.
     */
    data: XOR<sp_user_suggestsUpdateManyMutationInput, sp_user_suggestsUncheckedUpdateManyInput>
    /**
     * Filter which sp_user_suggests to update
     */
    where?: sp_user_suggestsWhereInput
  }

  /**
   * sp_user_suggests upsert
   */
  export type sp_user_suggestsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_suggests
     */
    select?: sp_user_suggestsSelect<ExtArgs> | null
    /**
     * The filter to search for the sp_user_suggests to update in case it exists.
     */
    where: sp_user_suggestsWhereUniqueInput
    /**
     * In case the sp_user_suggests found by the `where` argument doesn't exist, create a new sp_user_suggests with this data.
     */
    create: XOR<sp_user_suggestsCreateInput, sp_user_suggestsUncheckedCreateInput>
    /**
     * In case the sp_user_suggests was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sp_user_suggestsUpdateInput, sp_user_suggestsUncheckedUpdateInput>
  }

  /**
   * sp_user_suggests delete
   */
  export type sp_user_suggestsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_suggests
     */
    select?: sp_user_suggestsSelect<ExtArgs> | null
    /**
     * Filter which sp_user_suggests to delete.
     */
    where: sp_user_suggestsWhereUniqueInput
  }

  /**
   * sp_user_suggests deleteMany
   */
  export type sp_user_suggestsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_user_suggests to delete
     */
    where?: sp_user_suggestsWhereInput
  }

  /**
   * sp_user_suggests without action
   */
  export type sp_user_suggestsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_user_suggests
     */
    select?: sp_user_suggestsSelect<ExtArgs> | null
  }


  /**
   * Model sp_users
   */

  export type AggregateSp_users = {
    _count: Sp_usersCountAggregateOutputType | null
    _avg: Sp_usersAvgAggregateOutputType | null
    _sum: Sp_usersSumAggregateOutputType | null
    _min: Sp_usersMinAggregateOutputType | null
    _max: Sp_usersMaxAggregateOutputType | null
  }

  export type Sp_usersAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
    bonus: number | null
    coins: number | null
    age: number | null
    gender: number | null
    login_type: number | null
    is_disable: number | null
  }

  export type Sp_usersSumAggregateOutputType = {
    id: bigint | null
    user_id: bigint | null
    bonus: number | null
    coins: number | null
    age: number | null
    gender: number | null
    login_type: number | null
    is_disable: number | null
  }

  export type Sp_usersMinAggregateOutputType = {
    id: bigint | null
    user_id: bigint | null
    open_id: string | null
    bonus: number | null
    coins: number | null
    email: string | null
    avatar: string | null
    nickname: string | null
    age: number | null
    gender: number | null
    login_type: number | null
    last_login_time: Date | null
    register_ip: string | null
    login_ip: string | null
    register_country: string | null
    login_country: string | null
    register_dev_no: string | null
    login_dev_no: string | null
    register_os_type: boolean | null
    login_os_type: boolean | null
    is_disable: number | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_usersMaxAggregateOutputType = {
    id: bigint | null
    user_id: bigint | null
    open_id: string | null
    bonus: number | null
    coins: number | null
    email: string | null
    avatar: string | null
    nickname: string | null
    age: number | null
    gender: number | null
    login_type: number | null
    last_login_time: Date | null
    register_ip: string | null
    login_ip: string | null
    register_country: string | null
    login_country: string | null
    register_dev_no: string | null
    login_dev_no: string | null
    register_os_type: boolean | null
    login_os_type: boolean | null
    is_disable: number | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_usersCountAggregateOutputType = {
    id: number
    user_id: number
    open_id: number
    bonus: number
    coins: number
    email: number
    avatar: number
    nickname: number
    age: number
    gender: number
    login_type: number
    last_login_time: number
    register_ip: number
    login_ip: number
    register_country: number
    login_country: number
    register_dev_no: number
    login_dev_no: number
    register_os_type: number
    login_os_type: number
    is_disable: number
    created_at: number
    updated_at: number
    deleted_at: number
    _all: number
  }


  export type Sp_usersAvgAggregateInputType = {
    id?: true
    user_id?: true
    bonus?: true
    coins?: true
    age?: true
    gender?: true
    login_type?: true
    is_disable?: true
  }

  export type Sp_usersSumAggregateInputType = {
    id?: true
    user_id?: true
    bonus?: true
    coins?: true
    age?: true
    gender?: true
    login_type?: true
    is_disable?: true
  }

  export type Sp_usersMinAggregateInputType = {
    id?: true
    user_id?: true
    open_id?: true
    bonus?: true
    coins?: true
    email?: true
    avatar?: true
    nickname?: true
    age?: true
    gender?: true
    login_type?: true
    last_login_time?: true
    register_ip?: true
    login_ip?: true
    register_country?: true
    login_country?: true
    register_dev_no?: true
    login_dev_no?: true
    register_os_type?: true
    login_os_type?: true
    is_disable?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sp_usersMaxAggregateInputType = {
    id?: true
    user_id?: true
    open_id?: true
    bonus?: true
    coins?: true
    email?: true
    avatar?: true
    nickname?: true
    age?: true
    gender?: true
    login_type?: true
    last_login_time?: true
    register_ip?: true
    login_ip?: true
    register_country?: true
    login_country?: true
    register_dev_no?: true
    login_dev_no?: true
    register_os_type?: true
    login_os_type?: true
    is_disable?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sp_usersCountAggregateInputType = {
    id?: true
    user_id?: true
    open_id?: true
    bonus?: true
    coins?: true
    email?: true
    avatar?: true
    nickname?: true
    age?: true
    gender?: true
    login_type?: true
    last_login_time?: true
    register_ip?: true
    login_ip?: true
    register_country?: true
    login_country?: true
    register_dev_no?: true
    login_dev_no?: true
    register_os_type?: true
    login_os_type?: true
    is_disable?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    _all?: true
  }

  export type Sp_usersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_users to aggregate.
     */
    where?: sp_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_users to fetch.
     */
    orderBy?: sp_usersOrderByWithRelationInput | sp_usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sp_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sp_users
    **/
    _count?: true | Sp_usersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sp_usersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sp_usersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sp_usersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sp_usersMaxAggregateInputType
  }

  export type GetSp_usersAggregateType<T extends Sp_usersAggregateArgs> = {
        [P in keyof T & keyof AggregateSp_users]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSp_users[P]>
      : GetScalarType<T[P], AggregateSp_users[P]>
  }




  export type sp_usersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sp_usersWhereInput
    orderBy?: sp_usersOrderByWithAggregationInput | sp_usersOrderByWithAggregationInput[]
    by: Sp_usersScalarFieldEnum[] | Sp_usersScalarFieldEnum
    having?: sp_usersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sp_usersCountAggregateInputType | true
    _avg?: Sp_usersAvgAggregateInputType
    _sum?: Sp_usersSumAggregateInputType
    _min?: Sp_usersMinAggregateInputType
    _max?: Sp_usersMaxAggregateInputType
  }

  export type Sp_usersGroupByOutputType = {
    id: bigint
    user_id: bigint
    open_id: string | null
    bonus: number | null
    coins: number
    email: string | null
    avatar: string | null
    nickname: string | null
    age: number
    gender: number
    login_type: number
    last_login_time: Date | null
    register_ip: string | null
    login_ip: string | null
    register_country: string | null
    login_country: string | null
    register_dev_no: string | null
    login_dev_no: string | null
    register_os_type: boolean | null
    login_os_type: boolean | null
    is_disable: number
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
    _count: Sp_usersCountAggregateOutputType | null
    _avg: Sp_usersAvgAggregateOutputType | null
    _sum: Sp_usersSumAggregateOutputType | null
    _min: Sp_usersMinAggregateOutputType | null
    _max: Sp_usersMaxAggregateOutputType | null
  }

  type GetSp_usersGroupByPayload<T extends sp_usersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sp_usersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sp_usersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sp_usersGroupByOutputType[P]>
            : GetScalarType<T[P], Sp_usersGroupByOutputType[P]>
        }
      >
    >


  export type sp_usersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    open_id?: boolean
    bonus?: boolean
    coins?: boolean
    email?: boolean
    avatar?: boolean
    nickname?: boolean
    age?: boolean
    gender?: boolean
    login_type?: boolean
    last_login_time?: boolean
    register_ip?: boolean
    login_ip?: boolean
    register_country?: boolean
    login_country?: boolean
    register_dev_no?: boolean
    login_dev_no?: boolean
    register_os_type?: boolean
    login_os_type?: boolean
    is_disable?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }, ExtArgs["result"]["sp_users"]>


  export type sp_usersSelectScalar = {
    id?: boolean
    user_id?: boolean
    open_id?: boolean
    bonus?: boolean
    coins?: boolean
    email?: boolean
    avatar?: boolean
    nickname?: boolean
    age?: boolean
    gender?: boolean
    login_type?: boolean
    last_login_time?: boolean
    register_ip?: boolean
    login_ip?: boolean
    register_country?: boolean
    login_country?: boolean
    register_dev_no?: boolean
    login_dev_no?: boolean
    register_os_type?: boolean
    login_os_type?: boolean
    is_disable?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }


  export type $sp_usersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sp_users"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      user_id: bigint
      open_id: string | null
      bonus: number | null
      coins: number
      email: string | null
      avatar: string | null
      nickname: string | null
      age: number
      gender: number
      login_type: number
      last_login_time: Date | null
      register_ip: string | null
      login_ip: string | null
      register_country: string | null
      login_country: string | null
      register_dev_no: string | null
      login_dev_no: string | null
      register_os_type: boolean | null
      login_os_type: boolean | null
      is_disable: number
      created_at: Date | null
      updated_at: Date | null
      deleted_at: Date | null
    }, ExtArgs["result"]["sp_users"]>
    composites: {}
  }

  type sp_usersGetPayload<S extends boolean | null | undefined | sp_usersDefaultArgs> = $Result.GetResult<Prisma.$sp_usersPayload, S>

  type sp_usersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<sp_usersFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Sp_usersCountAggregateInputType | true
    }

  export interface sp_usersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sp_users'], meta: { name: 'sp_users' } }
    /**
     * Find zero or one Sp_users that matches the filter.
     * @param {sp_usersFindUniqueArgs} args - Arguments to find a Sp_users
     * @example
     * // Get one Sp_users
     * const sp_users = await prisma.sp_users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sp_usersFindUniqueArgs>(args: SelectSubset<T, sp_usersFindUniqueArgs<ExtArgs>>): Prisma__sp_usersClient<$Result.GetResult<Prisma.$sp_usersPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Sp_users that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {sp_usersFindUniqueOrThrowArgs} args - Arguments to find a Sp_users
     * @example
     * // Get one Sp_users
     * const sp_users = await prisma.sp_users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sp_usersFindUniqueOrThrowArgs>(args: SelectSubset<T, sp_usersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sp_usersClient<$Result.GetResult<Prisma.$sp_usersPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Sp_users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_usersFindFirstArgs} args - Arguments to find a Sp_users
     * @example
     * // Get one Sp_users
     * const sp_users = await prisma.sp_users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sp_usersFindFirstArgs>(args?: SelectSubset<T, sp_usersFindFirstArgs<ExtArgs>>): Prisma__sp_usersClient<$Result.GetResult<Prisma.$sp_usersPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Sp_users that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_usersFindFirstOrThrowArgs} args - Arguments to find a Sp_users
     * @example
     * // Get one Sp_users
     * const sp_users = await prisma.sp_users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sp_usersFindFirstOrThrowArgs>(args?: SelectSubset<T, sp_usersFindFirstOrThrowArgs<ExtArgs>>): Prisma__sp_usersClient<$Result.GetResult<Prisma.$sp_usersPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Sp_users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_usersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sp_users
     * const sp_users = await prisma.sp_users.findMany()
     * 
     * // Get first 10 Sp_users
     * const sp_users = await prisma.sp_users.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sp_usersWithIdOnly = await prisma.sp_users.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sp_usersFindManyArgs>(args?: SelectSubset<T, sp_usersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sp_usersPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Sp_users.
     * @param {sp_usersCreateArgs} args - Arguments to create a Sp_users.
     * @example
     * // Create one Sp_users
     * const Sp_users = await prisma.sp_users.create({
     *   data: {
     *     // ... data to create a Sp_users
     *   }
     * })
     * 
     */
    create<T extends sp_usersCreateArgs>(args: SelectSubset<T, sp_usersCreateArgs<ExtArgs>>): Prisma__sp_usersClient<$Result.GetResult<Prisma.$sp_usersPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Sp_users.
     * @param {sp_usersCreateManyArgs} args - Arguments to create many Sp_users.
     * @example
     * // Create many Sp_users
     * const sp_users = await prisma.sp_users.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sp_usersCreateManyArgs>(args?: SelectSubset<T, sp_usersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sp_users.
     * @param {sp_usersDeleteArgs} args - Arguments to delete one Sp_users.
     * @example
     * // Delete one Sp_users
     * const Sp_users = await prisma.sp_users.delete({
     *   where: {
     *     // ... filter to delete one Sp_users
     *   }
     * })
     * 
     */
    delete<T extends sp_usersDeleteArgs>(args: SelectSubset<T, sp_usersDeleteArgs<ExtArgs>>): Prisma__sp_usersClient<$Result.GetResult<Prisma.$sp_usersPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Sp_users.
     * @param {sp_usersUpdateArgs} args - Arguments to update one Sp_users.
     * @example
     * // Update one Sp_users
     * const sp_users = await prisma.sp_users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sp_usersUpdateArgs>(args: SelectSubset<T, sp_usersUpdateArgs<ExtArgs>>): Prisma__sp_usersClient<$Result.GetResult<Prisma.$sp_usersPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Sp_users.
     * @param {sp_usersDeleteManyArgs} args - Arguments to filter Sp_users to delete.
     * @example
     * // Delete a few Sp_users
     * const { count } = await prisma.sp_users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sp_usersDeleteManyArgs>(args?: SelectSubset<T, sp_usersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sp_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_usersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sp_users
     * const sp_users = await prisma.sp_users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sp_usersUpdateManyArgs>(args: SelectSubset<T, sp_usersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sp_users.
     * @param {sp_usersUpsertArgs} args - Arguments to update or create a Sp_users.
     * @example
     * // Update or create a Sp_users
     * const sp_users = await prisma.sp_users.upsert({
     *   create: {
     *     // ... data to create a Sp_users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sp_users we want to update
     *   }
     * })
     */
    upsert<T extends sp_usersUpsertArgs>(args: SelectSubset<T, sp_usersUpsertArgs<ExtArgs>>): Prisma__sp_usersClient<$Result.GetResult<Prisma.$sp_usersPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Sp_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_usersCountArgs} args - Arguments to filter Sp_users to count.
     * @example
     * // Count the number of Sp_users
     * const count = await prisma.sp_users.count({
     *   where: {
     *     // ... the filter for the Sp_users we want to count
     *   }
     * })
    **/
    count<T extends sp_usersCountArgs>(
      args?: Subset<T, sp_usersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sp_usersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sp_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sp_usersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sp_usersAggregateArgs>(args: Subset<T, Sp_usersAggregateArgs>): Prisma.PrismaPromise<GetSp_usersAggregateType<T>>

    /**
     * Group by Sp_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_usersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sp_usersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sp_usersGroupByArgs['orderBy'] }
        : { orderBy?: sp_usersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sp_usersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSp_usersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sp_users model
   */
  readonly fields: sp_usersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sp_users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sp_usersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sp_users model
   */ 
  interface sp_usersFieldRefs {
    readonly id: FieldRef<"sp_users", 'BigInt'>
    readonly user_id: FieldRef<"sp_users", 'BigInt'>
    readonly open_id: FieldRef<"sp_users", 'String'>
    readonly bonus: FieldRef<"sp_users", 'Int'>
    readonly coins: FieldRef<"sp_users", 'Int'>
    readonly email: FieldRef<"sp_users", 'String'>
    readonly avatar: FieldRef<"sp_users", 'String'>
    readonly nickname: FieldRef<"sp_users", 'String'>
    readonly age: FieldRef<"sp_users", 'Int'>
    readonly gender: FieldRef<"sp_users", 'Int'>
    readonly login_type: FieldRef<"sp_users", 'Int'>
    readonly last_login_time: FieldRef<"sp_users", 'DateTime'>
    readonly register_ip: FieldRef<"sp_users", 'String'>
    readonly login_ip: FieldRef<"sp_users", 'String'>
    readonly register_country: FieldRef<"sp_users", 'String'>
    readonly login_country: FieldRef<"sp_users", 'String'>
    readonly register_dev_no: FieldRef<"sp_users", 'String'>
    readonly login_dev_no: FieldRef<"sp_users", 'String'>
    readonly register_os_type: FieldRef<"sp_users", 'Boolean'>
    readonly login_os_type: FieldRef<"sp_users", 'Boolean'>
    readonly is_disable: FieldRef<"sp_users", 'Int'>
    readonly created_at: FieldRef<"sp_users", 'DateTime'>
    readonly updated_at: FieldRef<"sp_users", 'DateTime'>
    readonly deleted_at: FieldRef<"sp_users", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sp_users findUnique
   */
  export type sp_usersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_users
     */
    select?: sp_usersSelect<ExtArgs> | null
    /**
     * Filter, which sp_users to fetch.
     */
    where: sp_usersWhereUniqueInput
  }

  /**
   * sp_users findUniqueOrThrow
   */
  export type sp_usersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_users
     */
    select?: sp_usersSelect<ExtArgs> | null
    /**
     * Filter, which sp_users to fetch.
     */
    where: sp_usersWhereUniqueInput
  }

  /**
   * sp_users findFirst
   */
  export type sp_usersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_users
     */
    select?: sp_usersSelect<ExtArgs> | null
    /**
     * Filter, which sp_users to fetch.
     */
    where?: sp_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_users to fetch.
     */
    orderBy?: sp_usersOrderByWithRelationInput | sp_usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_users.
     */
    cursor?: sp_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_users.
     */
    distinct?: Sp_usersScalarFieldEnum | Sp_usersScalarFieldEnum[]
  }

  /**
   * sp_users findFirstOrThrow
   */
  export type sp_usersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_users
     */
    select?: sp_usersSelect<ExtArgs> | null
    /**
     * Filter, which sp_users to fetch.
     */
    where?: sp_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_users to fetch.
     */
    orderBy?: sp_usersOrderByWithRelationInput | sp_usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_users.
     */
    cursor?: sp_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_users.
     */
    distinct?: Sp_usersScalarFieldEnum | Sp_usersScalarFieldEnum[]
  }

  /**
   * sp_users findMany
   */
  export type sp_usersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_users
     */
    select?: sp_usersSelect<ExtArgs> | null
    /**
     * Filter, which sp_users to fetch.
     */
    where?: sp_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_users to fetch.
     */
    orderBy?: sp_usersOrderByWithRelationInput | sp_usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sp_users.
     */
    cursor?: sp_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_users.
     */
    skip?: number
    distinct?: Sp_usersScalarFieldEnum | Sp_usersScalarFieldEnum[]
  }

  /**
   * sp_users create
   */
  export type sp_usersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_users
     */
    select?: sp_usersSelect<ExtArgs> | null
    /**
     * The data needed to create a sp_users.
     */
    data: XOR<sp_usersCreateInput, sp_usersUncheckedCreateInput>
  }

  /**
   * sp_users createMany
   */
  export type sp_usersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sp_users.
     */
    data: sp_usersCreateManyInput | sp_usersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sp_users update
   */
  export type sp_usersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_users
     */
    select?: sp_usersSelect<ExtArgs> | null
    /**
     * The data needed to update a sp_users.
     */
    data: XOR<sp_usersUpdateInput, sp_usersUncheckedUpdateInput>
    /**
     * Choose, which sp_users to update.
     */
    where: sp_usersWhereUniqueInput
  }

  /**
   * sp_users updateMany
   */
  export type sp_usersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sp_users.
     */
    data: XOR<sp_usersUpdateManyMutationInput, sp_usersUncheckedUpdateManyInput>
    /**
     * Filter which sp_users to update
     */
    where?: sp_usersWhereInput
  }

  /**
   * sp_users upsert
   */
  export type sp_usersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_users
     */
    select?: sp_usersSelect<ExtArgs> | null
    /**
     * The filter to search for the sp_users to update in case it exists.
     */
    where: sp_usersWhereUniqueInput
    /**
     * In case the sp_users found by the `where` argument doesn't exist, create a new sp_users with this data.
     */
    create: XOR<sp_usersCreateInput, sp_usersUncheckedCreateInput>
    /**
     * In case the sp_users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sp_usersUpdateInput, sp_usersUncheckedUpdateInput>
  }

  /**
   * sp_users delete
   */
  export type sp_usersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_users
     */
    select?: sp_usersSelect<ExtArgs> | null
    /**
     * Filter which sp_users to delete.
     */
    where: sp_usersWhereUniqueInput
  }

  /**
   * sp_users deleteMany
   */
  export type sp_usersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_users to delete
     */
    where?: sp_usersWhereInput
  }

  /**
   * sp_users without action
   */
  export type sp_usersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_users
     */
    select?: sp_usersSelect<ExtArgs> | null
  }


  /**
   * Model sp_video_categories
   */

  export type AggregateSp_video_categories = {
    _count: Sp_video_categoriesCountAggregateOutputType | null
    _avg: Sp_video_categoriesAvgAggregateOutputType | null
    _sum: Sp_video_categoriesSumAggregateOutputType | null
    _min: Sp_video_categoriesMinAggregateOutputType | null
    _max: Sp_video_categoriesMaxAggregateOutputType | null
  }

  export type Sp_video_categoriesAvgAggregateOutputType = {
    id: number | null
  }

  export type Sp_video_categoriesSumAggregateOutputType = {
    id: number | null
  }

  export type Sp_video_categoriesMinAggregateOutputType = {
    id: number | null
    name: string | null
    desc: string | null
    status: boolean | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_video_categoriesMaxAggregateOutputType = {
    id: number | null
    name: string | null
    desc: string | null
    status: boolean | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_video_categoriesCountAggregateOutputType = {
    id: number
    name: number
    desc: number
    status: number
    created_at: number
    updated_at: number
    deleted_at: number
    _all: number
  }


  export type Sp_video_categoriesAvgAggregateInputType = {
    id?: true
  }

  export type Sp_video_categoriesSumAggregateInputType = {
    id?: true
  }

  export type Sp_video_categoriesMinAggregateInputType = {
    id?: true
    name?: true
    desc?: true
    status?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sp_video_categoriesMaxAggregateInputType = {
    id?: true
    name?: true
    desc?: true
    status?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sp_video_categoriesCountAggregateInputType = {
    id?: true
    name?: true
    desc?: true
    status?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    _all?: true
  }

  export type Sp_video_categoriesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_video_categories to aggregate.
     */
    where?: sp_video_categoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_video_categories to fetch.
     */
    orderBy?: sp_video_categoriesOrderByWithRelationInput | sp_video_categoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sp_video_categoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_video_categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_video_categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sp_video_categories
    **/
    _count?: true | Sp_video_categoriesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sp_video_categoriesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sp_video_categoriesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sp_video_categoriesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sp_video_categoriesMaxAggregateInputType
  }

  export type GetSp_video_categoriesAggregateType<T extends Sp_video_categoriesAggregateArgs> = {
        [P in keyof T & keyof AggregateSp_video_categories]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSp_video_categories[P]>
      : GetScalarType<T[P], AggregateSp_video_categories[P]>
  }




  export type sp_video_categoriesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sp_video_categoriesWhereInput
    orderBy?: sp_video_categoriesOrderByWithAggregationInput | sp_video_categoriesOrderByWithAggregationInput[]
    by: Sp_video_categoriesScalarFieldEnum[] | Sp_video_categoriesScalarFieldEnum
    having?: sp_video_categoriesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sp_video_categoriesCountAggregateInputType | true
    _avg?: Sp_video_categoriesAvgAggregateInputType
    _sum?: Sp_video_categoriesSumAggregateInputType
    _min?: Sp_video_categoriesMinAggregateInputType
    _max?: Sp_video_categoriesMaxAggregateInputType
  }

  export type Sp_video_categoriesGroupByOutputType = {
    id: number
    name: string
    desc: string
    status: boolean | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
    _count: Sp_video_categoriesCountAggregateOutputType | null
    _avg: Sp_video_categoriesAvgAggregateOutputType | null
    _sum: Sp_video_categoriesSumAggregateOutputType | null
    _min: Sp_video_categoriesMinAggregateOutputType | null
    _max: Sp_video_categoriesMaxAggregateOutputType | null
  }

  type GetSp_video_categoriesGroupByPayload<T extends sp_video_categoriesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sp_video_categoriesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sp_video_categoriesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sp_video_categoriesGroupByOutputType[P]>
            : GetScalarType<T[P], Sp_video_categoriesGroupByOutputType[P]>
        }
      >
    >


  export type sp_video_categoriesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    desc?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }, ExtArgs["result"]["sp_video_categories"]>


  export type sp_video_categoriesSelectScalar = {
    id?: boolean
    name?: boolean
    desc?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }


  export type $sp_video_categoriesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sp_video_categories"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      desc: string
      status: boolean | null
      created_at: Date | null
      updated_at: Date | null
      deleted_at: Date | null
    }, ExtArgs["result"]["sp_video_categories"]>
    composites: {}
  }

  type sp_video_categoriesGetPayload<S extends boolean | null | undefined | sp_video_categoriesDefaultArgs> = $Result.GetResult<Prisma.$sp_video_categoriesPayload, S>

  type sp_video_categoriesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<sp_video_categoriesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Sp_video_categoriesCountAggregateInputType | true
    }

  export interface sp_video_categoriesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sp_video_categories'], meta: { name: 'sp_video_categories' } }
    /**
     * Find zero or one Sp_video_categories that matches the filter.
     * @param {sp_video_categoriesFindUniqueArgs} args - Arguments to find a Sp_video_categories
     * @example
     * // Get one Sp_video_categories
     * const sp_video_categories = await prisma.sp_video_categories.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sp_video_categoriesFindUniqueArgs>(args: SelectSubset<T, sp_video_categoriesFindUniqueArgs<ExtArgs>>): Prisma__sp_video_categoriesClient<$Result.GetResult<Prisma.$sp_video_categoriesPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Sp_video_categories that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {sp_video_categoriesFindUniqueOrThrowArgs} args - Arguments to find a Sp_video_categories
     * @example
     * // Get one Sp_video_categories
     * const sp_video_categories = await prisma.sp_video_categories.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sp_video_categoriesFindUniqueOrThrowArgs>(args: SelectSubset<T, sp_video_categoriesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sp_video_categoriesClient<$Result.GetResult<Prisma.$sp_video_categoriesPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Sp_video_categories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_video_categoriesFindFirstArgs} args - Arguments to find a Sp_video_categories
     * @example
     * // Get one Sp_video_categories
     * const sp_video_categories = await prisma.sp_video_categories.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sp_video_categoriesFindFirstArgs>(args?: SelectSubset<T, sp_video_categoriesFindFirstArgs<ExtArgs>>): Prisma__sp_video_categoriesClient<$Result.GetResult<Prisma.$sp_video_categoriesPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Sp_video_categories that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_video_categoriesFindFirstOrThrowArgs} args - Arguments to find a Sp_video_categories
     * @example
     * // Get one Sp_video_categories
     * const sp_video_categories = await prisma.sp_video_categories.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sp_video_categoriesFindFirstOrThrowArgs>(args?: SelectSubset<T, sp_video_categoriesFindFirstOrThrowArgs<ExtArgs>>): Prisma__sp_video_categoriesClient<$Result.GetResult<Prisma.$sp_video_categoriesPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Sp_video_categories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_video_categoriesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sp_video_categories
     * const sp_video_categories = await prisma.sp_video_categories.findMany()
     * 
     * // Get first 10 Sp_video_categories
     * const sp_video_categories = await prisma.sp_video_categories.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sp_video_categoriesWithIdOnly = await prisma.sp_video_categories.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sp_video_categoriesFindManyArgs>(args?: SelectSubset<T, sp_video_categoriesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sp_video_categoriesPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Sp_video_categories.
     * @param {sp_video_categoriesCreateArgs} args - Arguments to create a Sp_video_categories.
     * @example
     * // Create one Sp_video_categories
     * const Sp_video_categories = await prisma.sp_video_categories.create({
     *   data: {
     *     // ... data to create a Sp_video_categories
     *   }
     * })
     * 
     */
    create<T extends sp_video_categoriesCreateArgs>(args: SelectSubset<T, sp_video_categoriesCreateArgs<ExtArgs>>): Prisma__sp_video_categoriesClient<$Result.GetResult<Prisma.$sp_video_categoriesPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Sp_video_categories.
     * @param {sp_video_categoriesCreateManyArgs} args - Arguments to create many Sp_video_categories.
     * @example
     * // Create many Sp_video_categories
     * const sp_video_categories = await prisma.sp_video_categories.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sp_video_categoriesCreateManyArgs>(args?: SelectSubset<T, sp_video_categoriesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sp_video_categories.
     * @param {sp_video_categoriesDeleteArgs} args - Arguments to delete one Sp_video_categories.
     * @example
     * // Delete one Sp_video_categories
     * const Sp_video_categories = await prisma.sp_video_categories.delete({
     *   where: {
     *     // ... filter to delete one Sp_video_categories
     *   }
     * })
     * 
     */
    delete<T extends sp_video_categoriesDeleteArgs>(args: SelectSubset<T, sp_video_categoriesDeleteArgs<ExtArgs>>): Prisma__sp_video_categoriesClient<$Result.GetResult<Prisma.$sp_video_categoriesPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Sp_video_categories.
     * @param {sp_video_categoriesUpdateArgs} args - Arguments to update one Sp_video_categories.
     * @example
     * // Update one Sp_video_categories
     * const sp_video_categories = await prisma.sp_video_categories.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sp_video_categoriesUpdateArgs>(args: SelectSubset<T, sp_video_categoriesUpdateArgs<ExtArgs>>): Prisma__sp_video_categoriesClient<$Result.GetResult<Prisma.$sp_video_categoriesPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Sp_video_categories.
     * @param {sp_video_categoriesDeleteManyArgs} args - Arguments to filter Sp_video_categories to delete.
     * @example
     * // Delete a few Sp_video_categories
     * const { count } = await prisma.sp_video_categories.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sp_video_categoriesDeleteManyArgs>(args?: SelectSubset<T, sp_video_categoriesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sp_video_categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_video_categoriesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sp_video_categories
     * const sp_video_categories = await prisma.sp_video_categories.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sp_video_categoriesUpdateManyArgs>(args: SelectSubset<T, sp_video_categoriesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sp_video_categories.
     * @param {sp_video_categoriesUpsertArgs} args - Arguments to update or create a Sp_video_categories.
     * @example
     * // Update or create a Sp_video_categories
     * const sp_video_categories = await prisma.sp_video_categories.upsert({
     *   create: {
     *     // ... data to create a Sp_video_categories
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sp_video_categories we want to update
     *   }
     * })
     */
    upsert<T extends sp_video_categoriesUpsertArgs>(args: SelectSubset<T, sp_video_categoriesUpsertArgs<ExtArgs>>): Prisma__sp_video_categoriesClient<$Result.GetResult<Prisma.$sp_video_categoriesPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Sp_video_categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_video_categoriesCountArgs} args - Arguments to filter Sp_video_categories to count.
     * @example
     * // Count the number of Sp_video_categories
     * const count = await prisma.sp_video_categories.count({
     *   where: {
     *     // ... the filter for the Sp_video_categories we want to count
     *   }
     * })
    **/
    count<T extends sp_video_categoriesCountArgs>(
      args?: Subset<T, sp_video_categoriesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sp_video_categoriesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sp_video_categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sp_video_categoriesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sp_video_categoriesAggregateArgs>(args: Subset<T, Sp_video_categoriesAggregateArgs>): Prisma.PrismaPromise<GetSp_video_categoriesAggregateType<T>>

    /**
     * Group by Sp_video_categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_video_categoriesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sp_video_categoriesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sp_video_categoriesGroupByArgs['orderBy'] }
        : { orderBy?: sp_video_categoriesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sp_video_categoriesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSp_video_categoriesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sp_video_categories model
   */
  readonly fields: sp_video_categoriesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sp_video_categories.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sp_video_categoriesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sp_video_categories model
   */ 
  interface sp_video_categoriesFieldRefs {
    readonly id: FieldRef<"sp_video_categories", 'Int'>
    readonly name: FieldRef<"sp_video_categories", 'String'>
    readonly desc: FieldRef<"sp_video_categories", 'String'>
    readonly status: FieldRef<"sp_video_categories", 'Boolean'>
    readonly created_at: FieldRef<"sp_video_categories", 'DateTime'>
    readonly updated_at: FieldRef<"sp_video_categories", 'DateTime'>
    readonly deleted_at: FieldRef<"sp_video_categories", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sp_video_categories findUnique
   */
  export type sp_video_categoriesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_video_categories
     */
    select?: sp_video_categoriesSelect<ExtArgs> | null
    /**
     * Filter, which sp_video_categories to fetch.
     */
    where: sp_video_categoriesWhereUniqueInput
  }

  /**
   * sp_video_categories findUniqueOrThrow
   */
  export type sp_video_categoriesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_video_categories
     */
    select?: sp_video_categoriesSelect<ExtArgs> | null
    /**
     * Filter, which sp_video_categories to fetch.
     */
    where: sp_video_categoriesWhereUniqueInput
  }

  /**
   * sp_video_categories findFirst
   */
  export type sp_video_categoriesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_video_categories
     */
    select?: sp_video_categoriesSelect<ExtArgs> | null
    /**
     * Filter, which sp_video_categories to fetch.
     */
    where?: sp_video_categoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_video_categories to fetch.
     */
    orderBy?: sp_video_categoriesOrderByWithRelationInput | sp_video_categoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_video_categories.
     */
    cursor?: sp_video_categoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_video_categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_video_categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_video_categories.
     */
    distinct?: Sp_video_categoriesScalarFieldEnum | Sp_video_categoriesScalarFieldEnum[]
  }

  /**
   * sp_video_categories findFirstOrThrow
   */
  export type sp_video_categoriesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_video_categories
     */
    select?: sp_video_categoriesSelect<ExtArgs> | null
    /**
     * Filter, which sp_video_categories to fetch.
     */
    where?: sp_video_categoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_video_categories to fetch.
     */
    orderBy?: sp_video_categoriesOrderByWithRelationInput | sp_video_categoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_video_categories.
     */
    cursor?: sp_video_categoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_video_categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_video_categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_video_categories.
     */
    distinct?: Sp_video_categoriesScalarFieldEnum | Sp_video_categoriesScalarFieldEnum[]
  }

  /**
   * sp_video_categories findMany
   */
  export type sp_video_categoriesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_video_categories
     */
    select?: sp_video_categoriesSelect<ExtArgs> | null
    /**
     * Filter, which sp_video_categories to fetch.
     */
    where?: sp_video_categoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_video_categories to fetch.
     */
    orderBy?: sp_video_categoriesOrderByWithRelationInput | sp_video_categoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sp_video_categories.
     */
    cursor?: sp_video_categoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_video_categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_video_categories.
     */
    skip?: number
    distinct?: Sp_video_categoriesScalarFieldEnum | Sp_video_categoriesScalarFieldEnum[]
  }

  /**
   * sp_video_categories create
   */
  export type sp_video_categoriesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_video_categories
     */
    select?: sp_video_categoriesSelect<ExtArgs> | null
    /**
     * The data needed to create a sp_video_categories.
     */
    data?: XOR<sp_video_categoriesCreateInput, sp_video_categoriesUncheckedCreateInput>
  }

  /**
   * sp_video_categories createMany
   */
  export type sp_video_categoriesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sp_video_categories.
     */
    data: sp_video_categoriesCreateManyInput | sp_video_categoriesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sp_video_categories update
   */
  export type sp_video_categoriesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_video_categories
     */
    select?: sp_video_categoriesSelect<ExtArgs> | null
    /**
     * The data needed to update a sp_video_categories.
     */
    data: XOR<sp_video_categoriesUpdateInput, sp_video_categoriesUncheckedUpdateInput>
    /**
     * Choose, which sp_video_categories to update.
     */
    where: sp_video_categoriesWhereUniqueInput
  }

  /**
   * sp_video_categories updateMany
   */
  export type sp_video_categoriesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sp_video_categories.
     */
    data: XOR<sp_video_categoriesUpdateManyMutationInput, sp_video_categoriesUncheckedUpdateManyInput>
    /**
     * Filter which sp_video_categories to update
     */
    where?: sp_video_categoriesWhereInput
  }

  /**
   * sp_video_categories upsert
   */
  export type sp_video_categoriesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_video_categories
     */
    select?: sp_video_categoriesSelect<ExtArgs> | null
    /**
     * The filter to search for the sp_video_categories to update in case it exists.
     */
    where: sp_video_categoriesWhereUniqueInput
    /**
     * In case the sp_video_categories found by the `where` argument doesn't exist, create a new sp_video_categories with this data.
     */
    create: XOR<sp_video_categoriesCreateInput, sp_video_categoriesUncheckedCreateInput>
    /**
     * In case the sp_video_categories was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sp_video_categoriesUpdateInput, sp_video_categoriesUncheckedUpdateInput>
  }

  /**
   * sp_video_categories delete
   */
  export type sp_video_categoriesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_video_categories
     */
    select?: sp_video_categoriesSelect<ExtArgs> | null
    /**
     * Filter which sp_video_categories to delete.
     */
    where: sp_video_categoriesWhereUniqueInput
  }

  /**
   * sp_video_categories deleteMany
   */
  export type sp_video_categoriesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_video_categories to delete
     */
    where?: sp_video_categoriesWhereInput
  }

  /**
   * sp_video_categories without action
   */
  export type sp_video_categoriesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_video_categories
     */
    select?: sp_video_categoriesSelect<ExtArgs> | null
  }


  /**
   * Model sp_video_group_categories
   */

  export type AggregateSp_video_group_categories = {
    _count: Sp_video_group_categoriesCountAggregateOutputType | null
    _avg: Sp_video_group_categoriesAvgAggregateOutputType | null
    _sum: Sp_video_group_categoriesSumAggregateOutputType | null
    _min: Sp_video_group_categoriesMinAggregateOutputType | null
    _max: Sp_video_group_categoriesMaxAggregateOutputType | null
  }

  export type Sp_video_group_categoriesAvgAggregateOutputType = {
    id: number | null
    video_group_id: number | null
    category_id: number | null
  }

  export type Sp_video_group_categoriesSumAggregateOutputType = {
    id: bigint | null
    video_group_id: number | null
    category_id: number | null
  }

  export type Sp_video_group_categoriesMinAggregateOutputType = {
    id: bigint | null
    video_group_id: number | null
    category_id: number | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_video_group_categoriesMaxAggregateOutputType = {
    id: bigint | null
    video_group_id: number | null
    category_id: number | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_video_group_categoriesCountAggregateOutputType = {
    id: number
    video_group_id: number
    category_id: number
    created_at: number
    updated_at: number
    deleted_at: number
    _all: number
  }


  export type Sp_video_group_categoriesAvgAggregateInputType = {
    id?: true
    video_group_id?: true
    category_id?: true
  }

  export type Sp_video_group_categoriesSumAggregateInputType = {
    id?: true
    video_group_id?: true
    category_id?: true
  }

  export type Sp_video_group_categoriesMinAggregateInputType = {
    id?: true
    video_group_id?: true
    category_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sp_video_group_categoriesMaxAggregateInputType = {
    id?: true
    video_group_id?: true
    category_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sp_video_group_categoriesCountAggregateInputType = {
    id?: true
    video_group_id?: true
    category_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    _all?: true
  }

  export type Sp_video_group_categoriesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_video_group_categories to aggregate.
     */
    where?: sp_video_group_categoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_video_group_categories to fetch.
     */
    orderBy?: sp_video_group_categoriesOrderByWithRelationInput | sp_video_group_categoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sp_video_group_categoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_video_group_categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_video_group_categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sp_video_group_categories
    **/
    _count?: true | Sp_video_group_categoriesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sp_video_group_categoriesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sp_video_group_categoriesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sp_video_group_categoriesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sp_video_group_categoriesMaxAggregateInputType
  }

  export type GetSp_video_group_categoriesAggregateType<T extends Sp_video_group_categoriesAggregateArgs> = {
        [P in keyof T & keyof AggregateSp_video_group_categories]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSp_video_group_categories[P]>
      : GetScalarType<T[P], AggregateSp_video_group_categories[P]>
  }




  export type sp_video_group_categoriesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sp_video_group_categoriesWhereInput
    orderBy?: sp_video_group_categoriesOrderByWithAggregationInput | sp_video_group_categoriesOrderByWithAggregationInput[]
    by: Sp_video_group_categoriesScalarFieldEnum[] | Sp_video_group_categoriesScalarFieldEnum
    having?: sp_video_group_categoriesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sp_video_group_categoriesCountAggregateInputType | true
    _avg?: Sp_video_group_categoriesAvgAggregateInputType
    _sum?: Sp_video_group_categoriesSumAggregateInputType
    _min?: Sp_video_group_categoriesMinAggregateInputType
    _max?: Sp_video_group_categoriesMaxAggregateInputType
  }

  export type Sp_video_group_categoriesGroupByOutputType = {
    id: bigint
    video_group_id: number
    category_id: number
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
    _count: Sp_video_group_categoriesCountAggregateOutputType | null
    _avg: Sp_video_group_categoriesAvgAggregateOutputType | null
    _sum: Sp_video_group_categoriesSumAggregateOutputType | null
    _min: Sp_video_group_categoriesMinAggregateOutputType | null
    _max: Sp_video_group_categoriesMaxAggregateOutputType | null
  }

  type GetSp_video_group_categoriesGroupByPayload<T extends sp_video_group_categoriesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sp_video_group_categoriesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sp_video_group_categoriesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sp_video_group_categoriesGroupByOutputType[P]>
            : GetScalarType<T[P], Sp_video_group_categoriesGroupByOutputType[P]>
        }
      >
    >


  export type sp_video_group_categoriesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    video_group_id?: boolean
    category_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }, ExtArgs["result"]["sp_video_group_categories"]>


  export type sp_video_group_categoriesSelectScalar = {
    id?: boolean
    video_group_id?: boolean
    category_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }


  export type $sp_video_group_categoriesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sp_video_group_categories"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      video_group_id: number
      category_id: number
      created_at: Date | null
      updated_at: Date | null
      deleted_at: Date | null
    }, ExtArgs["result"]["sp_video_group_categories"]>
    composites: {}
  }

  type sp_video_group_categoriesGetPayload<S extends boolean | null | undefined | sp_video_group_categoriesDefaultArgs> = $Result.GetResult<Prisma.$sp_video_group_categoriesPayload, S>

  type sp_video_group_categoriesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<sp_video_group_categoriesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Sp_video_group_categoriesCountAggregateInputType | true
    }

  export interface sp_video_group_categoriesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sp_video_group_categories'], meta: { name: 'sp_video_group_categories' } }
    /**
     * Find zero or one Sp_video_group_categories that matches the filter.
     * @param {sp_video_group_categoriesFindUniqueArgs} args - Arguments to find a Sp_video_group_categories
     * @example
     * // Get one Sp_video_group_categories
     * const sp_video_group_categories = await prisma.sp_video_group_categories.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sp_video_group_categoriesFindUniqueArgs>(args: SelectSubset<T, sp_video_group_categoriesFindUniqueArgs<ExtArgs>>): Prisma__sp_video_group_categoriesClient<$Result.GetResult<Prisma.$sp_video_group_categoriesPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Sp_video_group_categories that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {sp_video_group_categoriesFindUniqueOrThrowArgs} args - Arguments to find a Sp_video_group_categories
     * @example
     * // Get one Sp_video_group_categories
     * const sp_video_group_categories = await prisma.sp_video_group_categories.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sp_video_group_categoriesFindUniqueOrThrowArgs>(args: SelectSubset<T, sp_video_group_categoriesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sp_video_group_categoriesClient<$Result.GetResult<Prisma.$sp_video_group_categoriesPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Sp_video_group_categories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_video_group_categoriesFindFirstArgs} args - Arguments to find a Sp_video_group_categories
     * @example
     * // Get one Sp_video_group_categories
     * const sp_video_group_categories = await prisma.sp_video_group_categories.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sp_video_group_categoriesFindFirstArgs>(args?: SelectSubset<T, sp_video_group_categoriesFindFirstArgs<ExtArgs>>): Prisma__sp_video_group_categoriesClient<$Result.GetResult<Prisma.$sp_video_group_categoriesPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Sp_video_group_categories that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_video_group_categoriesFindFirstOrThrowArgs} args - Arguments to find a Sp_video_group_categories
     * @example
     * // Get one Sp_video_group_categories
     * const sp_video_group_categories = await prisma.sp_video_group_categories.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sp_video_group_categoriesFindFirstOrThrowArgs>(args?: SelectSubset<T, sp_video_group_categoriesFindFirstOrThrowArgs<ExtArgs>>): Prisma__sp_video_group_categoriesClient<$Result.GetResult<Prisma.$sp_video_group_categoriesPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Sp_video_group_categories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_video_group_categoriesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sp_video_group_categories
     * const sp_video_group_categories = await prisma.sp_video_group_categories.findMany()
     * 
     * // Get first 10 Sp_video_group_categories
     * const sp_video_group_categories = await prisma.sp_video_group_categories.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sp_video_group_categoriesWithIdOnly = await prisma.sp_video_group_categories.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sp_video_group_categoriesFindManyArgs>(args?: SelectSubset<T, sp_video_group_categoriesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sp_video_group_categoriesPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Sp_video_group_categories.
     * @param {sp_video_group_categoriesCreateArgs} args - Arguments to create a Sp_video_group_categories.
     * @example
     * // Create one Sp_video_group_categories
     * const Sp_video_group_categories = await prisma.sp_video_group_categories.create({
     *   data: {
     *     // ... data to create a Sp_video_group_categories
     *   }
     * })
     * 
     */
    create<T extends sp_video_group_categoriesCreateArgs>(args: SelectSubset<T, sp_video_group_categoriesCreateArgs<ExtArgs>>): Prisma__sp_video_group_categoriesClient<$Result.GetResult<Prisma.$sp_video_group_categoriesPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Sp_video_group_categories.
     * @param {sp_video_group_categoriesCreateManyArgs} args - Arguments to create many Sp_video_group_categories.
     * @example
     * // Create many Sp_video_group_categories
     * const sp_video_group_categories = await prisma.sp_video_group_categories.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sp_video_group_categoriesCreateManyArgs>(args?: SelectSubset<T, sp_video_group_categoriesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sp_video_group_categories.
     * @param {sp_video_group_categoriesDeleteArgs} args - Arguments to delete one Sp_video_group_categories.
     * @example
     * // Delete one Sp_video_group_categories
     * const Sp_video_group_categories = await prisma.sp_video_group_categories.delete({
     *   where: {
     *     // ... filter to delete one Sp_video_group_categories
     *   }
     * })
     * 
     */
    delete<T extends sp_video_group_categoriesDeleteArgs>(args: SelectSubset<T, sp_video_group_categoriesDeleteArgs<ExtArgs>>): Prisma__sp_video_group_categoriesClient<$Result.GetResult<Prisma.$sp_video_group_categoriesPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Sp_video_group_categories.
     * @param {sp_video_group_categoriesUpdateArgs} args - Arguments to update one Sp_video_group_categories.
     * @example
     * // Update one Sp_video_group_categories
     * const sp_video_group_categories = await prisma.sp_video_group_categories.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sp_video_group_categoriesUpdateArgs>(args: SelectSubset<T, sp_video_group_categoriesUpdateArgs<ExtArgs>>): Prisma__sp_video_group_categoriesClient<$Result.GetResult<Prisma.$sp_video_group_categoriesPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Sp_video_group_categories.
     * @param {sp_video_group_categoriesDeleteManyArgs} args - Arguments to filter Sp_video_group_categories to delete.
     * @example
     * // Delete a few Sp_video_group_categories
     * const { count } = await prisma.sp_video_group_categories.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sp_video_group_categoriesDeleteManyArgs>(args?: SelectSubset<T, sp_video_group_categoriesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sp_video_group_categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_video_group_categoriesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sp_video_group_categories
     * const sp_video_group_categories = await prisma.sp_video_group_categories.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sp_video_group_categoriesUpdateManyArgs>(args: SelectSubset<T, sp_video_group_categoriesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sp_video_group_categories.
     * @param {sp_video_group_categoriesUpsertArgs} args - Arguments to update or create a Sp_video_group_categories.
     * @example
     * // Update or create a Sp_video_group_categories
     * const sp_video_group_categories = await prisma.sp_video_group_categories.upsert({
     *   create: {
     *     // ... data to create a Sp_video_group_categories
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sp_video_group_categories we want to update
     *   }
     * })
     */
    upsert<T extends sp_video_group_categoriesUpsertArgs>(args: SelectSubset<T, sp_video_group_categoriesUpsertArgs<ExtArgs>>): Prisma__sp_video_group_categoriesClient<$Result.GetResult<Prisma.$sp_video_group_categoriesPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Sp_video_group_categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_video_group_categoriesCountArgs} args - Arguments to filter Sp_video_group_categories to count.
     * @example
     * // Count the number of Sp_video_group_categories
     * const count = await prisma.sp_video_group_categories.count({
     *   where: {
     *     // ... the filter for the Sp_video_group_categories we want to count
     *   }
     * })
    **/
    count<T extends sp_video_group_categoriesCountArgs>(
      args?: Subset<T, sp_video_group_categoriesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sp_video_group_categoriesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sp_video_group_categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sp_video_group_categoriesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sp_video_group_categoriesAggregateArgs>(args: Subset<T, Sp_video_group_categoriesAggregateArgs>): Prisma.PrismaPromise<GetSp_video_group_categoriesAggregateType<T>>

    /**
     * Group by Sp_video_group_categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_video_group_categoriesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sp_video_group_categoriesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sp_video_group_categoriesGroupByArgs['orderBy'] }
        : { orderBy?: sp_video_group_categoriesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sp_video_group_categoriesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSp_video_group_categoriesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sp_video_group_categories model
   */
  readonly fields: sp_video_group_categoriesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sp_video_group_categories.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sp_video_group_categoriesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sp_video_group_categories model
   */ 
  interface sp_video_group_categoriesFieldRefs {
    readonly id: FieldRef<"sp_video_group_categories", 'BigInt'>
    readonly video_group_id: FieldRef<"sp_video_group_categories", 'Int'>
    readonly category_id: FieldRef<"sp_video_group_categories", 'Int'>
    readonly created_at: FieldRef<"sp_video_group_categories", 'DateTime'>
    readonly updated_at: FieldRef<"sp_video_group_categories", 'DateTime'>
    readonly deleted_at: FieldRef<"sp_video_group_categories", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sp_video_group_categories findUnique
   */
  export type sp_video_group_categoriesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_video_group_categories
     */
    select?: sp_video_group_categoriesSelect<ExtArgs> | null
    /**
     * Filter, which sp_video_group_categories to fetch.
     */
    where: sp_video_group_categoriesWhereUniqueInput
  }

  /**
   * sp_video_group_categories findUniqueOrThrow
   */
  export type sp_video_group_categoriesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_video_group_categories
     */
    select?: sp_video_group_categoriesSelect<ExtArgs> | null
    /**
     * Filter, which sp_video_group_categories to fetch.
     */
    where: sp_video_group_categoriesWhereUniqueInput
  }

  /**
   * sp_video_group_categories findFirst
   */
  export type sp_video_group_categoriesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_video_group_categories
     */
    select?: sp_video_group_categoriesSelect<ExtArgs> | null
    /**
     * Filter, which sp_video_group_categories to fetch.
     */
    where?: sp_video_group_categoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_video_group_categories to fetch.
     */
    orderBy?: sp_video_group_categoriesOrderByWithRelationInput | sp_video_group_categoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_video_group_categories.
     */
    cursor?: sp_video_group_categoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_video_group_categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_video_group_categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_video_group_categories.
     */
    distinct?: Sp_video_group_categoriesScalarFieldEnum | Sp_video_group_categoriesScalarFieldEnum[]
  }

  /**
   * sp_video_group_categories findFirstOrThrow
   */
  export type sp_video_group_categoriesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_video_group_categories
     */
    select?: sp_video_group_categoriesSelect<ExtArgs> | null
    /**
     * Filter, which sp_video_group_categories to fetch.
     */
    where?: sp_video_group_categoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_video_group_categories to fetch.
     */
    orderBy?: sp_video_group_categoriesOrderByWithRelationInput | sp_video_group_categoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_video_group_categories.
     */
    cursor?: sp_video_group_categoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_video_group_categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_video_group_categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_video_group_categories.
     */
    distinct?: Sp_video_group_categoriesScalarFieldEnum | Sp_video_group_categoriesScalarFieldEnum[]
  }

  /**
   * sp_video_group_categories findMany
   */
  export type sp_video_group_categoriesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_video_group_categories
     */
    select?: sp_video_group_categoriesSelect<ExtArgs> | null
    /**
     * Filter, which sp_video_group_categories to fetch.
     */
    where?: sp_video_group_categoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_video_group_categories to fetch.
     */
    orderBy?: sp_video_group_categoriesOrderByWithRelationInput | sp_video_group_categoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sp_video_group_categories.
     */
    cursor?: sp_video_group_categoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_video_group_categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_video_group_categories.
     */
    skip?: number
    distinct?: Sp_video_group_categoriesScalarFieldEnum | Sp_video_group_categoriesScalarFieldEnum[]
  }

  /**
   * sp_video_group_categories create
   */
  export type sp_video_group_categoriesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_video_group_categories
     */
    select?: sp_video_group_categoriesSelect<ExtArgs> | null
    /**
     * The data needed to create a sp_video_group_categories.
     */
    data: XOR<sp_video_group_categoriesCreateInput, sp_video_group_categoriesUncheckedCreateInput>
  }

  /**
   * sp_video_group_categories createMany
   */
  export type sp_video_group_categoriesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sp_video_group_categories.
     */
    data: sp_video_group_categoriesCreateManyInput | sp_video_group_categoriesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sp_video_group_categories update
   */
  export type sp_video_group_categoriesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_video_group_categories
     */
    select?: sp_video_group_categoriesSelect<ExtArgs> | null
    /**
     * The data needed to update a sp_video_group_categories.
     */
    data: XOR<sp_video_group_categoriesUpdateInput, sp_video_group_categoriesUncheckedUpdateInput>
    /**
     * Choose, which sp_video_group_categories to update.
     */
    where: sp_video_group_categoriesWhereUniqueInput
  }

  /**
   * sp_video_group_categories updateMany
   */
  export type sp_video_group_categoriesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sp_video_group_categories.
     */
    data: XOR<sp_video_group_categoriesUpdateManyMutationInput, sp_video_group_categoriesUncheckedUpdateManyInput>
    /**
     * Filter which sp_video_group_categories to update
     */
    where?: sp_video_group_categoriesWhereInput
  }

  /**
   * sp_video_group_categories upsert
   */
  export type sp_video_group_categoriesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_video_group_categories
     */
    select?: sp_video_group_categoriesSelect<ExtArgs> | null
    /**
     * The filter to search for the sp_video_group_categories to update in case it exists.
     */
    where: sp_video_group_categoriesWhereUniqueInput
    /**
     * In case the sp_video_group_categories found by the `where` argument doesn't exist, create a new sp_video_group_categories with this data.
     */
    create: XOR<sp_video_group_categoriesCreateInput, sp_video_group_categoriesUncheckedCreateInput>
    /**
     * In case the sp_video_group_categories was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sp_video_group_categoriesUpdateInput, sp_video_group_categoriesUncheckedUpdateInput>
  }

  /**
   * sp_video_group_categories delete
   */
  export type sp_video_group_categoriesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_video_group_categories
     */
    select?: sp_video_group_categoriesSelect<ExtArgs> | null
    /**
     * Filter which sp_video_group_categories to delete.
     */
    where: sp_video_group_categoriesWhereUniqueInput
  }

  /**
   * sp_video_group_categories deleteMany
   */
  export type sp_video_group_categoriesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_video_group_categories to delete
     */
    where?: sp_video_group_categoriesWhereInput
  }

  /**
   * sp_video_group_categories without action
   */
  export type sp_video_group_categoriesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_video_group_categories
     */
    select?: sp_video_group_categoriesSelect<ExtArgs> | null
  }


  /**
   * Model sp_video_groups
   */

  export type AggregateSp_video_groups = {
    _count: Sp_video_groupsCountAggregateOutputType | null
    _avg: Sp_video_groupsAvgAggregateOutputType | null
    _sum: Sp_video_groupsSumAggregateOutputType | null
    _min: Sp_video_groupsMinAggregateOutputType | null
    _max: Sp_video_groupsMaxAggregateOutputType | null
  }

  export type Sp_video_groupsAvgAggregateOutputType = {
    id: number | null
    series_id: number | null
    category_id: number | null
    count: number | null
    cover_id: number | null
    costs: number | null
    free_count: number | null
    sort: number | null
    total_nums: number | null
    updated_nums: number | null
  }

  export type Sp_video_groupsSumAggregateOutputType = {
    id: number | null
    series_id: number | null
    category_id: number | null
    count: number | null
    cover_id: number | null
    costs: number | null
    free_count: number | null
    sort: number | null
    total_nums: number | null
    updated_nums: number | null
  }

  export type Sp_video_groupsMinAggregateOutputType = {
    id: number | null
    series_id: number | null
    category_id: number | null
    title: string | null
    desc: string | null
    count: number | null
    status: boolean | null
    cover_id: number | null
    costs: number | null
    pay_type: boolean | null
    free_count: number | null
    is_hot: boolean | null
    sort: number | null
    total_nums: number | null
    updated_nums: number | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_video_groupsMaxAggregateOutputType = {
    id: number | null
    series_id: number | null
    category_id: number | null
    title: string | null
    desc: string | null
    count: number | null
    status: boolean | null
    cover_id: number | null
    costs: number | null
    pay_type: boolean | null
    free_count: number | null
    is_hot: boolean | null
    sort: number | null
    total_nums: number | null
    updated_nums: number | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_video_groupsCountAggregateOutputType = {
    id: number
    series_id: number
    category_id: number
    title: number
    desc: number
    count: number
    status: number
    cover_id: number
    costs: number
    pay_type: number
    free_count: number
    is_hot: number
    sort: number
    total_nums: number
    updated_nums: number
    created_at: number
    updated_at: number
    deleted_at: number
    _all: number
  }


  export type Sp_video_groupsAvgAggregateInputType = {
    id?: true
    series_id?: true
    category_id?: true
    count?: true
    cover_id?: true
    costs?: true
    free_count?: true
    sort?: true
    total_nums?: true
    updated_nums?: true
  }

  export type Sp_video_groupsSumAggregateInputType = {
    id?: true
    series_id?: true
    category_id?: true
    count?: true
    cover_id?: true
    costs?: true
    free_count?: true
    sort?: true
    total_nums?: true
    updated_nums?: true
  }

  export type Sp_video_groupsMinAggregateInputType = {
    id?: true
    series_id?: true
    category_id?: true
    title?: true
    desc?: true
    count?: true
    status?: true
    cover_id?: true
    costs?: true
    pay_type?: true
    free_count?: true
    is_hot?: true
    sort?: true
    total_nums?: true
    updated_nums?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sp_video_groupsMaxAggregateInputType = {
    id?: true
    series_id?: true
    category_id?: true
    title?: true
    desc?: true
    count?: true
    status?: true
    cover_id?: true
    costs?: true
    pay_type?: true
    free_count?: true
    is_hot?: true
    sort?: true
    total_nums?: true
    updated_nums?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sp_video_groupsCountAggregateInputType = {
    id?: true
    series_id?: true
    category_id?: true
    title?: true
    desc?: true
    count?: true
    status?: true
    cover_id?: true
    costs?: true
    pay_type?: true
    free_count?: true
    is_hot?: true
    sort?: true
    total_nums?: true
    updated_nums?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    _all?: true
  }

  export type Sp_video_groupsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_video_groups to aggregate.
     */
    where?: sp_video_groupsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_video_groups to fetch.
     */
    orderBy?: sp_video_groupsOrderByWithRelationInput | sp_video_groupsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sp_video_groupsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_video_groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_video_groups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sp_video_groups
    **/
    _count?: true | Sp_video_groupsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sp_video_groupsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sp_video_groupsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sp_video_groupsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sp_video_groupsMaxAggregateInputType
  }

  export type GetSp_video_groupsAggregateType<T extends Sp_video_groupsAggregateArgs> = {
        [P in keyof T & keyof AggregateSp_video_groups]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSp_video_groups[P]>
      : GetScalarType<T[P], AggregateSp_video_groups[P]>
  }




  export type sp_video_groupsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sp_video_groupsWhereInput
    orderBy?: sp_video_groupsOrderByWithAggregationInput | sp_video_groupsOrderByWithAggregationInput[]
    by: Sp_video_groupsScalarFieldEnum[] | Sp_video_groupsScalarFieldEnum
    having?: sp_video_groupsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sp_video_groupsCountAggregateInputType | true
    _avg?: Sp_video_groupsAvgAggregateInputType
    _sum?: Sp_video_groupsSumAggregateInputType
    _min?: Sp_video_groupsMinAggregateInputType
    _max?: Sp_video_groupsMaxAggregateInputType
  }

  export type Sp_video_groupsGroupByOutputType = {
    id: number
    series_id: number
    category_id: number | null
    title: string
    desc: string | null
    count: number
    status: boolean | null
    cover_id: number
    costs: number
    pay_type: boolean | null
    free_count: number
    is_hot: boolean | null
    sort: number
    total_nums: number | null
    updated_nums: number | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
    _count: Sp_video_groupsCountAggregateOutputType | null
    _avg: Sp_video_groupsAvgAggregateOutputType | null
    _sum: Sp_video_groupsSumAggregateOutputType | null
    _min: Sp_video_groupsMinAggregateOutputType | null
    _max: Sp_video_groupsMaxAggregateOutputType | null
  }

  type GetSp_video_groupsGroupByPayload<T extends sp_video_groupsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sp_video_groupsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sp_video_groupsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sp_video_groupsGroupByOutputType[P]>
            : GetScalarType<T[P], Sp_video_groupsGroupByOutputType[P]>
        }
      >
    >


  export type sp_video_groupsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    series_id?: boolean
    category_id?: boolean
    title?: boolean
    desc?: boolean
    count?: boolean
    status?: boolean
    cover_id?: boolean
    costs?: boolean
    pay_type?: boolean
    free_count?: boolean
    is_hot?: boolean
    sort?: boolean
    total_nums?: boolean
    updated_nums?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }, ExtArgs["result"]["sp_video_groups"]>


  export type sp_video_groupsSelectScalar = {
    id?: boolean
    series_id?: boolean
    category_id?: boolean
    title?: boolean
    desc?: boolean
    count?: boolean
    status?: boolean
    cover_id?: boolean
    costs?: boolean
    pay_type?: boolean
    free_count?: boolean
    is_hot?: boolean
    sort?: boolean
    total_nums?: boolean
    updated_nums?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }


  export type $sp_video_groupsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sp_video_groups"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      series_id: number
      category_id: number | null
      title: string
      desc: string | null
      count: number
      status: boolean | null
      cover_id: number
      costs: number
      pay_type: boolean | null
      free_count: number
      is_hot: boolean | null
      sort: number
      total_nums: number | null
      updated_nums: number | null
      created_at: Date | null
      updated_at: Date | null
      deleted_at: Date | null
    }, ExtArgs["result"]["sp_video_groups"]>
    composites: {}
  }

  type sp_video_groupsGetPayload<S extends boolean | null | undefined | sp_video_groupsDefaultArgs> = $Result.GetResult<Prisma.$sp_video_groupsPayload, S>

  type sp_video_groupsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<sp_video_groupsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Sp_video_groupsCountAggregateInputType | true
    }

  export interface sp_video_groupsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sp_video_groups'], meta: { name: 'sp_video_groups' } }
    /**
     * Find zero or one Sp_video_groups that matches the filter.
     * @param {sp_video_groupsFindUniqueArgs} args - Arguments to find a Sp_video_groups
     * @example
     * // Get one Sp_video_groups
     * const sp_video_groups = await prisma.sp_video_groups.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sp_video_groupsFindUniqueArgs>(args: SelectSubset<T, sp_video_groupsFindUniqueArgs<ExtArgs>>): Prisma__sp_video_groupsClient<$Result.GetResult<Prisma.$sp_video_groupsPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Sp_video_groups that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {sp_video_groupsFindUniqueOrThrowArgs} args - Arguments to find a Sp_video_groups
     * @example
     * // Get one Sp_video_groups
     * const sp_video_groups = await prisma.sp_video_groups.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sp_video_groupsFindUniqueOrThrowArgs>(args: SelectSubset<T, sp_video_groupsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sp_video_groupsClient<$Result.GetResult<Prisma.$sp_video_groupsPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Sp_video_groups that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_video_groupsFindFirstArgs} args - Arguments to find a Sp_video_groups
     * @example
     * // Get one Sp_video_groups
     * const sp_video_groups = await prisma.sp_video_groups.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sp_video_groupsFindFirstArgs>(args?: SelectSubset<T, sp_video_groupsFindFirstArgs<ExtArgs>>): Prisma__sp_video_groupsClient<$Result.GetResult<Prisma.$sp_video_groupsPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Sp_video_groups that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_video_groupsFindFirstOrThrowArgs} args - Arguments to find a Sp_video_groups
     * @example
     * // Get one Sp_video_groups
     * const sp_video_groups = await prisma.sp_video_groups.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sp_video_groupsFindFirstOrThrowArgs>(args?: SelectSubset<T, sp_video_groupsFindFirstOrThrowArgs<ExtArgs>>): Prisma__sp_video_groupsClient<$Result.GetResult<Prisma.$sp_video_groupsPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Sp_video_groups that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_video_groupsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sp_video_groups
     * const sp_video_groups = await prisma.sp_video_groups.findMany()
     * 
     * // Get first 10 Sp_video_groups
     * const sp_video_groups = await prisma.sp_video_groups.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sp_video_groupsWithIdOnly = await prisma.sp_video_groups.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sp_video_groupsFindManyArgs>(args?: SelectSubset<T, sp_video_groupsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sp_video_groupsPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Sp_video_groups.
     * @param {sp_video_groupsCreateArgs} args - Arguments to create a Sp_video_groups.
     * @example
     * // Create one Sp_video_groups
     * const Sp_video_groups = await prisma.sp_video_groups.create({
     *   data: {
     *     // ... data to create a Sp_video_groups
     *   }
     * })
     * 
     */
    create<T extends sp_video_groupsCreateArgs>(args: SelectSubset<T, sp_video_groupsCreateArgs<ExtArgs>>): Prisma__sp_video_groupsClient<$Result.GetResult<Prisma.$sp_video_groupsPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Sp_video_groups.
     * @param {sp_video_groupsCreateManyArgs} args - Arguments to create many Sp_video_groups.
     * @example
     * // Create many Sp_video_groups
     * const sp_video_groups = await prisma.sp_video_groups.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sp_video_groupsCreateManyArgs>(args?: SelectSubset<T, sp_video_groupsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sp_video_groups.
     * @param {sp_video_groupsDeleteArgs} args - Arguments to delete one Sp_video_groups.
     * @example
     * // Delete one Sp_video_groups
     * const Sp_video_groups = await prisma.sp_video_groups.delete({
     *   where: {
     *     // ... filter to delete one Sp_video_groups
     *   }
     * })
     * 
     */
    delete<T extends sp_video_groupsDeleteArgs>(args: SelectSubset<T, sp_video_groupsDeleteArgs<ExtArgs>>): Prisma__sp_video_groupsClient<$Result.GetResult<Prisma.$sp_video_groupsPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Sp_video_groups.
     * @param {sp_video_groupsUpdateArgs} args - Arguments to update one Sp_video_groups.
     * @example
     * // Update one Sp_video_groups
     * const sp_video_groups = await prisma.sp_video_groups.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sp_video_groupsUpdateArgs>(args: SelectSubset<T, sp_video_groupsUpdateArgs<ExtArgs>>): Prisma__sp_video_groupsClient<$Result.GetResult<Prisma.$sp_video_groupsPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Sp_video_groups.
     * @param {sp_video_groupsDeleteManyArgs} args - Arguments to filter Sp_video_groups to delete.
     * @example
     * // Delete a few Sp_video_groups
     * const { count } = await prisma.sp_video_groups.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sp_video_groupsDeleteManyArgs>(args?: SelectSubset<T, sp_video_groupsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sp_video_groups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_video_groupsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sp_video_groups
     * const sp_video_groups = await prisma.sp_video_groups.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sp_video_groupsUpdateManyArgs>(args: SelectSubset<T, sp_video_groupsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sp_video_groups.
     * @param {sp_video_groupsUpsertArgs} args - Arguments to update or create a Sp_video_groups.
     * @example
     * // Update or create a Sp_video_groups
     * const sp_video_groups = await prisma.sp_video_groups.upsert({
     *   create: {
     *     // ... data to create a Sp_video_groups
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sp_video_groups we want to update
     *   }
     * })
     */
    upsert<T extends sp_video_groupsUpsertArgs>(args: SelectSubset<T, sp_video_groupsUpsertArgs<ExtArgs>>): Prisma__sp_video_groupsClient<$Result.GetResult<Prisma.$sp_video_groupsPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Sp_video_groups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_video_groupsCountArgs} args - Arguments to filter Sp_video_groups to count.
     * @example
     * // Count the number of Sp_video_groups
     * const count = await prisma.sp_video_groups.count({
     *   where: {
     *     // ... the filter for the Sp_video_groups we want to count
     *   }
     * })
    **/
    count<T extends sp_video_groupsCountArgs>(
      args?: Subset<T, sp_video_groupsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sp_video_groupsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sp_video_groups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sp_video_groupsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sp_video_groupsAggregateArgs>(args: Subset<T, Sp_video_groupsAggregateArgs>): Prisma.PrismaPromise<GetSp_video_groupsAggregateType<T>>

    /**
     * Group by Sp_video_groups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_video_groupsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sp_video_groupsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sp_video_groupsGroupByArgs['orderBy'] }
        : { orderBy?: sp_video_groupsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sp_video_groupsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSp_video_groupsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sp_video_groups model
   */
  readonly fields: sp_video_groupsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sp_video_groups.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sp_video_groupsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sp_video_groups model
   */ 
  interface sp_video_groupsFieldRefs {
    readonly id: FieldRef<"sp_video_groups", 'Int'>
    readonly series_id: FieldRef<"sp_video_groups", 'Int'>
    readonly category_id: FieldRef<"sp_video_groups", 'Int'>
    readonly title: FieldRef<"sp_video_groups", 'String'>
    readonly desc: FieldRef<"sp_video_groups", 'String'>
    readonly count: FieldRef<"sp_video_groups", 'Int'>
    readonly status: FieldRef<"sp_video_groups", 'Boolean'>
    readonly cover_id: FieldRef<"sp_video_groups", 'Int'>
    readonly costs: FieldRef<"sp_video_groups", 'Int'>
    readonly pay_type: FieldRef<"sp_video_groups", 'Boolean'>
    readonly free_count: FieldRef<"sp_video_groups", 'Int'>
    readonly is_hot: FieldRef<"sp_video_groups", 'Boolean'>
    readonly sort: FieldRef<"sp_video_groups", 'Int'>
    readonly total_nums: FieldRef<"sp_video_groups", 'Int'>
    readonly updated_nums: FieldRef<"sp_video_groups", 'Int'>
    readonly created_at: FieldRef<"sp_video_groups", 'DateTime'>
    readonly updated_at: FieldRef<"sp_video_groups", 'DateTime'>
    readonly deleted_at: FieldRef<"sp_video_groups", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sp_video_groups findUnique
   */
  export type sp_video_groupsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_video_groups
     */
    select?: sp_video_groupsSelect<ExtArgs> | null
    /**
     * Filter, which sp_video_groups to fetch.
     */
    where: sp_video_groupsWhereUniqueInput
  }

  /**
   * sp_video_groups findUniqueOrThrow
   */
  export type sp_video_groupsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_video_groups
     */
    select?: sp_video_groupsSelect<ExtArgs> | null
    /**
     * Filter, which sp_video_groups to fetch.
     */
    where: sp_video_groupsWhereUniqueInput
  }

  /**
   * sp_video_groups findFirst
   */
  export type sp_video_groupsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_video_groups
     */
    select?: sp_video_groupsSelect<ExtArgs> | null
    /**
     * Filter, which sp_video_groups to fetch.
     */
    where?: sp_video_groupsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_video_groups to fetch.
     */
    orderBy?: sp_video_groupsOrderByWithRelationInput | sp_video_groupsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_video_groups.
     */
    cursor?: sp_video_groupsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_video_groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_video_groups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_video_groups.
     */
    distinct?: Sp_video_groupsScalarFieldEnum | Sp_video_groupsScalarFieldEnum[]
  }

  /**
   * sp_video_groups findFirstOrThrow
   */
  export type sp_video_groupsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_video_groups
     */
    select?: sp_video_groupsSelect<ExtArgs> | null
    /**
     * Filter, which sp_video_groups to fetch.
     */
    where?: sp_video_groupsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_video_groups to fetch.
     */
    orderBy?: sp_video_groupsOrderByWithRelationInput | sp_video_groupsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_video_groups.
     */
    cursor?: sp_video_groupsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_video_groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_video_groups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_video_groups.
     */
    distinct?: Sp_video_groupsScalarFieldEnum | Sp_video_groupsScalarFieldEnum[]
  }

  /**
   * sp_video_groups findMany
   */
  export type sp_video_groupsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_video_groups
     */
    select?: sp_video_groupsSelect<ExtArgs> | null
    /**
     * Filter, which sp_video_groups to fetch.
     */
    where?: sp_video_groupsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_video_groups to fetch.
     */
    orderBy?: sp_video_groupsOrderByWithRelationInput | sp_video_groupsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sp_video_groups.
     */
    cursor?: sp_video_groupsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_video_groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_video_groups.
     */
    skip?: number
    distinct?: Sp_video_groupsScalarFieldEnum | Sp_video_groupsScalarFieldEnum[]
  }

  /**
   * sp_video_groups create
   */
  export type sp_video_groupsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_video_groups
     */
    select?: sp_video_groupsSelect<ExtArgs> | null
    /**
     * The data needed to create a sp_video_groups.
     */
    data?: XOR<sp_video_groupsCreateInput, sp_video_groupsUncheckedCreateInput>
  }

  /**
   * sp_video_groups createMany
   */
  export type sp_video_groupsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sp_video_groups.
     */
    data: sp_video_groupsCreateManyInput | sp_video_groupsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sp_video_groups update
   */
  export type sp_video_groupsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_video_groups
     */
    select?: sp_video_groupsSelect<ExtArgs> | null
    /**
     * The data needed to update a sp_video_groups.
     */
    data: XOR<sp_video_groupsUpdateInput, sp_video_groupsUncheckedUpdateInput>
    /**
     * Choose, which sp_video_groups to update.
     */
    where: sp_video_groupsWhereUniqueInput
  }

  /**
   * sp_video_groups updateMany
   */
  export type sp_video_groupsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sp_video_groups.
     */
    data: XOR<sp_video_groupsUpdateManyMutationInput, sp_video_groupsUncheckedUpdateManyInput>
    /**
     * Filter which sp_video_groups to update
     */
    where?: sp_video_groupsWhereInput
  }

  /**
   * sp_video_groups upsert
   */
  export type sp_video_groupsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_video_groups
     */
    select?: sp_video_groupsSelect<ExtArgs> | null
    /**
     * The filter to search for the sp_video_groups to update in case it exists.
     */
    where: sp_video_groupsWhereUniqueInput
    /**
     * In case the sp_video_groups found by the `where` argument doesn't exist, create a new sp_video_groups with this data.
     */
    create: XOR<sp_video_groupsCreateInput, sp_video_groupsUncheckedCreateInput>
    /**
     * In case the sp_video_groups was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sp_video_groupsUpdateInput, sp_video_groupsUncheckedUpdateInput>
  }

  /**
   * sp_video_groups delete
   */
  export type sp_video_groupsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_video_groups
     */
    select?: sp_video_groupsSelect<ExtArgs> | null
    /**
     * Filter which sp_video_groups to delete.
     */
    where: sp_video_groupsWhereUniqueInput
  }

  /**
   * sp_video_groups deleteMany
   */
  export type sp_video_groupsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_video_groups to delete
     */
    where?: sp_video_groupsWhereInput
  }

  /**
   * sp_video_groups without action
   */
  export type sp_video_groupsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_video_groups
     */
    select?: sp_video_groupsSelect<ExtArgs> | null
  }


  /**
   * Model sp_videos
   */

  export type AggregateSp_videos = {
    _count: Sp_videosCountAggregateOutputType | null
    _avg: Sp_videosAvgAggregateOutputType | null
    _sum: Sp_videosSumAggregateOutputType | null
    _min: Sp_videosMinAggregateOutputType | null
    _max: Sp_videosMaxAggregateOutputType | null
  }

  export type Sp_videosAvgAggregateOutputType = {
    id: number | null
    group_id: number | null
    file_id: number | null
    sort: number | null
  }

  export type Sp_videosSumAggregateOutputType = {
    id: bigint | null
    group_id: number | null
    file_id: number | null
    sort: number | null
  }

  export type Sp_videosMinAggregateOutputType = {
    id: bigint | null
    group_id: number | null
    file_id: number | null
    title: string | null
    cover: string | null
    desc: string | null
    sort: number | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_videosMaxAggregateOutputType = {
    id: bigint | null
    group_id: number | null
    file_id: number | null
    title: string | null
    cover: string | null
    desc: string | null
    sort: number | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_videosCountAggregateOutputType = {
    id: number
    group_id: number
    file_id: number
    title: number
    cover: number
    desc: number
    sort: number
    created_at: number
    updated_at: number
    deleted_at: number
    _all: number
  }


  export type Sp_videosAvgAggregateInputType = {
    id?: true
    group_id?: true
    file_id?: true
    sort?: true
  }

  export type Sp_videosSumAggregateInputType = {
    id?: true
    group_id?: true
    file_id?: true
    sort?: true
  }

  export type Sp_videosMinAggregateInputType = {
    id?: true
    group_id?: true
    file_id?: true
    title?: true
    cover?: true
    desc?: true
    sort?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sp_videosMaxAggregateInputType = {
    id?: true
    group_id?: true
    file_id?: true
    title?: true
    cover?: true
    desc?: true
    sort?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sp_videosCountAggregateInputType = {
    id?: true
    group_id?: true
    file_id?: true
    title?: true
    cover?: true
    desc?: true
    sort?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    _all?: true
  }

  export type Sp_videosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_videos to aggregate.
     */
    where?: sp_videosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_videos to fetch.
     */
    orderBy?: sp_videosOrderByWithRelationInput | sp_videosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sp_videosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_videos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_videos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sp_videos
    **/
    _count?: true | Sp_videosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sp_videosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sp_videosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sp_videosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sp_videosMaxAggregateInputType
  }

  export type GetSp_videosAggregateType<T extends Sp_videosAggregateArgs> = {
        [P in keyof T & keyof AggregateSp_videos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSp_videos[P]>
      : GetScalarType<T[P], AggregateSp_videos[P]>
  }




  export type sp_videosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sp_videosWhereInput
    orderBy?: sp_videosOrderByWithAggregationInput | sp_videosOrderByWithAggregationInput[]
    by: Sp_videosScalarFieldEnum[] | Sp_videosScalarFieldEnum
    having?: sp_videosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sp_videosCountAggregateInputType | true
    _avg?: Sp_videosAvgAggregateInputType
    _sum?: Sp_videosSumAggregateInputType
    _min?: Sp_videosMinAggregateInputType
    _max?: Sp_videosMaxAggregateInputType
  }

  export type Sp_videosGroupByOutputType = {
    id: bigint
    group_id: number
    file_id: number
    title: string
    cover: string | null
    desc: string
    sort: number
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
    _count: Sp_videosCountAggregateOutputType | null
    _avg: Sp_videosAvgAggregateOutputType | null
    _sum: Sp_videosSumAggregateOutputType | null
    _min: Sp_videosMinAggregateOutputType | null
    _max: Sp_videosMaxAggregateOutputType | null
  }

  type GetSp_videosGroupByPayload<T extends sp_videosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sp_videosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sp_videosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sp_videosGroupByOutputType[P]>
            : GetScalarType<T[P], Sp_videosGroupByOutputType[P]>
        }
      >
    >


  export type sp_videosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    group_id?: boolean
    file_id?: boolean
    title?: boolean
    cover?: boolean
    desc?: boolean
    sort?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }, ExtArgs["result"]["sp_videos"]>


  export type sp_videosSelectScalar = {
    id?: boolean
    group_id?: boolean
    file_id?: boolean
    title?: boolean
    cover?: boolean
    desc?: boolean
    sort?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }


  export type $sp_videosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sp_videos"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      group_id: number
      file_id: number
      title: string
      cover: string | null
      desc: string
      sort: number
      created_at: Date | null
      updated_at: Date | null
      deleted_at: Date | null
    }, ExtArgs["result"]["sp_videos"]>
    composites: {}
  }

  type sp_videosGetPayload<S extends boolean | null | undefined | sp_videosDefaultArgs> = $Result.GetResult<Prisma.$sp_videosPayload, S>

  type sp_videosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<sp_videosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Sp_videosCountAggregateInputType | true
    }

  export interface sp_videosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sp_videos'], meta: { name: 'sp_videos' } }
    /**
     * Find zero or one Sp_videos that matches the filter.
     * @param {sp_videosFindUniqueArgs} args - Arguments to find a Sp_videos
     * @example
     * // Get one Sp_videos
     * const sp_videos = await prisma.sp_videos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sp_videosFindUniqueArgs>(args: SelectSubset<T, sp_videosFindUniqueArgs<ExtArgs>>): Prisma__sp_videosClient<$Result.GetResult<Prisma.$sp_videosPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Sp_videos that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {sp_videosFindUniqueOrThrowArgs} args - Arguments to find a Sp_videos
     * @example
     * // Get one Sp_videos
     * const sp_videos = await prisma.sp_videos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sp_videosFindUniqueOrThrowArgs>(args: SelectSubset<T, sp_videosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sp_videosClient<$Result.GetResult<Prisma.$sp_videosPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Sp_videos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_videosFindFirstArgs} args - Arguments to find a Sp_videos
     * @example
     * // Get one Sp_videos
     * const sp_videos = await prisma.sp_videos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sp_videosFindFirstArgs>(args?: SelectSubset<T, sp_videosFindFirstArgs<ExtArgs>>): Prisma__sp_videosClient<$Result.GetResult<Prisma.$sp_videosPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Sp_videos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_videosFindFirstOrThrowArgs} args - Arguments to find a Sp_videos
     * @example
     * // Get one Sp_videos
     * const sp_videos = await prisma.sp_videos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sp_videosFindFirstOrThrowArgs>(args?: SelectSubset<T, sp_videosFindFirstOrThrowArgs<ExtArgs>>): Prisma__sp_videosClient<$Result.GetResult<Prisma.$sp_videosPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Sp_videos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_videosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sp_videos
     * const sp_videos = await prisma.sp_videos.findMany()
     * 
     * // Get first 10 Sp_videos
     * const sp_videos = await prisma.sp_videos.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sp_videosWithIdOnly = await prisma.sp_videos.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sp_videosFindManyArgs>(args?: SelectSubset<T, sp_videosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sp_videosPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Sp_videos.
     * @param {sp_videosCreateArgs} args - Arguments to create a Sp_videos.
     * @example
     * // Create one Sp_videos
     * const Sp_videos = await prisma.sp_videos.create({
     *   data: {
     *     // ... data to create a Sp_videos
     *   }
     * })
     * 
     */
    create<T extends sp_videosCreateArgs>(args: SelectSubset<T, sp_videosCreateArgs<ExtArgs>>): Prisma__sp_videosClient<$Result.GetResult<Prisma.$sp_videosPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Sp_videos.
     * @param {sp_videosCreateManyArgs} args - Arguments to create many Sp_videos.
     * @example
     * // Create many Sp_videos
     * const sp_videos = await prisma.sp_videos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sp_videosCreateManyArgs>(args?: SelectSubset<T, sp_videosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sp_videos.
     * @param {sp_videosDeleteArgs} args - Arguments to delete one Sp_videos.
     * @example
     * // Delete one Sp_videos
     * const Sp_videos = await prisma.sp_videos.delete({
     *   where: {
     *     // ... filter to delete one Sp_videos
     *   }
     * })
     * 
     */
    delete<T extends sp_videosDeleteArgs>(args: SelectSubset<T, sp_videosDeleteArgs<ExtArgs>>): Prisma__sp_videosClient<$Result.GetResult<Prisma.$sp_videosPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Sp_videos.
     * @param {sp_videosUpdateArgs} args - Arguments to update one Sp_videos.
     * @example
     * // Update one Sp_videos
     * const sp_videos = await prisma.sp_videos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sp_videosUpdateArgs>(args: SelectSubset<T, sp_videosUpdateArgs<ExtArgs>>): Prisma__sp_videosClient<$Result.GetResult<Prisma.$sp_videosPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Sp_videos.
     * @param {sp_videosDeleteManyArgs} args - Arguments to filter Sp_videos to delete.
     * @example
     * // Delete a few Sp_videos
     * const { count } = await prisma.sp_videos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sp_videosDeleteManyArgs>(args?: SelectSubset<T, sp_videosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sp_videos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_videosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sp_videos
     * const sp_videos = await prisma.sp_videos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sp_videosUpdateManyArgs>(args: SelectSubset<T, sp_videosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sp_videos.
     * @param {sp_videosUpsertArgs} args - Arguments to update or create a Sp_videos.
     * @example
     * // Update or create a Sp_videos
     * const sp_videos = await prisma.sp_videos.upsert({
     *   create: {
     *     // ... data to create a Sp_videos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sp_videos we want to update
     *   }
     * })
     */
    upsert<T extends sp_videosUpsertArgs>(args: SelectSubset<T, sp_videosUpsertArgs<ExtArgs>>): Prisma__sp_videosClient<$Result.GetResult<Prisma.$sp_videosPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Sp_videos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_videosCountArgs} args - Arguments to filter Sp_videos to count.
     * @example
     * // Count the number of Sp_videos
     * const count = await prisma.sp_videos.count({
     *   where: {
     *     // ... the filter for the Sp_videos we want to count
     *   }
     * })
    **/
    count<T extends sp_videosCountArgs>(
      args?: Subset<T, sp_videosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sp_videosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sp_videos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sp_videosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sp_videosAggregateArgs>(args: Subset<T, Sp_videosAggregateArgs>): Prisma.PrismaPromise<GetSp_videosAggregateType<T>>

    /**
     * Group by Sp_videos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_videosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sp_videosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sp_videosGroupByArgs['orderBy'] }
        : { orderBy?: sp_videosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sp_videosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSp_videosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sp_videos model
   */
  readonly fields: sp_videosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sp_videos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sp_videosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sp_videos model
   */ 
  interface sp_videosFieldRefs {
    readonly id: FieldRef<"sp_videos", 'BigInt'>
    readonly group_id: FieldRef<"sp_videos", 'Int'>
    readonly file_id: FieldRef<"sp_videos", 'Int'>
    readonly title: FieldRef<"sp_videos", 'String'>
    readonly cover: FieldRef<"sp_videos", 'String'>
    readonly desc: FieldRef<"sp_videos", 'String'>
    readonly sort: FieldRef<"sp_videos", 'Int'>
    readonly created_at: FieldRef<"sp_videos", 'DateTime'>
    readonly updated_at: FieldRef<"sp_videos", 'DateTime'>
    readonly deleted_at: FieldRef<"sp_videos", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sp_videos findUnique
   */
  export type sp_videosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_videos
     */
    select?: sp_videosSelect<ExtArgs> | null
    /**
     * Filter, which sp_videos to fetch.
     */
    where: sp_videosWhereUniqueInput
  }

  /**
   * sp_videos findUniqueOrThrow
   */
  export type sp_videosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_videos
     */
    select?: sp_videosSelect<ExtArgs> | null
    /**
     * Filter, which sp_videos to fetch.
     */
    where: sp_videosWhereUniqueInput
  }

  /**
   * sp_videos findFirst
   */
  export type sp_videosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_videos
     */
    select?: sp_videosSelect<ExtArgs> | null
    /**
     * Filter, which sp_videos to fetch.
     */
    where?: sp_videosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_videos to fetch.
     */
    orderBy?: sp_videosOrderByWithRelationInput | sp_videosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_videos.
     */
    cursor?: sp_videosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_videos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_videos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_videos.
     */
    distinct?: Sp_videosScalarFieldEnum | Sp_videosScalarFieldEnum[]
  }

  /**
   * sp_videos findFirstOrThrow
   */
  export type sp_videosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_videos
     */
    select?: sp_videosSelect<ExtArgs> | null
    /**
     * Filter, which sp_videos to fetch.
     */
    where?: sp_videosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_videos to fetch.
     */
    orderBy?: sp_videosOrderByWithRelationInput | sp_videosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_videos.
     */
    cursor?: sp_videosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_videos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_videos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_videos.
     */
    distinct?: Sp_videosScalarFieldEnum | Sp_videosScalarFieldEnum[]
  }

  /**
   * sp_videos findMany
   */
  export type sp_videosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_videos
     */
    select?: sp_videosSelect<ExtArgs> | null
    /**
     * Filter, which sp_videos to fetch.
     */
    where?: sp_videosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_videos to fetch.
     */
    orderBy?: sp_videosOrderByWithRelationInput | sp_videosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sp_videos.
     */
    cursor?: sp_videosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_videos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_videos.
     */
    skip?: number
    distinct?: Sp_videosScalarFieldEnum | Sp_videosScalarFieldEnum[]
  }

  /**
   * sp_videos create
   */
  export type sp_videosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_videos
     */
    select?: sp_videosSelect<ExtArgs> | null
    /**
     * The data needed to create a sp_videos.
     */
    data: XOR<sp_videosCreateInput, sp_videosUncheckedCreateInput>
  }

  /**
   * sp_videos createMany
   */
  export type sp_videosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sp_videos.
     */
    data: sp_videosCreateManyInput | sp_videosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sp_videos update
   */
  export type sp_videosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_videos
     */
    select?: sp_videosSelect<ExtArgs> | null
    /**
     * The data needed to update a sp_videos.
     */
    data: XOR<sp_videosUpdateInput, sp_videosUncheckedUpdateInput>
    /**
     * Choose, which sp_videos to update.
     */
    where: sp_videosWhereUniqueInput
  }

  /**
   * sp_videos updateMany
   */
  export type sp_videosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sp_videos.
     */
    data: XOR<sp_videosUpdateManyMutationInput, sp_videosUncheckedUpdateManyInput>
    /**
     * Filter which sp_videos to update
     */
    where?: sp_videosWhereInput
  }

  /**
   * sp_videos upsert
   */
  export type sp_videosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_videos
     */
    select?: sp_videosSelect<ExtArgs> | null
    /**
     * The filter to search for the sp_videos to update in case it exists.
     */
    where: sp_videosWhereUniqueInput
    /**
     * In case the sp_videos found by the `where` argument doesn't exist, create a new sp_videos with this data.
     */
    create: XOR<sp_videosCreateInput, sp_videosUncheckedCreateInput>
    /**
     * In case the sp_videos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sp_videosUpdateInput, sp_videosUncheckedUpdateInput>
  }

  /**
   * sp_videos delete
   */
  export type sp_videosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_videos
     */
    select?: sp_videosSelect<ExtArgs> | null
    /**
     * Filter which sp_videos to delete.
     */
    where: sp_videosWhereUniqueInput
  }

  /**
   * sp_videos deleteMany
   */
  export type sp_videosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_videos to delete
     */
    where?: sp_videosWhereInput
  }

  /**
   * sp_videos without action
   */
  export type sp_videosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_videos
     */
    select?: sp_videosSelect<ExtArgs> | null
  }


  /**
   * Model sp_view_histories
   */

  export type AggregateSp_view_histories = {
    _count: Sp_view_historiesCountAggregateOutputType | null
    _avg: Sp_view_historiesAvgAggregateOutputType | null
    _sum: Sp_view_historiesSumAggregateOutputType | null
    _min: Sp_view_historiesMinAggregateOutputType | null
    _max: Sp_view_historiesMaxAggregateOutputType | null
  }

  export type Sp_view_historiesAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
    video_id: number | null
    video_group_id: number | null
  }

  export type Sp_view_historiesSumAggregateOutputType = {
    id: bigint | null
    user_id: bigint | null
    video_id: bigint | null
    video_group_id: bigint | null
  }

  export type Sp_view_historiesMinAggregateOutputType = {
    id: bigint | null
    user_id: bigint | null
    video_id: bigint | null
    is_finished: boolean | null
    video_group_id: bigint | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_view_historiesMaxAggregateOutputType = {
    id: bigint | null
    user_id: bigint | null
    video_id: bigint | null
    is_finished: boolean | null
    video_group_id: bigint | null
    created_at: Date | null
    updated_at: Date | null
    deleted_at: Date | null
  }

  export type Sp_view_historiesCountAggregateOutputType = {
    id: number
    user_id: number
    video_id: number
    is_finished: number
    video_group_id: number
    created_at: number
    updated_at: number
    deleted_at: number
    _all: number
  }


  export type Sp_view_historiesAvgAggregateInputType = {
    id?: true
    user_id?: true
    video_id?: true
    video_group_id?: true
  }

  export type Sp_view_historiesSumAggregateInputType = {
    id?: true
    user_id?: true
    video_id?: true
    video_group_id?: true
  }

  export type Sp_view_historiesMinAggregateInputType = {
    id?: true
    user_id?: true
    video_id?: true
    is_finished?: true
    video_group_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sp_view_historiesMaxAggregateInputType = {
    id?: true
    user_id?: true
    video_id?: true
    is_finished?: true
    video_group_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
  }

  export type Sp_view_historiesCountAggregateInputType = {
    id?: true
    user_id?: true
    video_id?: true
    is_finished?: true
    video_group_id?: true
    created_at?: true
    updated_at?: true
    deleted_at?: true
    _all?: true
  }

  export type Sp_view_historiesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_view_histories to aggregate.
     */
    where?: sp_view_historiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_view_histories to fetch.
     */
    orderBy?: sp_view_historiesOrderByWithRelationInput | sp_view_historiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sp_view_historiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_view_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_view_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sp_view_histories
    **/
    _count?: true | Sp_view_historiesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Sp_view_historiesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Sp_view_historiesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sp_view_historiesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sp_view_historiesMaxAggregateInputType
  }

  export type GetSp_view_historiesAggregateType<T extends Sp_view_historiesAggregateArgs> = {
        [P in keyof T & keyof AggregateSp_view_histories]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSp_view_histories[P]>
      : GetScalarType<T[P], AggregateSp_view_histories[P]>
  }




  export type sp_view_historiesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sp_view_historiesWhereInput
    orderBy?: sp_view_historiesOrderByWithAggregationInput | sp_view_historiesOrderByWithAggregationInput[]
    by: Sp_view_historiesScalarFieldEnum[] | Sp_view_historiesScalarFieldEnum
    having?: sp_view_historiesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sp_view_historiesCountAggregateInputType | true
    _avg?: Sp_view_historiesAvgAggregateInputType
    _sum?: Sp_view_historiesSumAggregateInputType
    _min?: Sp_view_historiesMinAggregateInputType
    _max?: Sp_view_historiesMaxAggregateInputType
  }

  export type Sp_view_historiesGroupByOutputType = {
    id: bigint
    user_id: bigint
    video_id: bigint
    is_finished: boolean
    video_group_id: bigint
    created_at: Date
    updated_at: Date | null
    deleted_at: Date | null
    _count: Sp_view_historiesCountAggregateOutputType | null
    _avg: Sp_view_historiesAvgAggregateOutputType | null
    _sum: Sp_view_historiesSumAggregateOutputType | null
    _min: Sp_view_historiesMinAggregateOutputType | null
    _max: Sp_view_historiesMaxAggregateOutputType | null
  }

  type GetSp_view_historiesGroupByPayload<T extends sp_view_historiesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sp_view_historiesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sp_view_historiesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sp_view_historiesGroupByOutputType[P]>
            : GetScalarType<T[P], Sp_view_historiesGroupByOutputType[P]>
        }
      >
    >


  export type sp_view_historiesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    video_id?: boolean
    is_finished?: boolean
    video_group_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }, ExtArgs["result"]["sp_view_histories"]>


  export type sp_view_historiesSelectScalar = {
    id?: boolean
    user_id?: boolean
    video_id?: boolean
    is_finished?: boolean
    video_group_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    deleted_at?: boolean
  }


  export type $sp_view_historiesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sp_view_histories"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      user_id: bigint
      video_id: bigint
      is_finished: boolean
      video_group_id: bigint
      created_at: Date
      updated_at: Date | null
      deleted_at: Date | null
    }, ExtArgs["result"]["sp_view_histories"]>
    composites: {}
  }

  type sp_view_historiesGetPayload<S extends boolean | null | undefined | sp_view_historiesDefaultArgs> = $Result.GetResult<Prisma.$sp_view_historiesPayload, S>

  type sp_view_historiesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<sp_view_historiesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Sp_view_historiesCountAggregateInputType | true
    }

  export interface sp_view_historiesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sp_view_histories'], meta: { name: 'sp_view_histories' } }
    /**
     * Find zero or one Sp_view_histories that matches the filter.
     * @param {sp_view_historiesFindUniqueArgs} args - Arguments to find a Sp_view_histories
     * @example
     * // Get one Sp_view_histories
     * const sp_view_histories = await prisma.sp_view_histories.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sp_view_historiesFindUniqueArgs>(args: SelectSubset<T, sp_view_historiesFindUniqueArgs<ExtArgs>>): Prisma__sp_view_historiesClient<$Result.GetResult<Prisma.$sp_view_historiesPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Sp_view_histories that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {sp_view_historiesFindUniqueOrThrowArgs} args - Arguments to find a Sp_view_histories
     * @example
     * // Get one Sp_view_histories
     * const sp_view_histories = await prisma.sp_view_histories.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sp_view_historiesFindUniqueOrThrowArgs>(args: SelectSubset<T, sp_view_historiesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sp_view_historiesClient<$Result.GetResult<Prisma.$sp_view_historiesPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Sp_view_histories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_view_historiesFindFirstArgs} args - Arguments to find a Sp_view_histories
     * @example
     * // Get one Sp_view_histories
     * const sp_view_histories = await prisma.sp_view_histories.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sp_view_historiesFindFirstArgs>(args?: SelectSubset<T, sp_view_historiesFindFirstArgs<ExtArgs>>): Prisma__sp_view_historiesClient<$Result.GetResult<Prisma.$sp_view_historiesPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Sp_view_histories that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_view_historiesFindFirstOrThrowArgs} args - Arguments to find a Sp_view_histories
     * @example
     * // Get one Sp_view_histories
     * const sp_view_histories = await prisma.sp_view_histories.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sp_view_historiesFindFirstOrThrowArgs>(args?: SelectSubset<T, sp_view_historiesFindFirstOrThrowArgs<ExtArgs>>): Prisma__sp_view_historiesClient<$Result.GetResult<Prisma.$sp_view_historiesPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Sp_view_histories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_view_historiesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sp_view_histories
     * const sp_view_histories = await prisma.sp_view_histories.findMany()
     * 
     * // Get first 10 Sp_view_histories
     * const sp_view_histories = await prisma.sp_view_histories.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sp_view_historiesWithIdOnly = await prisma.sp_view_histories.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sp_view_historiesFindManyArgs>(args?: SelectSubset<T, sp_view_historiesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sp_view_historiesPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Sp_view_histories.
     * @param {sp_view_historiesCreateArgs} args - Arguments to create a Sp_view_histories.
     * @example
     * // Create one Sp_view_histories
     * const Sp_view_histories = await prisma.sp_view_histories.create({
     *   data: {
     *     // ... data to create a Sp_view_histories
     *   }
     * })
     * 
     */
    create<T extends sp_view_historiesCreateArgs>(args: SelectSubset<T, sp_view_historiesCreateArgs<ExtArgs>>): Prisma__sp_view_historiesClient<$Result.GetResult<Prisma.$sp_view_historiesPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Sp_view_histories.
     * @param {sp_view_historiesCreateManyArgs} args - Arguments to create many Sp_view_histories.
     * @example
     * // Create many Sp_view_histories
     * const sp_view_histories = await prisma.sp_view_histories.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sp_view_historiesCreateManyArgs>(args?: SelectSubset<T, sp_view_historiesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sp_view_histories.
     * @param {sp_view_historiesDeleteArgs} args - Arguments to delete one Sp_view_histories.
     * @example
     * // Delete one Sp_view_histories
     * const Sp_view_histories = await prisma.sp_view_histories.delete({
     *   where: {
     *     // ... filter to delete one Sp_view_histories
     *   }
     * })
     * 
     */
    delete<T extends sp_view_historiesDeleteArgs>(args: SelectSubset<T, sp_view_historiesDeleteArgs<ExtArgs>>): Prisma__sp_view_historiesClient<$Result.GetResult<Prisma.$sp_view_historiesPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Sp_view_histories.
     * @param {sp_view_historiesUpdateArgs} args - Arguments to update one Sp_view_histories.
     * @example
     * // Update one Sp_view_histories
     * const sp_view_histories = await prisma.sp_view_histories.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sp_view_historiesUpdateArgs>(args: SelectSubset<T, sp_view_historiesUpdateArgs<ExtArgs>>): Prisma__sp_view_historiesClient<$Result.GetResult<Prisma.$sp_view_historiesPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Sp_view_histories.
     * @param {sp_view_historiesDeleteManyArgs} args - Arguments to filter Sp_view_histories to delete.
     * @example
     * // Delete a few Sp_view_histories
     * const { count } = await prisma.sp_view_histories.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sp_view_historiesDeleteManyArgs>(args?: SelectSubset<T, sp_view_historiesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sp_view_histories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_view_historiesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sp_view_histories
     * const sp_view_histories = await prisma.sp_view_histories.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sp_view_historiesUpdateManyArgs>(args: SelectSubset<T, sp_view_historiesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sp_view_histories.
     * @param {sp_view_historiesUpsertArgs} args - Arguments to update or create a Sp_view_histories.
     * @example
     * // Update or create a Sp_view_histories
     * const sp_view_histories = await prisma.sp_view_histories.upsert({
     *   create: {
     *     // ... data to create a Sp_view_histories
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sp_view_histories we want to update
     *   }
     * })
     */
    upsert<T extends sp_view_historiesUpsertArgs>(args: SelectSubset<T, sp_view_historiesUpsertArgs<ExtArgs>>): Prisma__sp_view_historiesClient<$Result.GetResult<Prisma.$sp_view_historiesPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Sp_view_histories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_view_historiesCountArgs} args - Arguments to filter Sp_view_histories to count.
     * @example
     * // Count the number of Sp_view_histories
     * const count = await prisma.sp_view_histories.count({
     *   where: {
     *     // ... the filter for the Sp_view_histories we want to count
     *   }
     * })
    **/
    count<T extends sp_view_historiesCountArgs>(
      args?: Subset<T, sp_view_historiesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sp_view_historiesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sp_view_histories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sp_view_historiesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sp_view_historiesAggregateArgs>(args: Subset<T, Sp_view_historiesAggregateArgs>): Prisma.PrismaPromise<GetSp_view_historiesAggregateType<T>>

    /**
     * Group by Sp_view_histories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sp_view_historiesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sp_view_historiesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sp_view_historiesGroupByArgs['orderBy'] }
        : { orderBy?: sp_view_historiesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sp_view_historiesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSp_view_historiesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sp_view_histories model
   */
  readonly fields: sp_view_historiesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sp_view_histories.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sp_view_historiesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sp_view_histories model
   */ 
  interface sp_view_historiesFieldRefs {
    readonly id: FieldRef<"sp_view_histories", 'BigInt'>
    readonly user_id: FieldRef<"sp_view_histories", 'BigInt'>
    readonly video_id: FieldRef<"sp_view_histories", 'BigInt'>
    readonly is_finished: FieldRef<"sp_view_histories", 'Boolean'>
    readonly video_group_id: FieldRef<"sp_view_histories", 'BigInt'>
    readonly created_at: FieldRef<"sp_view_histories", 'DateTime'>
    readonly updated_at: FieldRef<"sp_view_histories", 'DateTime'>
    readonly deleted_at: FieldRef<"sp_view_histories", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sp_view_histories findUnique
   */
  export type sp_view_historiesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_view_histories
     */
    select?: sp_view_historiesSelect<ExtArgs> | null
    /**
     * Filter, which sp_view_histories to fetch.
     */
    where: sp_view_historiesWhereUniqueInput
  }

  /**
   * sp_view_histories findUniqueOrThrow
   */
  export type sp_view_historiesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_view_histories
     */
    select?: sp_view_historiesSelect<ExtArgs> | null
    /**
     * Filter, which sp_view_histories to fetch.
     */
    where: sp_view_historiesWhereUniqueInput
  }

  /**
   * sp_view_histories findFirst
   */
  export type sp_view_historiesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_view_histories
     */
    select?: sp_view_historiesSelect<ExtArgs> | null
    /**
     * Filter, which sp_view_histories to fetch.
     */
    where?: sp_view_historiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_view_histories to fetch.
     */
    orderBy?: sp_view_historiesOrderByWithRelationInput | sp_view_historiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_view_histories.
     */
    cursor?: sp_view_historiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_view_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_view_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_view_histories.
     */
    distinct?: Sp_view_historiesScalarFieldEnum | Sp_view_historiesScalarFieldEnum[]
  }

  /**
   * sp_view_histories findFirstOrThrow
   */
  export type sp_view_historiesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_view_histories
     */
    select?: sp_view_historiesSelect<ExtArgs> | null
    /**
     * Filter, which sp_view_histories to fetch.
     */
    where?: sp_view_historiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_view_histories to fetch.
     */
    orderBy?: sp_view_historiesOrderByWithRelationInput | sp_view_historiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sp_view_histories.
     */
    cursor?: sp_view_historiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_view_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_view_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sp_view_histories.
     */
    distinct?: Sp_view_historiesScalarFieldEnum | Sp_view_historiesScalarFieldEnum[]
  }

  /**
   * sp_view_histories findMany
   */
  export type sp_view_historiesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_view_histories
     */
    select?: sp_view_historiesSelect<ExtArgs> | null
    /**
     * Filter, which sp_view_histories to fetch.
     */
    where?: sp_view_historiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sp_view_histories to fetch.
     */
    orderBy?: sp_view_historiesOrderByWithRelationInput | sp_view_historiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sp_view_histories.
     */
    cursor?: sp_view_historiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sp_view_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sp_view_histories.
     */
    skip?: number
    distinct?: Sp_view_historiesScalarFieldEnum | Sp_view_historiesScalarFieldEnum[]
  }

  /**
   * sp_view_histories create
   */
  export type sp_view_historiesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_view_histories
     */
    select?: sp_view_historiesSelect<ExtArgs> | null
    /**
     * The data needed to create a sp_view_histories.
     */
    data: XOR<sp_view_historiesCreateInput, sp_view_historiesUncheckedCreateInput>
  }

  /**
   * sp_view_histories createMany
   */
  export type sp_view_historiesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sp_view_histories.
     */
    data: sp_view_historiesCreateManyInput | sp_view_historiesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sp_view_histories update
   */
  export type sp_view_historiesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_view_histories
     */
    select?: sp_view_historiesSelect<ExtArgs> | null
    /**
     * The data needed to update a sp_view_histories.
     */
    data: XOR<sp_view_historiesUpdateInput, sp_view_historiesUncheckedUpdateInput>
    /**
     * Choose, which sp_view_histories to update.
     */
    where: sp_view_historiesWhereUniqueInput
  }

  /**
   * sp_view_histories updateMany
   */
  export type sp_view_historiesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sp_view_histories.
     */
    data: XOR<sp_view_historiesUpdateManyMutationInput, sp_view_historiesUncheckedUpdateManyInput>
    /**
     * Filter which sp_view_histories to update
     */
    where?: sp_view_historiesWhereInput
  }

  /**
   * sp_view_histories upsert
   */
  export type sp_view_historiesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_view_histories
     */
    select?: sp_view_historiesSelect<ExtArgs> | null
    /**
     * The filter to search for the sp_view_histories to update in case it exists.
     */
    where: sp_view_historiesWhereUniqueInput
    /**
     * In case the sp_view_histories found by the `where` argument doesn't exist, create a new sp_view_histories with this data.
     */
    create: XOR<sp_view_historiesCreateInput, sp_view_historiesUncheckedCreateInput>
    /**
     * In case the sp_view_histories was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sp_view_historiesUpdateInput, sp_view_historiesUncheckedUpdateInput>
  }

  /**
   * sp_view_histories delete
   */
  export type sp_view_historiesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_view_histories
     */
    select?: sp_view_historiesSelect<ExtArgs> | null
    /**
     * Filter which sp_view_histories to delete.
     */
    where: sp_view_historiesWhereUniqueInput
  }

  /**
   * sp_view_histories deleteMany
   */
  export type sp_view_historiesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sp_view_histories to delete
     */
    where?: sp_view_historiesWhereInput
  }

  /**
   * sp_view_histories without action
   */
  export type sp_view_historiesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sp_view_histories
     */
    select?: sp_view_historiesSelect<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const Sp_admin_menusScalarFieldEnum: {
    id: 'id',
    parent_id: 'parent_id',
    path: 'path',
    name: 'name',
    type_name: 'type_name',
    component: 'component',
    sort: 'sort',
    icon: 'icon',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at'
  };

  export type Sp_admin_menusScalarFieldEnum = (typeof Sp_admin_menusScalarFieldEnum)[keyof typeof Sp_admin_menusScalarFieldEnum]


  export const Sp_admin_rolesScalarFieldEnum: {
    id: 'id',
    name: 'name',
    status: 'status',
    desc: 'desc',
    rules: 'rules',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at'
  };

  export type Sp_admin_rolesScalarFieldEnum = (typeof Sp_admin_rolesScalarFieldEnum)[keyof typeof Sp_admin_rolesScalarFieldEnum]


  export const Sp_admin_tokensScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    token: 'token',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at'
  };

  export type Sp_admin_tokensScalarFieldEnum = (typeof Sp_admin_tokensScalarFieldEnum)[keyof typeof Sp_admin_tokensScalarFieldEnum]


  export const Sp_adminsScalarFieldEnum: {
    id: 'id',
    username: 'username',
    password: 'password',
    password_modify: 'password_modify',
    roles: 'roles',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at',
    status: 'status'
  };

  export type Sp_adminsScalarFieldEnum = (typeof Sp_adminsScalarFieldEnum)[keyof typeof Sp_adminsScalarFieldEnum]


  export const Sp_failed_jobsScalarFieldEnum: {
    id: 'id',
    uuid: 'uuid',
    connection: 'connection',
    queue: 'queue',
    payload: 'payload',
    exception: 'exception',
    failed_at: 'failed_at'
  };

  export type Sp_failed_jobsScalarFieldEnum = (typeof Sp_failed_jobsScalarFieldEnum)[keyof typeof Sp_failed_jobsScalarFieldEnum]


  export const Sp_filesScalarFieldEnum: {
    id: 'id',
    file_id: 'file_id',
    url: 'url',
    title: 'title',
    type: 'type',
    group_id: 'group_id',
    sort: 'sort',
    cover: 'cover',
    info: 'info',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at'
  };

  export type Sp_filesScalarFieldEnum = (typeof Sp_filesScalarFieldEnum)[keyof typeof Sp_filesScalarFieldEnum]


  export const Sp_goodsScalarFieldEnum: {
    id: 'id',
    type: 'type',
    name: 'name',
    price: 'price',
    coins: 'coins',
    product_tier: 'product_tier',
    bonus: 'bonus',
    sort: 'sort',
    desc: 'desc',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at'
  };

  export type Sp_goodsScalarFieldEnum = (typeof Sp_goodsScalarFieldEnum)[keyof typeof Sp_goodsScalarFieldEnum]


  export const Sp_home_seriesScalarFieldEnum: {
    id: 'id',
    title: 'title',
    icon: 'icon',
    desc: 'desc',
    sort: 'sort',
    is_more: 'is_more',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at'
  };

  export type Sp_home_seriesScalarFieldEnum = (typeof Sp_home_seriesScalarFieldEnum)[keyof typeof Sp_home_seriesScalarFieldEnum]


  export const Sp_login_logsScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    logs: 'logs',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at'
  };

  export type Sp_login_logsScalarFieldEnum = (typeof Sp_login_logsScalarFieldEnum)[keyof typeof Sp_login_logsScalarFieldEnum]


  export const Sp_migrationsScalarFieldEnum: {
    id: 'id',
    migration: 'migration',
    batch: 'batch'
  };

  export type Sp_migrationsScalarFieldEnum = (typeof Sp_migrationsScalarFieldEnum)[keyof typeof Sp_migrationsScalarFieldEnum]


  export const Sp_ordersScalarFieldEnum: {
    id: 'id',
    order_id: 'order_id',
    pay_order_id: 'pay_order_id',
    user_id: 'user_id',
    goods_id: 'goods_id',
    total_amount: 'total_amount',
    actual_amount: 'actual_amount',
    pay_type: 'pay_type',
    callback_status: 'callback_status',
    status: 'status',
    os_type: 'os_type',
    dev_no: 'dev_no',
    order_ip: 'order_ip',
    order_country: 'order_country',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at'
  };

  export type Sp_ordersScalarFieldEnum = (typeof Sp_ordersScalarFieldEnum)[keyof typeof Sp_ordersScalarFieldEnum]


  export const Sp_payment_recordsScalarFieldEnum: {
    id: 'id',
    order_id: 'order_id',
    user_id: 'user_id',
    amount: 'amount',
    coins: 'coins',
    bonus: 'bonus',
    type: 'type',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at'
  };

  export type Sp_payment_recordsScalarFieldEnum = (typeof Sp_payment_recordsScalarFieldEnum)[keyof typeof Sp_payment_recordsScalarFieldEnum]


  export const Sp_privacy_settingsScalarFieldEnum: {
    id: 'id',
    title: 'title',
    type: 'type',
    content: 'content',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at'
  };

  export type Sp_privacy_settingsScalarFieldEnum = (typeof Sp_privacy_settingsScalarFieldEnum)[keyof typeof Sp_privacy_settingsScalarFieldEnum]


  export const Sp_purchase_recordsScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    video_group_id: 'video_group_id',
    video_id: 'video_id',
    costs: 'costs',
    pay_type: 'pay_type',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at'
  };

  export type Sp_purchase_recordsScalarFieldEnum = (typeof Sp_purchase_recordsScalarFieldEnum)[keyof typeof Sp_purchase_recordsScalarFieldEnum]


  export const Sp_reward_recordsScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    reward_id: 'reward_id',
    updated_at: 'updated_at',
    created_at: 'created_at',
    deleted_at: 'deleted_at'
  };

  export type Sp_reward_recordsScalarFieldEnum = (typeof Sp_reward_recordsScalarFieldEnum)[keyof typeof Sp_reward_recordsScalarFieldEnum]


  export const Sp_rewards_listScalarFieldEnum: {
    id: 'id',
    type: 'type',
    is_once: 'is_once',
    max_nums: 'max_nums',
    sort: 'sort',
    bonus: 'bonus',
    updated_at: 'updated_at',
    created_at: 'created_at',
    deleted_at: 'deleted_at'
  };

  export type Sp_rewards_listScalarFieldEnum = (typeof Sp_rewards_listScalarFieldEnum)[keyof typeof Sp_rewards_listScalarFieldEnum]


  export const Sp_rewards_typeScalarFieldEnum: {
    id: 'id',
    name: 'name',
    status: 'status',
    updated_at: 'updated_at',
    created_at: 'created_at',
    deleted_at: 'deleted_at'
  };

  export type Sp_rewards_typeScalarFieldEnum = (typeof Sp_rewards_typeScalarFieldEnum)[keyof typeof Sp_rewards_typeScalarFieldEnum]


  export const Sp_tokensScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    token: 'token',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at'
  };

  export type Sp_tokensScalarFieldEnum = (typeof Sp_tokensScalarFieldEnum)[keyof typeof Sp_tokensScalarFieldEnum]


  export const Sp_upload_logsScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    sid: 'sid',
    name: 'name',
    file_id: 'file_id',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at'
  };

  export type Sp_upload_logsScalarFieldEnum = (typeof Sp_upload_logsScalarFieldEnum)[keyof typeof Sp_upload_logsScalarFieldEnum]


  export const Sp_user_check_inScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    bonus: 'bonus',
    days: 'days',
    type: 'type',
    updated_at: 'updated_at',
    created_at: 'created_at',
    deleted_at: 'deleted_at'
  };

  export type Sp_user_check_inScalarFieldEnum = (typeof Sp_user_check_inScalarFieldEnum)[keyof typeof Sp_user_check_inScalarFieldEnum]


  export const Sp_user_collectionsScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    video_id: 'video_id',
    video_group_id: 'video_group_id',
    status: 'status',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at'
  };

  export type Sp_user_collectionsScalarFieldEnum = (typeof Sp_user_collectionsScalarFieldEnum)[keyof typeof Sp_user_collectionsScalarFieldEnum]


  export const Sp_user_likesScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    video_id: 'video_id',
    video_group_id: 'video_group_id',
    status: 'status',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at'
  };

  export type Sp_user_likesScalarFieldEnum = (typeof Sp_user_likesScalarFieldEnum)[keyof typeof Sp_user_likesScalarFieldEnum]


  export const Sp_user_my_listsScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    video_group_id: 'video_group_id',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at'
  };

  export type Sp_user_my_listsScalarFieldEnum = (typeof Sp_user_my_listsScalarFieldEnum)[keyof typeof Sp_user_my_listsScalarFieldEnum]


  export const Sp_user_suggestsScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    title: 'title',
    content: 'content',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at',
    email: 'email'
  };

  export type Sp_user_suggestsScalarFieldEnum = (typeof Sp_user_suggestsScalarFieldEnum)[keyof typeof Sp_user_suggestsScalarFieldEnum]


  export const Sp_usersScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    open_id: 'open_id',
    bonus: 'bonus',
    coins: 'coins',
    email: 'email',
    avatar: 'avatar',
    nickname: 'nickname',
    age: 'age',
    gender: 'gender',
    login_type: 'login_type',
    last_login_time: 'last_login_time',
    register_ip: 'register_ip',
    login_ip: 'login_ip',
    register_country: 'register_country',
    login_country: 'login_country',
    register_dev_no: 'register_dev_no',
    login_dev_no: 'login_dev_no',
    register_os_type: 'register_os_type',
    login_os_type: 'login_os_type',
    is_disable: 'is_disable',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at'
  };

  export type Sp_usersScalarFieldEnum = (typeof Sp_usersScalarFieldEnum)[keyof typeof Sp_usersScalarFieldEnum]


  export const Sp_video_categoriesScalarFieldEnum: {
    id: 'id',
    name: 'name',
    desc: 'desc',
    status: 'status',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at'
  };

  export type Sp_video_categoriesScalarFieldEnum = (typeof Sp_video_categoriesScalarFieldEnum)[keyof typeof Sp_video_categoriesScalarFieldEnum]


  export const Sp_video_group_categoriesScalarFieldEnum: {
    id: 'id',
    video_group_id: 'video_group_id',
    category_id: 'category_id',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at'
  };

  export type Sp_video_group_categoriesScalarFieldEnum = (typeof Sp_video_group_categoriesScalarFieldEnum)[keyof typeof Sp_video_group_categoriesScalarFieldEnum]


  export const Sp_video_groupsScalarFieldEnum: {
    id: 'id',
    series_id: 'series_id',
    category_id: 'category_id',
    title: 'title',
    desc: 'desc',
    count: 'count',
    status: 'status',
    cover_id: 'cover_id',
    costs: 'costs',
    pay_type: 'pay_type',
    free_count: 'free_count',
    is_hot: 'is_hot',
    sort: 'sort',
    total_nums: 'total_nums',
    updated_nums: 'updated_nums',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at'
  };

  export type Sp_video_groupsScalarFieldEnum = (typeof Sp_video_groupsScalarFieldEnum)[keyof typeof Sp_video_groupsScalarFieldEnum]


  export const Sp_videosScalarFieldEnum: {
    id: 'id',
    group_id: 'group_id',
    file_id: 'file_id',
    title: 'title',
    cover: 'cover',
    desc: 'desc',
    sort: 'sort',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at'
  };

  export type Sp_videosScalarFieldEnum = (typeof Sp_videosScalarFieldEnum)[keyof typeof Sp_videosScalarFieldEnum]


  export const Sp_view_historiesScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    video_id: 'video_id',
    is_finished: 'is_finished',
    video_group_id: 'video_group_id',
    created_at: 'created_at',
    updated_at: 'updated_at',
    deleted_at: 'deleted_at'
  };

  export type Sp_view_historiesScalarFieldEnum = (typeof Sp_view_historiesScalarFieldEnum)[keyof typeof Sp_view_historiesScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const sp_admin_menusOrderByRelevanceFieldEnum: {
    path: 'path',
    name: 'name',
    type_name: 'type_name',
    component: 'component',
    icon: 'icon'
  };

  export type sp_admin_menusOrderByRelevanceFieldEnum = (typeof sp_admin_menusOrderByRelevanceFieldEnum)[keyof typeof sp_admin_menusOrderByRelevanceFieldEnum]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  export const sp_admin_rolesOrderByRelevanceFieldEnum: {
    name: 'name',
    desc: 'desc'
  };

  export type sp_admin_rolesOrderByRelevanceFieldEnum = (typeof sp_admin_rolesOrderByRelevanceFieldEnum)[keyof typeof sp_admin_rolesOrderByRelevanceFieldEnum]


  export const sp_admin_tokensOrderByRelevanceFieldEnum: {
    token: 'token'
  };

  export type sp_admin_tokensOrderByRelevanceFieldEnum = (typeof sp_admin_tokensOrderByRelevanceFieldEnum)[keyof typeof sp_admin_tokensOrderByRelevanceFieldEnum]


  export const sp_adminsOrderByRelevanceFieldEnum: {
    username: 'username',
    password: 'password'
  };

  export type sp_adminsOrderByRelevanceFieldEnum = (typeof sp_adminsOrderByRelevanceFieldEnum)[keyof typeof sp_adminsOrderByRelevanceFieldEnum]


  export const sp_failed_jobsOrderByRelevanceFieldEnum: {
    uuid: 'uuid',
    connection: 'connection',
    queue: 'queue',
    payload: 'payload',
    exception: 'exception'
  };

  export type sp_failed_jobsOrderByRelevanceFieldEnum = (typeof sp_failed_jobsOrderByRelevanceFieldEnum)[keyof typeof sp_failed_jobsOrderByRelevanceFieldEnum]


  export const sp_filesOrderByRelevanceFieldEnum: {
    file_id: 'file_id',
    url: 'url',
    title: 'title',
    cover: 'cover'
  };

  export type sp_filesOrderByRelevanceFieldEnum = (typeof sp_filesOrderByRelevanceFieldEnum)[keyof typeof sp_filesOrderByRelevanceFieldEnum]


  export const sp_goodsOrderByRelevanceFieldEnum: {
    name: 'name',
    product_tier: 'product_tier',
    desc: 'desc'
  };

  export type sp_goodsOrderByRelevanceFieldEnum = (typeof sp_goodsOrderByRelevanceFieldEnum)[keyof typeof sp_goodsOrderByRelevanceFieldEnum]


  export const sp_home_seriesOrderByRelevanceFieldEnum: {
    title: 'title',
    icon: 'icon',
    desc: 'desc'
  };

  export type sp_home_seriesOrderByRelevanceFieldEnum = (typeof sp_home_seriesOrderByRelevanceFieldEnum)[keyof typeof sp_home_seriesOrderByRelevanceFieldEnum]


  export const sp_migrationsOrderByRelevanceFieldEnum: {
    migration: 'migration'
  };

  export type sp_migrationsOrderByRelevanceFieldEnum = (typeof sp_migrationsOrderByRelevanceFieldEnum)[keyof typeof sp_migrationsOrderByRelevanceFieldEnum]


  export const sp_ordersOrderByRelevanceFieldEnum: {
    order_id: 'order_id',
    pay_order_id: 'pay_order_id',
    dev_no: 'dev_no',
    order_ip: 'order_ip',
    order_country: 'order_country'
  };

  export type sp_ordersOrderByRelevanceFieldEnum = (typeof sp_ordersOrderByRelevanceFieldEnum)[keyof typeof sp_ordersOrderByRelevanceFieldEnum]


  export const sp_payment_recordsOrderByRelevanceFieldEnum: {
    order_id: 'order_id'
  };

  export type sp_payment_recordsOrderByRelevanceFieldEnum = (typeof sp_payment_recordsOrderByRelevanceFieldEnum)[keyof typeof sp_payment_recordsOrderByRelevanceFieldEnum]


  export const sp_privacy_settingsOrderByRelevanceFieldEnum: {
    title: 'title',
    content: 'content'
  };

  export type sp_privacy_settingsOrderByRelevanceFieldEnum = (typeof sp_privacy_settingsOrderByRelevanceFieldEnum)[keyof typeof sp_privacy_settingsOrderByRelevanceFieldEnum]


  export const sp_rewards_typeOrderByRelevanceFieldEnum: {
    name: 'name'
  };

  export type sp_rewards_typeOrderByRelevanceFieldEnum = (typeof sp_rewards_typeOrderByRelevanceFieldEnum)[keyof typeof sp_rewards_typeOrderByRelevanceFieldEnum]


  export const sp_tokensOrderByRelevanceFieldEnum: {
    token: 'token'
  };

  export type sp_tokensOrderByRelevanceFieldEnum = (typeof sp_tokensOrderByRelevanceFieldEnum)[keyof typeof sp_tokensOrderByRelevanceFieldEnum]


  export const sp_upload_logsOrderByRelevanceFieldEnum: {
    name: 'name',
    file_id: 'file_id'
  };

  export type sp_upload_logsOrderByRelevanceFieldEnum = (typeof sp_upload_logsOrderByRelevanceFieldEnum)[keyof typeof sp_upload_logsOrderByRelevanceFieldEnum]


  export const sp_user_suggestsOrderByRelevanceFieldEnum: {
    title: 'title',
    content: 'content',
    email: 'email'
  };

  export type sp_user_suggestsOrderByRelevanceFieldEnum = (typeof sp_user_suggestsOrderByRelevanceFieldEnum)[keyof typeof sp_user_suggestsOrderByRelevanceFieldEnum]


  export const sp_usersOrderByRelevanceFieldEnum: {
    open_id: 'open_id',
    email: 'email',
    avatar: 'avatar',
    nickname: 'nickname',
    register_ip: 'register_ip',
    login_ip: 'login_ip',
    register_country: 'register_country',
    login_country: 'login_country',
    register_dev_no: 'register_dev_no',
    login_dev_no: 'login_dev_no'
  };

  export type sp_usersOrderByRelevanceFieldEnum = (typeof sp_usersOrderByRelevanceFieldEnum)[keyof typeof sp_usersOrderByRelevanceFieldEnum]


  export const sp_video_categoriesOrderByRelevanceFieldEnum: {
    name: 'name',
    desc: 'desc'
  };

  export type sp_video_categoriesOrderByRelevanceFieldEnum = (typeof sp_video_categoriesOrderByRelevanceFieldEnum)[keyof typeof sp_video_categoriesOrderByRelevanceFieldEnum]


  export const sp_video_groupsOrderByRelevanceFieldEnum: {
    title: 'title',
    desc: 'desc'
  };

  export type sp_video_groupsOrderByRelevanceFieldEnum = (typeof sp_video_groupsOrderByRelevanceFieldEnum)[keyof typeof sp_video_groupsOrderByRelevanceFieldEnum]


  export const sp_videosOrderByRelevanceFieldEnum: {
    title: 'title',
    cover: 'cover',
    desc: 'desc'
  };

  export type sp_videosOrderByRelevanceFieldEnum = (typeof sp_videosOrderByRelevanceFieldEnum)[keyof typeof sp_videosOrderByRelevanceFieldEnum]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'BigInt'
   */
  export type BigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    
  /**
   * Deep Input Types
   */


  export type sp_admin_menusWhereInput = {
    AND?: sp_admin_menusWhereInput | sp_admin_menusWhereInput[]
    OR?: sp_admin_menusWhereInput[]
    NOT?: sp_admin_menusWhereInput | sp_admin_menusWhereInput[]
    id?: IntFilter<"sp_admin_menus"> | number
    parent_id?: IntFilter<"sp_admin_menus"> | number
    path?: StringFilter<"sp_admin_menus"> | string
    name?: StringFilter<"sp_admin_menus"> | string
    type_name?: StringFilter<"sp_admin_menus"> | string
    component?: StringFilter<"sp_admin_menus"> | string
    sort?: IntFilter<"sp_admin_menus"> | number
    icon?: StringFilter<"sp_admin_menus"> | string
    created_at?: DateTimeFilter<"sp_admin_menus"> | Date | string
    updated_at?: DateTimeNullableFilter<"sp_admin_menus"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_admin_menus"> | Date | string | null
  }

  export type sp_admin_menusOrderByWithRelationInput = {
    id?: SortOrder
    parent_id?: SortOrder
    path?: SortOrder
    name?: SortOrder
    type_name?: SortOrder
    component?: SortOrder
    sort?: SortOrder
    icon?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _relevance?: sp_admin_menusOrderByRelevanceInput
  }

  export type sp_admin_menusWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: sp_admin_menusWhereInput | sp_admin_menusWhereInput[]
    OR?: sp_admin_menusWhereInput[]
    NOT?: sp_admin_menusWhereInput | sp_admin_menusWhereInput[]
    parent_id?: IntFilter<"sp_admin_menus"> | number
    path?: StringFilter<"sp_admin_menus"> | string
    name?: StringFilter<"sp_admin_menus"> | string
    type_name?: StringFilter<"sp_admin_menus"> | string
    component?: StringFilter<"sp_admin_menus"> | string
    sort?: IntFilter<"sp_admin_menus"> | number
    icon?: StringFilter<"sp_admin_menus"> | string
    created_at?: DateTimeFilter<"sp_admin_menus"> | Date | string
    updated_at?: DateTimeNullableFilter<"sp_admin_menus"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_admin_menus"> | Date | string | null
  }, "id">

  export type sp_admin_menusOrderByWithAggregationInput = {
    id?: SortOrder
    parent_id?: SortOrder
    path?: SortOrder
    name?: SortOrder
    type_name?: SortOrder
    component?: SortOrder
    sort?: SortOrder
    icon?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: sp_admin_menusCountOrderByAggregateInput
    _avg?: sp_admin_menusAvgOrderByAggregateInput
    _max?: sp_admin_menusMaxOrderByAggregateInput
    _min?: sp_admin_menusMinOrderByAggregateInput
    _sum?: sp_admin_menusSumOrderByAggregateInput
  }

  export type sp_admin_menusScalarWhereWithAggregatesInput = {
    AND?: sp_admin_menusScalarWhereWithAggregatesInput | sp_admin_menusScalarWhereWithAggregatesInput[]
    OR?: sp_admin_menusScalarWhereWithAggregatesInput[]
    NOT?: sp_admin_menusScalarWhereWithAggregatesInput | sp_admin_menusScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"sp_admin_menus"> | number
    parent_id?: IntWithAggregatesFilter<"sp_admin_menus"> | number
    path?: StringWithAggregatesFilter<"sp_admin_menus"> | string
    name?: StringWithAggregatesFilter<"sp_admin_menus"> | string
    type_name?: StringWithAggregatesFilter<"sp_admin_menus"> | string
    component?: StringWithAggregatesFilter<"sp_admin_menus"> | string
    sort?: IntWithAggregatesFilter<"sp_admin_menus"> | number
    icon?: StringWithAggregatesFilter<"sp_admin_menus"> | string
    created_at?: DateTimeWithAggregatesFilter<"sp_admin_menus"> | Date | string
    updated_at?: DateTimeNullableWithAggregatesFilter<"sp_admin_menus"> | Date | string | null
    deleted_at?: DateTimeNullableWithAggregatesFilter<"sp_admin_menus"> | Date | string | null
  }

  export type sp_admin_rolesWhereInput = {
    AND?: sp_admin_rolesWhereInput | sp_admin_rolesWhereInput[]
    OR?: sp_admin_rolesWhereInput[]
    NOT?: sp_admin_rolesWhereInput | sp_admin_rolesWhereInput[]
    id?: IntFilter<"sp_admin_roles"> | number
    name?: StringFilter<"sp_admin_roles"> | string
    status?: BoolNullableFilter<"sp_admin_roles"> | boolean | null
    desc?: StringFilter<"sp_admin_roles"> | string
    rules?: JsonNullableFilter<"sp_admin_roles">
    created_at?: DateTimeFilter<"sp_admin_roles"> | Date | string
    updated_at?: DateTimeNullableFilter<"sp_admin_roles"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_admin_roles"> | Date | string | null
  }

  export type sp_admin_rolesOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    status?: SortOrderInput | SortOrder
    desc?: SortOrder
    rules?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _relevance?: sp_admin_rolesOrderByRelevanceInput
  }

  export type sp_admin_rolesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: sp_admin_rolesWhereInput | sp_admin_rolesWhereInput[]
    OR?: sp_admin_rolesWhereInput[]
    NOT?: sp_admin_rolesWhereInput | sp_admin_rolesWhereInput[]
    name?: StringFilter<"sp_admin_roles"> | string
    status?: BoolNullableFilter<"sp_admin_roles"> | boolean | null
    desc?: StringFilter<"sp_admin_roles"> | string
    rules?: JsonNullableFilter<"sp_admin_roles">
    created_at?: DateTimeFilter<"sp_admin_roles"> | Date | string
    updated_at?: DateTimeNullableFilter<"sp_admin_roles"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_admin_roles"> | Date | string | null
  }, "id">

  export type sp_admin_rolesOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    status?: SortOrderInput | SortOrder
    desc?: SortOrder
    rules?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: sp_admin_rolesCountOrderByAggregateInput
    _avg?: sp_admin_rolesAvgOrderByAggregateInput
    _max?: sp_admin_rolesMaxOrderByAggregateInput
    _min?: sp_admin_rolesMinOrderByAggregateInput
    _sum?: sp_admin_rolesSumOrderByAggregateInput
  }

  export type sp_admin_rolesScalarWhereWithAggregatesInput = {
    AND?: sp_admin_rolesScalarWhereWithAggregatesInput | sp_admin_rolesScalarWhereWithAggregatesInput[]
    OR?: sp_admin_rolesScalarWhereWithAggregatesInput[]
    NOT?: sp_admin_rolesScalarWhereWithAggregatesInput | sp_admin_rolesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"sp_admin_roles"> | number
    name?: StringWithAggregatesFilter<"sp_admin_roles"> | string
    status?: BoolNullableWithAggregatesFilter<"sp_admin_roles"> | boolean | null
    desc?: StringWithAggregatesFilter<"sp_admin_roles"> | string
    rules?: JsonNullableWithAggregatesFilter<"sp_admin_roles">
    created_at?: DateTimeWithAggregatesFilter<"sp_admin_roles"> | Date | string
    updated_at?: DateTimeNullableWithAggregatesFilter<"sp_admin_roles"> | Date | string | null
    deleted_at?: DateTimeNullableWithAggregatesFilter<"sp_admin_roles"> | Date | string | null
  }

  export type sp_admin_tokensWhereInput = {
    AND?: sp_admin_tokensWhereInput | sp_admin_tokensWhereInput[]
    OR?: sp_admin_tokensWhereInput[]
    NOT?: sp_admin_tokensWhereInput | sp_admin_tokensWhereInput[]
    id?: BigIntFilter<"sp_admin_tokens"> | bigint | number
    user_id?: IntFilter<"sp_admin_tokens"> | number
    token?: StringNullableFilter<"sp_admin_tokens"> | string | null
    created_at?: DateTimeNullableFilter<"sp_admin_tokens"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"sp_admin_tokens"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_admin_tokens"> | Date | string | null
  }

  export type sp_admin_tokensOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    token?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _relevance?: sp_admin_tokensOrderByRelevanceInput
  }

  export type sp_admin_tokensWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: sp_admin_tokensWhereInput | sp_admin_tokensWhereInput[]
    OR?: sp_admin_tokensWhereInput[]
    NOT?: sp_admin_tokensWhereInput | sp_admin_tokensWhereInput[]
    user_id?: IntFilter<"sp_admin_tokens"> | number
    token?: StringNullableFilter<"sp_admin_tokens"> | string | null
    created_at?: DateTimeNullableFilter<"sp_admin_tokens"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"sp_admin_tokens"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_admin_tokens"> | Date | string | null
  }, "id">

  export type sp_admin_tokensOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    token?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: sp_admin_tokensCountOrderByAggregateInput
    _avg?: sp_admin_tokensAvgOrderByAggregateInput
    _max?: sp_admin_tokensMaxOrderByAggregateInput
    _min?: sp_admin_tokensMinOrderByAggregateInput
    _sum?: sp_admin_tokensSumOrderByAggregateInput
  }

  export type sp_admin_tokensScalarWhereWithAggregatesInput = {
    AND?: sp_admin_tokensScalarWhereWithAggregatesInput | sp_admin_tokensScalarWhereWithAggregatesInput[]
    OR?: sp_admin_tokensScalarWhereWithAggregatesInput[]
    NOT?: sp_admin_tokensScalarWhereWithAggregatesInput | sp_admin_tokensScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"sp_admin_tokens"> | bigint | number
    user_id?: IntWithAggregatesFilter<"sp_admin_tokens"> | number
    token?: StringNullableWithAggregatesFilter<"sp_admin_tokens"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"sp_admin_tokens"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"sp_admin_tokens"> | Date | string | null
    deleted_at?: DateTimeNullableWithAggregatesFilter<"sp_admin_tokens"> | Date | string | null
  }

  export type sp_adminsWhereInput = {
    AND?: sp_adminsWhereInput | sp_adminsWhereInput[]
    OR?: sp_adminsWhereInput[]
    NOT?: sp_adminsWhereInput | sp_adminsWhereInput[]
    id?: IntFilter<"sp_admins"> | number
    username?: StringFilter<"sp_admins"> | string
    password?: StringFilter<"sp_admins"> | string
    password_modify?: IntFilter<"sp_admins"> | number
    roles?: JsonNullableFilter<"sp_admins">
    created_at?: DateTimeFilter<"sp_admins"> | Date | string
    updated_at?: DateTimeNullableFilter<"sp_admins"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_admins"> | Date | string | null
    status?: BoolFilter<"sp_admins"> | boolean
  }

  export type sp_adminsOrderByWithRelationInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    password_modify?: SortOrder
    roles?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    status?: SortOrder
    _relevance?: sp_adminsOrderByRelevanceInput
  }

  export type sp_adminsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: sp_adminsWhereInput | sp_adminsWhereInput[]
    OR?: sp_adminsWhereInput[]
    NOT?: sp_adminsWhereInput | sp_adminsWhereInput[]
    username?: StringFilter<"sp_admins"> | string
    password?: StringFilter<"sp_admins"> | string
    password_modify?: IntFilter<"sp_admins"> | number
    roles?: JsonNullableFilter<"sp_admins">
    created_at?: DateTimeFilter<"sp_admins"> | Date | string
    updated_at?: DateTimeNullableFilter<"sp_admins"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_admins"> | Date | string | null
    status?: BoolFilter<"sp_admins"> | boolean
  }, "id">

  export type sp_adminsOrderByWithAggregationInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    password_modify?: SortOrder
    roles?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    status?: SortOrder
    _count?: sp_adminsCountOrderByAggregateInput
    _avg?: sp_adminsAvgOrderByAggregateInput
    _max?: sp_adminsMaxOrderByAggregateInput
    _min?: sp_adminsMinOrderByAggregateInput
    _sum?: sp_adminsSumOrderByAggregateInput
  }

  export type sp_adminsScalarWhereWithAggregatesInput = {
    AND?: sp_adminsScalarWhereWithAggregatesInput | sp_adminsScalarWhereWithAggregatesInput[]
    OR?: sp_adminsScalarWhereWithAggregatesInput[]
    NOT?: sp_adminsScalarWhereWithAggregatesInput | sp_adminsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"sp_admins"> | number
    username?: StringWithAggregatesFilter<"sp_admins"> | string
    password?: StringWithAggregatesFilter<"sp_admins"> | string
    password_modify?: IntWithAggregatesFilter<"sp_admins"> | number
    roles?: JsonNullableWithAggregatesFilter<"sp_admins">
    created_at?: DateTimeWithAggregatesFilter<"sp_admins"> | Date | string
    updated_at?: DateTimeNullableWithAggregatesFilter<"sp_admins"> | Date | string | null
    deleted_at?: DateTimeNullableWithAggregatesFilter<"sp_admins"> | Date | string | null
    status?: BoolWithAggregatesFilter<"sp_admins"> | boolean
  }

  export type sp_failed_jobsWhereInput = {
    AND?: sp_failed_jobsWhereInput | sp_failed_jobsWhereInput[]
    OR?: sp_failed_jobsWhereInput[]
    NOT?: sp_failed_jobsWhereInput | sp_failed_jobsWhereInput[]
    id?: BigIntFilter<"sp_failed_jobs"> | bigint | number
    uuid?: StringFilter<"sp_failed_jobs"> | string
    connection?: StringFilter<"sp_failed_jobs"> | string
    queue?: StringFilter<"sp_failed_jobs"> | string
    payload?: StringFilter<"sp_failed_jobs"> | string
    exception?: StringFilter<"sp_failed_jobs"> | string
    failed_at?: DateTimeFilter<"sp_failed_jobs"> | Date | string
  }

  export type sp_failed_jobsOrderByWithRelationInput = {
    id?: SortOrder
    uuid?: SortOrder
    connection?: SortOrder
    queue?: SortOrder
    payload?: SortOrder
    exception?: SortOrder
    failed_at?: SortOrder
    _relevance?: sp_failed_jobsOrderByRelevanceInput
  }

  export type sp_failed_jobsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    uuid?: string
    AND?: sp_failed_jobsWhereInput | sp_failed_jobsWhereInput[]
    OR?: sp_failed_jobsWhereInput[]
    NOT?: sp_failed_jobsWhereInput | sp_failed_jobsWhereInput[]
    connection?: StringFilter<"sp_failed_jobs"> | string
    queue?: StringFilter<"sp_failed_jobs"> | string
    payload?: StringFilter<"sp_failed_jobs"> | string
    exception?: StringFilter<"sp_failed_jobs"> | string
    failed_at?: DateTimeFilter<"sp_failed_jobs"> | Date | string
  }, "id" | "uuid">

  export type sp_failed_jobsOrderByWithAggregationInput = {
    id?: SortOrder
    uuid?: SortOrder
    connection?: SortOrder
    queue?: SortOrder
    payload?: SortOrder
    exception?: SortOrder
    failed_at?: SortOrder
    _count?: sp_failed_jobsCountOrderByAggregateInput
    _avg?: sp_failed_jobsAvgOrderByAggregateInput
    _max?: sp_failed_jobsMaxOrderByAggregateInput
    _min?: sp_failed_jobsMinOrderByAggregateInput
    _sum?: sp_failed_jobsSumOrderByAggregateInput
  }

  export type sp_failed_jobsScalarWhereWithAggregatesInput = {
    AND?: sp_failed_jobsScalarWhereWithAggregatesInput | sp_failed_jobsScalarWhereWithAggregatesInput[]
    OR?: sp_failed_jobsScalarWhereWithAggregatesInput[]
    NOT?: sp_failed_jobsScalarWhereWithAggregatesInput | sp_failed_jobsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"sp_failed_jobs"> | bigint | number
    uuid?: StringWithAggregatesFilter<"sp_failed_jobs"> | string
    connection?: StringWithAggregatesFilter<"sp_failed_jobs"> | string
    queue?: StringWithAggregatesFilter<"sp_failed_jobs"> | string
    payload?: StringWithAggregatesFilter<"sp_failed_jobs"> | string
    exception?: StringWithAggregatesFilter<"sp_failed_jobs"> | string
    failed_at?: DateTimeWithAggregatesFilter<"sp_failed_jobs"> | Date | string
  }

  export type sp_filesWhereInput = {
    AND?: sp_filesWhereInput | sp_filesWhereInput[]
    OR?: sp_filesWhereInput[]
    NOT?: sp_filesWhereInput | sp_filesWhereInput[]
    id?: IntFilter<"sp_files"> | number
    file_id?: StringFilter<"sp_files"> | string
    url?: StringFilter<"sp_files"> | string
    title?: StringFilter<"sp_files"> | string
    type?: IntFilter<"sp_files"> | number
    group_id?: IntFilter<"sp_files"> | number
    sort?: IntNullableFilter<"sp_files"> | number | null
    cover?: StringNullableFilter<"sp_files"> | string | null
    info?: JsonNullableFilter<"sp_files">
    created_at?: DateTimeNullableFilter<"sp_files"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"sp_files"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_files"> | Date | string | null
  }

  export type sp_filesOrderByWithRelationInput = {
    id?: SortOrder
    file_id?: SortOrder
    url?: SortOrder
    title?: SortOrder
    type?: SortOrder
    group_id?: SortOrder
    sort?: SortOrderInput | SortOrder
    cover?: SortOrderInput | SortOrder
    info?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _relevance?: sp_filesOrderByRelevanceInput
  }

  export type sp_filesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    file_id?: string
    AND?: sp_filesWhereInput | sp_filesWhereInput[]
    OR?: sp_filesWhereInput[]
    NOT?: sp_filesWhereInput | sp_filesWhereInput[]
    url?: StringFilter<"sp_files"> | string
    title?: StringFilter<"sp_files"> | string
    type?: IntFilter<"sp_files"> | number
    group_id?: IntFilter<"sp_files"> | number
    sort?: IntNullableFilter<"sp_files"> | number | null
    cover?: StringNullableFilter<"sp_files"> | string | null
    info?: JsonNullableFilter<"sp_files">
    created_at?: DateTimeNullableFilter<"sp_files"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"sp_files"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_files"> | Date | string | null
  }, "id" | "file_id">

  export type sp_filesOrderByWithAggregationInput = {
    id?: SortOrder
    file_id?: SortOrder
    url?: SortOrder
    title?: SortOrder
    type?: SortOrder
    group_id?: SortOrder
    sort?: SortOrderInput | SortOrder
    cover?: SortOrderInput | SortOrder
    info?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: sp_filesCountOrderByAggregateInput
    _avg?: sp_filesAvgOrderByAggregateInput
    _max?: sp_filesMaxOrderByAggregateInput
    _min?: sp_filesMinOrderByAggregateInput
    _sum?: sp_filesSumOrderByAggregateInput
  }

  export type sp_filesScalarWhereWithAggregatesInput = {
    AND?: sp_filesScalarWhereWithAggregatesInput | sp_filesScalarWhereWithAggregatesInput[]
    OR?: sp_filesScalarWhereWithAggregatesInput[]
    NOT?: sp_filesScalarWhereWithAggregatesInput | sp_filesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"sp_files"> | number
    file_id?: StringWithAggregatesFilter<"sp_files"> | string
    url?: StringWithAggregatesFilter<"sp_files"> | string
    title?: StringWithAggregatesFilter<"sp_files"> | string
    type?: IntWithAggregatesFilter<"sp_files"> | number
    group_id?: IntWithAggregatesFilter<"sp_files"> | number
    sort?: IntNullableWithAggregatesFilter<"sp_files"> | number | null
    cover?: StringNullableWithAggregatesFilter<"sp_files"> | string | null
    info?: JsonNullableWithAggregatesFilter<"sp_files">
    created_at?: DateTimeNullableWithAggregatesFilter<"sp_files"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"sp_files"> | Date | string | null
    deleted_at?: DateTimeNullableWithAggregatesFilter<"sp_files"> | Date | string | null
  }

  export type sp_goodsWhereInput = {
    AND?: sp_goodsWhereInput | sp_goodsWhereInput[]
    OR?: sp_goodsWhereInput[]
    NOT?: sp_goodsWhereInput | sp_goodsWhereInput[]
    id?: BigIntFilter<"sp_goods"> | bigint | number
    type?: IntFilter<"sp_goods"> | number
    name?: StringFilter<"sp_goods"> | string
    price?: DecimalFilter<"sp_goods"> | Decimal | DecimalJsLike | number | string
    coins?: IntFilter<"sp_goods"> | number
    product_tier?: StringNullableFilter<"sp_goods"> | string | null
    bonus?: IntFilter<"sp_goods"> | number
    sort?: IntNullableFilter<"sp_goods"> | number | null
    desc?: StringFilter<"sp_goods"> | string
    created_at?: DateTimeFilter<"sp_goods"> | Date | string
    updated_at?: DateTimeNullableFilter<"sp_goods"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_goods"> | Date | string | null
  }

  export type sp_goodsOrderByWithRelationInput = {
    id?: SortOrder
    type?: SortOrder
    name?: SortOrder
    price?: SortOrder
    coins?: SortOrder
    product_tier?: SortOrderInput | SortOrder
    bonus?: SortOrder
    sort?: SortOrderInput | SortOrder
    desc?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _relevance?: sp_goodsOrderByRelevanceInput
  }

  export type sp_goodsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: sp_goodsWhereInput | sp_goodsWhereInput[]
    OR?: sp_goodsWhereInput[]
    NOT?: sp_goodsWhereInput | sp_goodsWhereInput[]
    type?: IntFilter<"sp_goods"> | number
    name?: StringFilter<"sp_goods"> | string
    price?: DecimalFilter<"sp_goods"> | Decimal | DecimalJsLike | number | string
    coins?: IntFilter<"sp_goods"> | number
    product_tier?: StringNullableFilter<"sp_goods"> | string | null
    bonus?: IntFilter<"sp_goods"> | number
    sort?: IntNullableFilter<"sp_goods"> | number | null
    desc?: StringFilter<"sp_goods"> | string
    created_at?: DateTimeFilter<"sp_goods"> | Date | string
    updated_at?: DateTimeNullableFilter<"sp_goods"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_goods"> | Date | string | null
  }, "id">

  export type sp_goodsOrderByWithAggregationInput = {
    id?: SortOrder
    type?: SortOrder
    name?: SortOrder
    price?: SortOrder
    coins?: SortOrder
    product_tier?: SortOrderInput | SortOrder
    bonus?: SortOrder
    sort?: SortOrderInput | SortOrder
    desc?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: sp_goodsCountOrderByAggregateInput
    _avg?: sp_goodsAvgOrderByAggregateInput
    _max?: sp_goodsMaxOrderByAggregateInput
    _min?: sp_goodsMinOrderByAggregateInput
    _sum?: sp_goodsSumOrderByAggregateInput
  }

  export type sp_goodsScalarWhereWithAggregatesInput = {
    AND?: sp_goodsScalarWhereWithAggregatesInput | sp_goodsScalarWhereWithAggregatesInput[]
    OR?: sp_goodsScalarWhereWithAggregatesInput[]
    NOT?: sp_goodsScalarWhereWithAggregatesInput | sp_goodsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"sp_goods"> | bigint | number
    type?: IntWithAggregatesFilter<"sp_goods"> | number
    name?: StringWithAggregatesFilter<"sp_goods"> | string
    price?: DecimalWithAggregatesFilter<"sp_goods"> | Decimal | DecimalJsLike | number | string
    coins?: IntWithAggregatesFilter<"sp_goods"> | number
    product_tier?: StringNullableWithAggregatesFilter<"sp_goods"> | string | null
    bonus?: IntWithAggregatesFilter<"sp_goods"> | number
    sort?: IntNullableWithAggregatesFilter<"sp_goods"> | number | null
    desc?: StringWithAggregatesFilter<"sp_goods"> | string
    created_at?: DateTimeWithAggregatesFilter<"sp_goods"> | Date | string
    updated_at?: DateTimeNullableWithAggregatesFilter<"sp_goods"> | Date | string | null
    deleted_at?: DateTimeNullableWithAggregatesFilter<"sp_goods"> | Date | string | null
  }

  export type sp_home_seriesWhereInput = {
    AND?: sp_home_seriesWhereInput | sp_home_seriesWhereInput[]
    OR?: sp_home_seriesWhereInput[]
    NOT?: sp_home_seriesWhereInput | sp_home_seriesWhereInput[]
    id?: IntFilter<"sp_home_series"> | number
    title?: StringFilter<"sp_home_series"> | string
    icon?: StringFilter<"sp_home_series"> | string
    desc?: StringFilter<"sp_home_series"> | string
    sort?: IntFilter<"sp_home_series"> | number
    is_more?: BoolNullableFilter<"sp_home_series"> | boolean | null
    created_at?: DateTimeNullableFilter<"sp_home_series"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"sp_home_series"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_home_series"> | Date | string | null
  }

  export type sp_home_seriesOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    icon?: SortOrder
    desc?: SortOrder
    sort?: SortOrder
    is_more?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _relevance?: sp_home_seriesOrderByRelevanceInput
  }

  export type sp_home_seriesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: sp_home_seriesWhereInput | sp_home_seriesWhereInput[]
    OR?: sp_home_seriesWhereInput[]
    NOT?: sp_home_seriesWhereInput | sp_home_seriesWhereInput[]
    title?: StringFilter<"sp_home_series"> | string
    icon?: StringFilter<"sp_home_series"> | string
    desc?: StringFilter<"sp_home_series"> | string
    sort?: IntFilter<"sp_home_series"> | number
    is_more?: BoolNullableFilter<"sp_home_series"> | boolean | null
    created_at?: DateTimeNullableFilter<"sp_home_series"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"sp_home_series"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_home_series"> | Date | string | null
  }, "id">

  export type sp_home_seriesOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    icon?: SortOrder
    desc?: SortOrder
    sort?: SortOrder
    is_more?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: sp_home_seriesCountOrderByAggregateInput
    _avg?: sp_home_seriesAvgOrderByAggregateInput
    _max?: sp_home_seriesMaxOrderByAggregateInput
    _min?: sp_home_seriesMinOrderByAggregateInput
    _sum?: sp_home_seriesSumOrderByAggregateInput
  }

  export type sp_home_seriesScalarWhereWithAggregatesInput = {
    AND?: sp_home_seriesScalarWhereWithAggregatesInput | sp_home_seriesScalarWhereWithAggregatesInput[]
    OR?: sp_home_seriesScalarWhereWithAggregatesInput[]
    NOT?: sp_home_seriesScalarWhereWithAggregatesInput | sp_home_seriesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"sp_home_series"> | number
    title?: StringWithAggregatesFilter<"sp_home_series"> | string
    icon?: StringWithAggregatesFilter<"sp_home_series"> | string
    desc?: StringWithAggregatesFilter<"sp_home_series"> | string
    sort?: IntWithAggregatesFilter<"sp_home_series"> | number
    is_more?: BoolNullableWithAggregatesFilter<"sp_home_series"> | boolean | null
    created_at?: DateTimeNullableWithAggregatesFilter<"sp_home_series"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"sp_home_series"> | Date | string | null
    deleted_at?: DateTimeNullableWithAggregatesFilter<"sp_home_series"> | Date | string | null
  }

  export type sp_login_logsWhereInput = {
    AND?: sp_login_logsWhereInput | sp_login_logsWhereInput[]
    OR?: sp_login_logsWhereInput[]
    NOT?: sp_login_logsWhereInput | sp_login_logsWhereInput[]
    id?: BigIntFilter<"sp_login_logs"> | bigint | number
    user_id?: BigIntFilter<"sp_login_logs"> | bigint | number
    logs?: JsonNullableFilter<"sp_login_logs">
    created_at?: DateTimeNullableFilter<"sp_login_logs"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"sp_login_logs"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_login_logs"> | Date | string | null
  }

  export type sp_login_logsOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    logs?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
  }

  export type sp_login_logsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: sp_login_logsWhereInput | sp_login_logsWhereInput[]
    OR?: sp_login_logsWhereInput[]
    NOT?: sp_login_logsWhereInput | sp_login_logsWhereInput[]
    user_id?: BigIntFilter<"sp_login_logs"> | bigint | number
    logs?: JsonNullableFilter<"sp_login_logs">
    created_at?: DateTimeNullableFilter<"sp_login_logs"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"sp_login_logs"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_login_logs"> | Date | string | null
  }, "id">

  export type sp_login_logsOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    logs?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: sp_login_logsCountOrderByAggregateInput
    _avg?: sp_login_logsAvgOrderByAggregateInput
    _max?: sp_login_logsMaxOrderByAggregateInput
    _min?: sp_login_logsMinOrderByAggregateInput
    _sum?: sp_login_logsSumOrderByAggregateInput
  }

  export type sp_login_logsScalarWhereWithAggregatesInput = {
    AND?: sp_login_logsScalarWhereWithAggregatesInput | sp_login_logsScalarWhereWithAggregatesInput[]
    OR?: sp_login_logsScalarWhereWithAggregatesInput[]
    NOT?: sp_login_logsScalarWhereWithAggregatesInput | sp_login_logsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"sp_login_logs"> | bigint | number
    user_id?: BigIntWithAggregatesFilter<"sp_login_logs"> | bigint | number
    logs?: JsonNullableWithAggregatesFilter<"sp_login_logs">
    created_at?: DateTimeNullableWithAggregatesFilter<"sp_login_logs"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"sp_login_logs"> | Date | string | null
    deleted_at?: DateTimeNullableWithAggregatesFilter<"sp_login_logs"> | Date | string | null
  }

  export type sp_migrationsWhereInput = {
    AND?: sp_migrationsWhereInput | sp_migrationsWhereInput[]
    OR?: sp_migrationsWhereInput[]
    NOT?: sp_migrationsWhereInput | sp_migrationsWhereInput[]
    id?: IntFilter<"sp_migrations"> | number
    migration?: StringFilter<"sp_migrations"> | string
    batch?: IntFilter<"sp_migrations"> | number
  }

  export type sp_migrationsOrderByWithRelationInput = {
    id?: SortOrder
    migration?: SortOrder
    batch?: SortOrder
    _relevance?: sp_migrationsOrderByRelevanceInput
  }

  export type sp_migrationsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: sp_migrationsWhereInput | sp_migrationsWhereInput[]
    OR?: sp_migrationsWhereInput[]
    NOT?: sp_migrationsWhereInput | sp_migrationsWhereInput[]
    migration?: StringFilter<"sp_migrations"> | string
    batch?: IntFilter<"sp_migrations"> | number
  }, "id">

  export type sp_migrationsOrderByWithAggregationInput = {
    id?: SortOrder
    migration?: SortOrder
    batch?: SortOrder
    _count?: sp_migrationsCountOrderByAggregateInput
    _avg?: sp_migrationsAvgOrderByAggregateInput
    _max?: sp_migrationsMaxOrderByAggregateInput
    _min?: sp_migrationsMinOrderByAggregateInput
    _sum?: sp_migrationsSumOrderByAggregateInput
  }

  export type sp_migrationsScalarWhereWithAggregatesInput = {
    AND?: sp_migrationsScalarWhereWithAggregatesInput | sp_migrationsScalarWhereWithAggregatesInput[]
    OR?: sp_migrationsScalarWhereWithAggregatesInput[]
    NOT?: sp_migrationsScalarWhereWithAggregatesInput | sp_migrationsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"sp_migrations"> | number
    migration?: StringWithAggregatesFilter<"sp_migrations"> | string
    batch?: IntWithAggregatesFilter<"sp_migrations"> | number
  }

  export type sp_ordersWhereInput = {
    AND?: sp_ordersWhereInput | sp_ordersWhereInput[]
    OR?: sp_ordersWhereInput[]
    NOT?: sp_ordersWhereInput | sp_ordersWhereInput[]
    id?: BigIntFilter<"sp_orders"> | bigint | number
    order_id?: StringFilter<"sp_orders"> | string
    pay_order_id?: StringNullableFilter<"sp_orders"> | string | null
    user_id?: BigIntFilter<"sp_orders"> | bigint | number
    goods_id?: IntFilter<"sp_orders"> | number
    total_amount?: DecimalFilter<"sp_orders"> | Decimal | DecimalJsLike | number | string
    actual_amount?: DecimalFilter<"sp_orders"> | Decimal | DecimalJsLike | number | string
    pay_type?: BoolFilter<"sp_orders"> | boolean
    callback_status?: BoolNullableFilter<"sp_orders"> | boolean | null
    status?: BoolFilter<"sp_orders"> | boolean
    os_type?: BoolNullableFilter<"sp_orders"> | boolean | null
    dev_no?: StringFilter<"sp_orders"> | string
    order_ip?: StringFilter<"sp_orders"> | string
    order_country?: StringNullableFilter<"sp_orders"> | string | null
    created_at?: DateTimeFilter<"sp_orders"> | Date | string
    updated_at?: DateTimeNullableFilter<"sp_orders"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_orders"> | Date | string | null
  }

  export type sp_ordersOrderByWithRelationInput = {
    id?: SortOrder
    order_id?: SortOrder
    pay_order_id?: SortOrderInput | SortOrder
    user_id?: SortOrder
    goods_id?: SortOrder
    total_amount?: SortOrder
    actual_amount?: SortOrder
    pay_type?: SortOrder
    callback_status?: SortOrderInput | SortOrder
    status?: SortOrder
    os_type?: SortOrderInput | SortOrder
    dev_no?: SortOrder
    order_ip?: SortOrder
    order_country?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _relevance?: sp_ordersOrderByRelevanceInput
  }

  export type sp_ordersWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: sp_ordersWhereInput | sp_ordersWhereInput[]
    OR?: sp_ordersWhereInput[]
    NOT?: sp_ordersWhereInput | sp_ordersWhereInput[]
    order_id?: StringFilter<"sp_orders"> | string
    pay_order_id?: StringNullableFilter<"sp_orders"> | string | null
    user_id?: BigIntFilter<"sp_orders"> | bigint | number
    goods_id?: IntFilter<"sp_orders"> | number
    total_amount?: DecimalFilter<"sp_orders"> | Decimal | DecimalJsLike | number | string
    actual_amount?: DecimalFilter<"sp_orders"> | Decimal | DecimalJsLike | number | string
    pay_type?: BoolFilter<"sp_orders"> | boolean
    callback_status?: BoolNullableFilter<"sp_orders"> | boolean | null
    status?: BoolFilter<"sp_orders"> | boolean
    os_type?: BoolNullableFilter<"sp_orders"> | boolean | null
    dev_no?: StringFilter<"sp_orders"> | string
    order_ip?: StringFilter<"sp_orders"> | string
    order_country?: StringNullableFilter<"sp_orders"> | string | null
    created_at?: DateTimeFilter<"sp_orders"> | Date | string
    updated_at?: DateTimeNullableFilter<"sp_orders"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_orders"> | Date | string | null
  }, "id">

  export type sp_ordersOrderByWithAggregationInput = {
    id?: SortOrder
    order_id?: SortOrder
    pay_order_id?: SortOrderInput | SortOrder
    user_id?: SortOrder
    goods_id?: SortOrder
    total_amount?: SortOrder
    actual_amount?: SortOrder
    pay_type?: SortOrder
    callback_status?: SortOrderInput | SortOrder
    status?: SortOrder
    os_type?: SortOrderInput | SortOrder
    dev_no?: SortOrder
    order_ip?: SortOrder
    order_country?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: sp_ordersCountOrderByAggregateInput
    _avg?: sp_ordersAvgOrderByAggregateInput
    _max?: sp_ordersMaxOrderByAggregateInput
    _min?: sp_ordersMinOrderByAggregateInput
    _sum?: sp_ordersSumOrderByAggregateInput
  }

  export type sp_ordersScalarWhereWithAggregatesInput = {
    AND?: sp_ordersScalarWhereWithAggregatesInput | sp_ordersScalarWhereWithAggregatesInput[]
    OR?: sp_ordersScalarWhereWithAggregatesInput[]
    NOT?: sp_ordersScalarWhereWithAggregatesInput | sp_ordersScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"sp_orders"> | bigint | number
    order_id?: StringWithAggregatesFilter<"sp_orders"> | string
    pay_order_id?: StringNullableWithAggregatesFilter<"sp_orders"> | string | null
    user_id?: BigIntWithAggregatesFilter<"sp_orders"> | bigint | number
    goods_id?: IntWithAggregatesFilter<"sp_orders"> | number
    total_amount?: DecimalWithAggregatesFilter<"sp_orders"> | Decimal | DecimalJsLike | number | string
    actual_amount?: DecimalWithAggregatesFilter<"sp_orders"> | Decimal | DecimalJsLike | number | string
    pay_type?: BoolWithAggregatesFilter<"sp_orders"> | boolean
    callback_status?: BoolNullableWithAggregatesFilter<"sp_orders"> | boolean | null
    status?: BoolWithAggregatesFilter<"sp_orders"> | boolean
    os_type?: BoolNullableWithAggregatesFilter<"sp_orders"> | boolean | null
    dev_no?: StringWithAggregatesFilter<"sp_orders"> | string
    order_ip?: StringWithAggregatesFilter<"sp_orders"> | string
    order_country?: StringNullableWithAggregatesFilter<"sp_orders"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"sp_orders"> | Date | string
    updated_at?: DateTimeNullableWithAggregatesFilter<"sp_orders"> | Date | string | null
    deleted_at?: DateTimeNullableWithAggregatesFilter<"sp_orders"> | Date | string | null
  }

  export type sp_payment_recordsWhereInput = {
    AND?: sp_payment_recordsWhereInput | sp_payment_recordsWhereInput[]
    OR?: sp_payment_recordsWhereInput[]
    NOT?: sp_payment_recordsWhereInput | sp_payment_recordsWhereInput[]
    id?: BigIntFilter<"sp_payment_records"> | bigint | number
    order_id?: StringFilter<"sp_payment_records"> | string
    user_id?: BigIntFilter<"sp_payment_records"> | bigint | number
    amount?: DecimalNullableFilter<"sp_payment_records"> | Decimal | DecimalJsLike | number | string | null
    coins?: IntNullableFilter<"sp_payment_records"> | number | null
    bonus?: IntNullableFilter<"sp_payment_records"> | number | null
    type?: BoolNullableFilter<"sp_payment_records"> | boolean | null
    created_at?: DateTimeFilter<"sp_payment_records"> | Date | string
    updated_at?: DateTimeNullableFilter<"sp_payment_records"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_payment_records"> | Date | string | null
  }

  export type sp_payment_recordsOrderByWithRelationInput = {
    id?: SortOrder
    order_id?: SortOrder
    user_id?: SortOrder
    amount?: SortOrderInput | SortOrder
    coins?: SortOrderInput | SortOrder
    bonus?: SortOrderInput | SortOrder
    type?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _relevance?: sp_payment_recordsOrderByRelevanceInput
  }

  export type sp_payment_recordsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: sp_payment_recordsWhereInput | sp_payment_recordsWhereInput[]
    OR?: sp_payment_recordsWhereInput[]
    NOT?: sp_payment_recordsWhereInput | sp_payment_recordsWhereInput[]
    order_id?: StringFilter<"sp_payment_records"> | string
    user_id?: BigIntFilter<"sp_payment_records"> | bigint | number
    amount?: DecimalNullableFilter<"sp_payment_records"> | Decimal | DecimalJsLike | number | string | null
    coins?: IntNullableFilter<"sp_payment_records"> | number | null
    bonus?: IntNullableFilter<"sp_payment_records"> | number | null
    type?: BoolNullableFilter<"sp_payment_records"> | boolean | null
    created_at?: DateTimeFilter<"sp_payment_records"> | Date | string
    updated_at?: DateTimeNullableFilter<"sp_payment_records"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_payment_records"> | Date | string | null
  }, "id">

  export type sp_payment_recordsOrderByWithAggregationInput = {
    id?: SortOrder
    order_id?: SortOrder
    user_id?: SortOrder
    amount?: SortOrderInput | SortOrder
    coins?: SortOrderInput | SortOrder
    bonus?: SortOrderInput | SortOrder
    type?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: sp_payment_recordsCountOrderByAggregateInput
    _avg?: sp_payment_recordsAvgOrderByAggregateInput
    _max?: sp_payment_recordsMaxOrderByAggregateInput
    _min?: sp_payment_recordsMinOrderByAggregateInput
    _sum?: sp_payment_recordsSumOrderByAggregateInput
  }

  export type sp_payment_recordsScalarWhereWithAggregatesInput = {
    AND?: sp_payment_recordsScalarWhereWithAggregatesInput | sp_payment_recordsScalarWhereWithAggregatesInput[]
    OR?: sp_payment_recordsScalarWhereWithAggregatesInput[]
    NOT?: sp_payment_recordsScalarWhereWithAggregatesInput | sp_payment_recordsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"sp_payment_records"> | bigint | number
    order_id?: StringWithAggregatesFilter<"sp_payment_records"> | string
    user_id?: BigIntWithAggregatesFilter<"sp_payment_records"> | bigint | number
    amount?: DecimalNullableWithAggregatesFilter<"sp_payment_records"> | Decimal | DecimalJsLike | number | string | null
    coins?: IntNullableWithAggregatesFilter<"sp_payment_records"> | number | null
    bonus?: IntNullableWithAggregatesFilter<"sp_payment_records"> | number | null
    type?: BoolNullableWithAggregatesFilter<"sp_payment_records"> | boolean | null
    created_at?: DateTimeWithAggregatesFilter<"sp_payment_records"> | Date | string
    updated_at?: DateTimeNullableWithAggregatesFilter<"sp_payment_records"> | Date | string | null
    deleted_at?: DateTimeNullableWithAggregatesFilter<"sp_payment_records"> | Date | string | null
  }

  export type sp_privacy_settingsWhereInput = {
    AND?: sp_privacy_settingsWhereInput | sp_privacy_settingsWhereInput[]
    OR?: sp_privacy_settingsWhereInput[]
    NOT?: sp_privacy_settingsWhereInput | sp_privacy_settingsWhereInput[]
    id?: BigIntFilter<"sp_privacy_settings"> | bigint | number
    title?: StringNullableFilter<"sp_privacy_settings"> | string | null
    type?: IntFilter<"sp_privacy_settings"> | number
    content?: StringNullableFilter<"sp_privacy_settings"> | string | null
    created_at?: DateTimeFilter<"sp_privacy_settings"> | Date | string
    updated_at?: DateTimeNullableFilter<"sp_privacy_settings"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_privacy_settings"> | Date | string | null
  }

  export type sp_privacy_settingsOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrderInput | SortOrder
    type?: SortOrder
    content?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _relevance?: sp_privacy_settingsOrderByRelevanceInput
  }

  export type sp_privacy_settingsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: sp_privacy_settingsWhereInput | sp_privacy_settingsWhereInput[]
    OR?: sp_privacy_settingsWhereInput[]
    NOT?: sp_privacy_settingsWhereInput | sp_privacy_settingsWhereInput[]
    title?: StringNullableFilter<"sp_privacy_settings"> | string | null
    type?: IntFilter<"sp_privacy_settings"> | number
    content?: StringNullableFilter<"sp_privacy_settings"> | string | null
    created_at?: DateTimeFilter<"sp_privacy_settings"> | Date | string
    updated_at?: DateTimeNullableFilter<"sp_privacy_settings"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_privacy_settings"> | Date | string | null
  }, "id">

  export type sp_privacy_settingsOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrderInput | SortOrder
    type?: SortOrder
    content?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: sp_privacy_settingsCountOrderByAggregateInput
    _avg?: sp_privacy_settingsAvgOrderByAggregateInput
    _max?: sp_privacy_settingsMaxOrderByAggregateInput
    _min?: sp_privacy_settingsMinOrderByAggregateInput
    _sum?: sp_privacy_settingsSumOrderByAggregateInput
  }

  export type sp_privacy_settingsScalarWhereWithAggregatesInput = {
    AND?: sp_privacy_settingsScalarWhereWithAggregatesInput | sp_privacy_settingsScalarWhereWithAggregatesInput[]
    OR?: sp_privacy_settingsScalarWhereWithAggregatesInput[]
    NOT?: sp_privacy_settingsScalarWhereWithAggregatesInput | sp_privacy_settingsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"sp_privacy_settings"> | bigint | number
    title?: StringNullableWithAggregatesFilter<"sp_privacy_settings"> | string | null
    type?: IntWithAggregatesFilter<"sp_privacy_settings"> | number
    content?: StringNullableWithAggregatesFilter<"sp_privacy_settings"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"sp_privacy_settings"> | Date | string
    updated_at?: DateTimeNullableWithAggregatesFilter<"sp_privacy_settings"> | Date | string | null
    deleted_at?: DateTimeNullableWithAggregatesFilter<"sp_privacy_settings"> | Date | string | null
  }

  export type sp_purchase_recordsWhereInput = {
    AND?: sp_purchase_recordsWhereInput | sp_purchase_recordsWhereInput[]
    OR?: sp_purchase_recordsWhereInput[]
    NOT?: sp_purchase_recordsWhereInput | sp_purchase_recordsWhereInput[]
    id?: BigIntFilter<"sp_purchase_records"> | bigint | number
    user_id?: BigIntFilter<"sp_purchase_records"> | bigint | number
    video_group_id?: IntFilter<"sp_purchase_records"> | number
    video_id?: IntFilter<"sp_purchase_records"> | number
    costs?: IntNullableFilter<"sp_purchase_records"> | number | null
    pay_type?: IntNullableFilter<"sp_purchase_records"> | number | null
    created_at?: DateTimeFilter<"sp_purchase_records"> | Date | string
    updated_at?: DateTimeNullableFilter<"sp_purchase_records"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_purchase_records"> | Date | string | null
  }

  export type sp_purchase_recordsOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    video_group_id?: SortOrder
    video_id?: SortOrder
    costs?: SortOrderInput | SortOrder
    pay_type?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
  }

  export type sp_purchase_recordsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: sp_purchase_recordsWhereInput | sp_purchase_recordsWhereInput[]
    OR?: sp_purchase_recordsWhereInput[]
    NOT?: sp_purchase_recordsWhereInput | sp_purchase_recordsWhereInput[]
    user_id?: BigIntFilter<"sp_purchase_records"> | bigint | number
    video_group_id?: IntFilter<"sp_purchase_records"> | number
    video_id?: IntFilter<"sp_purchase_records"> | number
    costs?: IntNullableFilter<"sp_purchase_records"> | number | null
    pay_type?: IntNullableFilter<"sp_purchase_records"> | number | null
    created_at?: DateTimeFilter<"sp_purchase_records"> | Date | string
    updated_at?: DateTimeNullableFilter<"sp_purchase_records"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_purchase_records"> | Date | string | null
  }, "id">

  export type sp_purchase_recordsOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    video_group_id?: SortOrder
    video_id?: SortOrder
    costs?: SortOrderInput | SortOrder
    pay_type?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: sp_purchase_recordsCountOrderByAggregateInput
    _avg?: sp_purchase_recordsAvgOrderByAggregateInput
    _max?: sp_purchase_recordsMaxOrderByAggregateInput
    _min?: sp_purchase_recordsMinOrderByAggregateInput
    _sum?: sp_purchase_recordsSumOrderByAggregateInput
  }

  export type sp_purchase_recordsScalarWhereWithAggregatesInput = {
    AND?: sp_purchase_recordsScalarWhereWithAggregatesInput | sp_purchase_recordsScalarWhereWithAggregatesInput[]
    OR?: sp_purchase_recordsScalarWhereWithAggregatesInput[]
    NOT?: sp_purchase_recordsScalarWhereWithAggregatesInput | sp_purchase_recordsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"sp_purchase_records"> | bigint | number
    user_id?: BigIntWithAggregatesFilter<"sp_purchase_records"> | bigint | number
    video_group_id?: IntWithAggregatesFilter<"sp_purchase_records"> | number
    video_id?: IntWithAggregatesFilter<"sp_purchase_records"> | number
    costs?: IntNullableWithAggregatesFilter<"sp_purchase_records"> | number | null
    pay_type?: IntNullableWithAggregatesFilter<"sp_purchase_records"> | number | null
    created_at?: DateTimeWithAggregatesFilter<"sp_purchase_records"> | Date | string
    updated_at?: DateTimeNullableWithAggregatesFilter<"sp_purchase_records"> | Date | string | null
    deleted_at?: DateTimeNullableWithAggregatesFilter<"sp_purchase_records"> | Date | string | null
  }

  export type sp_reward_recordsWhereInput = {
    AND?: sp_reward_recordsWhereInput | sp_reward_recordsWhereInput[]
    OR?: sp_reward_recordsWhereInput[]
    NOT?: sp_reward_recordsWhereInput | sp_reward_recordsWhereInput[]
    id?: IntFilter<"sp_reward_records"> | number
    user_id?: BigIntFilter<"sp_reward_records"> | bigint | number
    reward_id?: IntFilter<"sp_reward_records"> | number
    updated_at?: DateTimeNullableFilter<"sp_reward_records"> | Date | string | null
    created_at?: DateTimeFilter<"sp_reward_records"> | Date | string
    deleted_at?: DateTimeNullableFilter<"sp_reward_records"> | Date | string | null
  }

  export type sp_reward_recordsOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    reward_id?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    created_at?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
  }

  export type sp_reward_recordsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: sp_reward_recordsWhereInput | sp_reward_recordsWhereInput[]
    OR?: sp_reward_recordsWhereInput[]
    NOT?: sp_reward_recordsWhereInput | sp_reward_recordsWhereInput[]
    user_id?: BigIntFilter<"sp_reward_records"> | bigint | number
    reward_id?: IntFilter<"sp_reward_records"> | number
    updated_at?: DateTimeNullableFilter<"sp_reward_records"> | Date | string | null
    created_at?: DateTimeFilter<"sp_reward_records"> | Date | string
    deleted_at?: DateTimeNullableFilter<"sp_reward_records"> | Date | string | null
  }, "id">

  export type sp_reward_recordsOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    reward_id?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    created_at?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: sp_reward_recordsCountOrderByAggregateInput
    _avg?: sp_reward_recordsAvgOrderByAggregateInput
    _max?: sp_reward_recordsMaxOrderByAggregateInput
    _min?: sp_reward_recordsMinOrderByAggregateInput
    _sum?: sp_reward_recordsSumOrderByAggregateInput
  }

  export type sp_reward_recordsScalarWhereWithAggregatesInput = {
    AND?: sp_reward_recordsScalarWhereWithAggregatesInput | sp_reward_recordsScalarWhereWithAggregatesInput[]
    OR?: sp_reward_recordsScalarWhereWithAggregatesInput[]
    NOT?: sp_reward_recordsScalarWhereWithAggregatesInput | sp_reward_recordsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"sp_reward_records"> | number
    user_id?: BigIntWithAggregatesFilter<"sp_reward_records"> | bigint | number
    reward_id?: IntWithAggregatesFilter<"sp_reward_records"> | number
    updated_at?: DateTimeNullableWithAggregatesFilter<"sp_reward_records"> | Date | string | null
    created_at?: DateTimeWithAggregatesFilter<"sp_reward_records"> | Date | string
    deleted_at?: DateTimeNullableWithAggregatesFilter<"sp_reward_records"> | Date | string | null
  }

  export type sp_rewards_listWhereInput = {
    AND?: sp_rewards_listWhereInput | sp_rewards_listWhereInput[]
    OR?: sp_rewards_listWhereInput[]
    NOT?: sp_rewards_listWhereInput | sp_rewards_listWhereInput[]
    id?: IntFilter<"sp_rewards_list"> | number
    type?: BoolFilter<"sp_rewards_list"> | boolean
    is_once?: BoolFilter<"sp_rewards_list"> | boolean
    max_nums?: IntFilter<"sp_rewards_list"> | number
    sort?: IntNullableFilter<"sp_rewards_list"> | number | null
    bonus?: IntFilter<"sp_rewards_list"> | number
    updated_at?: DateTimeNullableFilter<"sp_rewards_list"> | Date | string | null
    created_at?: DateTimeFilter<"sp_rewards_list"> | Date | string
    deleted_at?: DateTimeNullableFilter<"sp_rewards_list"> | Date | string | null
  }

  export type sp_rewards_listOrderByWithRelationInput = {
    id?: SortOrder
    type?: SortOrder
    is_once?: SortOrder
    max_nums?: SortOrder
    sort?: SortOrderInput | SortOrder
    bonus?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    created_at?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
  }

  export type sp_rewards_listWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: sp_rewards_listWhereInput | sp_rewards_listWhereInput[]
    OR?: sp_rewards_listWhereInput[]
    NOT?: sp_rewards_listWhereInput | sp_rewards_listWhereInput[]
    type?: BoolFilter<"sp_rewards_list"> | boolean
    is_once?: BoolFilter<"sp_rewards_list"> | boolean
    max_nums?: IntFilter<"sp_rewards_list"> | number
    sort?: IntNullableFilter<"sp_rewards_list"> | number | null
    bonus?: IntFilter<"sp_rewards_list"> | number
    updated_at?: DateTimeNullableFilter<"sp_rewards_list"> | Date | string | null
    created_at?: DateTimeFilter<"sp_rewards_list"> | Date | string
    deleted_at?: DateTimeNullableFilter<"sp_rewards_list"> | Date | string | null
  }, "id">

  export type sp_rewards_listOrderByWithAggregationInput = {
    id?: SortOrder
    type?: SortOrder
    is_once?: SortOrder
    max_nums?: SortOrder
    sort?: SortOrderInput | SortOrder
    bonus?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    created_at?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: sp_rewards_listCountOrderByAggregateInput
    _avg?: sp_rewards_listAvgOrderByAggregateInput
    _max?: sp_rewards_listMaxOrderByAggregateInput
    _min?: sp_rewards_listMinOrderByAggregateInput
    _sum?: sp_rewards_listSumOrderByAggregateInput
  }

  export type sp_rewards_listScalarWhereWithAggregatesInput = {
    AND?: sp_rewards_listScalarWhereWithAggregatesInput | sp_rewards_listScalarWhereWithAggregatesInput[]
    OR?: sp_rewards_listScalarWhereWithAggregatesInput[]
    NOT?: sp_rewards_listScalarWhereWithAggregatesInput | sp_rewards_listScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"sp_rewards_list"> | number
    type?: BoolWithAggregatesFilter<"sp_rewards_list"> | boolean
    is_once?: BoolWithAggregatesFilter<"sp_rewards_list"> | boolean
    max_nums?: IntWithAggregatesFilter<"sp_rewards_list"> | number
    sort?: IntNullableWithAggregatesFilter<"sp_rewards_list"> | number | null
    bonus?: IntWithAggregatesFilter<"sp_rewards_list"> | number
    updated_at?: DateTimeNullableWithAggregatesFilter<"sp_rewards_list"> | Date | string | null
    created_at?: DateTimeWithAggregatesFilter<"sp_rewards_list"> | Date | string
    deleted_at?: DateTimeNullableWithAggregatesFilter<"sp_rewards_list"> | Date | string | null
  }

  export type sp_rewards_typeWhereInput = {
    AND?: sp_rewards_typeWhereInput | sp_rewards_typeWhereInput[]
    OR?: sp_rewards_typeWhereInput[]
    NOT?: sp_rewards_typeWhereInput | sp_rewards_typeWhereInput[]
    id?: IntFilter<"sp_rewards_type"> | number
    name?: StringFilter<"sp_rewards_type"> | string
    status?: BoolFilter<"sp_rewards_type"> | boolean
    updated_at?: DateTimeNullableFilter<"sp_rewards_type"> | Date | string | null
    created_at?: DateTimeFilter<"sp_rewards_type"> | Date | string
    deleted_at?: DateTimeNullableFilter<"sp_rewards_type"> | Date | string | null
  }

  export type sp_rewards_typeOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    status?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    created_at?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _relevance?: sp_rewards_typeOrderByRelevanceInput
  }

  export type sp_rewards_typeWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: sp_rewards_typeWhereInput | sp_rewards_typeWhereInput[]
    OR?: sp_rewards_typeWhereInput[]
    NOT?: sp_rewards_typeWhereInput | sp_rewards_typeWhereInput[]
    name?: StringFilter<"sp_rewards_type"> | string
    status?: BoolFilter<"sp_rewards_type"> | boolean
    updated_at?: DateTimeNullableFilter<"sp_rewards_type"> | Date | string | null
    created_at?: DateTimeFilter<"sp_rewards_type"> | Date | string
    deleted_at?: DateTimeNullableFilter<"sp_rewards_type"> | Date | string | null
  }, "id">

  export type sp_rewards_typeOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    status?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    created_at?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: sp_rewards_typeCountOrderByAggregateInput
    _avg?: sp_rewards_typeAvgOrderByAggregateInput
    _max?: sp_rewards_typeMaxOrderByAggregateInput
    _min?: sp_rewards_typeMinOrderByAggregateInput
    _sum?: sp_rewards_typeSumOrderByAggregateInput
  }

  export type sp_rewards_typeScalarWhereWithAggregatesInput = {
    AND?: sp_rewards_typeScalarWhereWithAggregatesInput | sp_rewards_typeScalarWhereWithAggregatesInput[]
    OR?: sp_rewards_typeScalarWhereWithAggregatesInput[]
    NOT?: sp_rewards_typeScalarWhereWithAggregatesInput | sp_rewards_typeScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"sp_rewards_type"> | number
    name?: StringWithAggregatesFilter<"sp_rewards_type"> | string
    status?: BoolWithAggregatesFilter<"sp_rewards_type"> | boolean
    updated_at?: DateTimeNullableWithAggregatesFilter<"sp_rewards_type"> | Date | string | null
    created_at?: DateTimeWithAggregatesFilter<"sp_rewards_type"> | Date | string
    deleted_at?: DateTimeNullableWithAggregatesFilter<"sp_rewards_type"> | Date | string | null
  }

  export type sp_tokensWhereInput = {
    AND?: sp_tokensWhereInput | sp_tokensWhereInput[]
    OR?: sp_tokensWhereInput[]
    NOT?: sp_tokensWhereInput | sp_tokensWhereInput[]
    id?: BigIntFilter<"sp_tokens"> | bigint | number
    user_id?: BigIntFilter<"sp_tokens"> | bigint | number
    token?: StringNullableFilter<"sp_tokens"> | string | null
    created_at?: DateTimeNullableFilter<"sp_tokens"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"sp_tokens"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_tokens"> | Date | string | null
  }

  export type sp_tokensOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    token?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _relevance?: sp_tokensOrderByRelevanceInput
  }

  export type sp_tokensWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: sp_tokensWhereInput | sp_tokensWhereInput[]
    OR?: sp_tokensWhereInput[]
    NOT?: sp_tokensWhereInput | sp_tokensWhereInput[]
    user_id?: BigIntFilter<"sp_tokens"> | bigint | number
    token?: StringNullableFilter<"sp_tokens"> | string | null
    created_at?: DateTimeNullableFilter<"sp_tokens"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"sp_tokens"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_tokens"> | Date | string | null
  }, "id">

  export type sp_tokensOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    token?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: sp_tokensCountOrderByAggregateInput
    _avg?: sp_tokensAvgOrderByAggregateInput
    _max?: sp_tokensMaxOrderByAggregateInput
    _min?: sp_tokensMinOrderByAggregateInput
    _sum?: sp_tokensSumOrderByAggregateInput
  }

  export type sp_tokensScalarWhereWithAggregatesInput = {
    AND?: sp_tokensScalarWhereWithAggregatesInput | sp_tokensScalarWhereWithAggregatesInput[]
    OR?: sp_tokensScalarWhereWithAggregatesInput[]
    NOT?: sp_tokensScalarWhereWithAggregatesInput | sp_tokensScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"sp_tokens"> | bigint | number
    user_id?: BigIntWithAggregatesFilter<"sp_tokens"> | bigint | number
    token?: StringNullableWithAggregatesFilter<"sp_tokens"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"sp_tokens"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"sp_tokens"> | Date | string | null
    deleted_at?: DateTimeNullableWithAggregatesFilter<"sp_tokens"> | Date | string | null
  }

  export type sp_upload_logsWhereInput = {
    AND?: sp_upload_logsWhereInput | sp_upload_logsWhereInput[]
    OR?: sp_upload_logsWhereInput[]
    NOT?: sp_upload_logsWhereInput | sp_upload_logsWhereInput[]
    id?: BigIntFilter<"sp_upload_logs"> | bigint | number
    user_id?: BigIntFilter<"sp_upload_logs"> | bigint | number
    sid?: BigIntFilter<"sp_upload_logs"> | bigint | number
    name?: StringFilter<"sp_upload_logs"> | string
    file_id?: StringFilter<"sp_upload_logs"> | string
    created_at?: DateTimeFilter<"sp_upload_logs"> | Date | string
    updated_at?: DateTimeNullableFilter<"sp_upload_logs"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_upload_logs"> | Date | string | null
  }

  export type sp_upload_logsOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    sid?: SortOrder
    name?: SortOrder
    file_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _relevance?: sp_upload_logsOrderByRelevanceInput
  }

  export type sp_upload_logsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: sp_upload_logsWhereInput | sp_upload_logsWhereInput[]
    OR?: sp_upload_logsWhereInput[]
    NOT?: sp_upload_logsWhereInput | sp_upload_logsWhereInput[]
    user_id?: BigIntFilter<"sp_upload_logs"> | bigint | number
    sid?: BigIntFilter<"sp_upload_logs"> | bigint | number
    name?: StringFilter<"sp_upload_logs"> | string
    file_id?: StringFilter<"sp_upload_logs"> | string
    created_at?: DateTimeFilter<"sp_upload_logs"> | Date | string
    updated_at?: DateTimeNullableFilter<"sp_upload_logs"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_upload_logs"> | Date | string | null
  }, "id">

  export type sp_upload_logsOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    sid?: SortOrder
    name?: SortOrder
    file_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: sp_upload_logsCountOrderByAggregateInput
    _avg?: sp_upload_logsAvgOrderByAggregateInput
    _max?: sp_upload_logsMaxOrderByAggregateInput
    _min?: sp_upload_logsMinOrderByAggregateInput
    _sum?: sp_upload_logsSumOrderByAggregateInput
  }

  export type sp_upload_logsScalarWhereWithAggregatesInput = {
    AND?: sp_upload_logsScalarWhereWithAggregatesInput | sp_upload_logsScalarWhereWithAggregatesInput[]
    OR?: sp_upload_logsScalarWhereWithAggregatesInput[]
    NOT?: sp_upload_logsScalarWhereWithAggregatesInput | sp_upload_logsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"sp_upload_logs"> | bigint | number
    user_id?: BigIntWithAggregatesFilter<"sp_upload_logs"> | bigint | number
    sid?: BigIntWithAggregatesFilter<"sp_upload_logs"> | bigint | number
    name?: StringWithAggregatesFilter<"sp_upload_logs"> | string
    file_id?: StringWithAggregatesFilter<"sp_upload_logs"> | string
    created_at?: DateTimeWithAggregatesFilter<"sp_upload_logs"> | Date | string
    updated_at?: DateTimeNullableWithAggregatesFilter<"sp_upload_logs"> | Date | string | null
    deleted_at?: DateTimeNullableWithAggregatesFilter<"sp_upload_logs"> | Date | string | null
  }

  export type sp_user_check_inWhereInput = {
    AND?: sp_user_check_inWhereInput | sp_user_check_inWhereInput[]
    OR?: sp_user_check_inWhereInput[]
    NOT?: sp_user_check_inWhereInput | sp_user_check_inWhereInput[]
    id?: IntFilter<"sp_user_check_in"> | number
    user_id?: BigIntFilter<"sp_user_check_in"> | bigint | number
    bonus?: IntNullableFilter<"sp_user_check_in"> | number | null
    days?: IntFilter<"sp_user_check_in"> | number
    type?: BoolNullableFilter<"sp_user_check_in"> | boolean | null
    updated_at?: DateTimeNullableFilter<"sp_user_check_in"> | Date | string | null
    created_at?: DateTimeFilter<"sp_user_check_in"> | Date | string
    deleted_at?: DateTimeNullableFilter<"sp_user_check_in"> | Date | string | null
  }

  export type sp_user_check_inOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    bonus?: SortOrderInput | SortOrder
    days?: SortOrder
    type?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    created_at?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
  }

  export type sp_user_check_inWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: sp_user_check_inWhereInput | sp_user_check_inWhereInput[]
    OR?: sp_user_check_inWhereInput[]
    NOT?: sp_user_check_inWhereInput | sp_user_check_inWhereInput[]
    user_id?: BigIntFilter<"sp_user_check_in"> | bigint | number
    bonus?: IntNullableFilter<"sp_user_check_in"> | number | null
    days?: IntFilter<"sp_user_check_in"> | number
    type?: BoolNullableFilter<"sp_user_check_in"> | boolean | null
    updated_at?: DateTimeNullableFilter<"sp_user_check_in"> | Date | string | null
    created_at?: DateTimeFilter<"sp_user_check_in"> | Date | string
    deleted_at?: DateTimeNullableFilter<"sp_user_check_in"> | Date | string | null
  }, "id">

  export type sp_user_check_inOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    bonus?: SortOrderInput | SortOrder
    days?: SortOrder
    type?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    created_at?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: sp_user_check_inCountOrderByAggregateInput
    _avg?: sp_user_check_inAvgOrderByAggregateInput
    _max?: sp_user_check_inMaxOrderByAggregateInput
    _min?: sp_user_check_inMinOrderByAggregateInput
    _sum?: sp_user_check_inSumOrderByAggregateInput
  }

  export type sp_user_check_inScalarWhereWithAggregatesInput = {
    AND?: sp_user_check_inScalarWhereWithAggregatesInput | sp_user_check_inScalarWhereWithAggregatesInput[]
    OR?: sp_user_check_inScalarWhereWithAggregatesInput[]
    NOT?: sp_user_check_inScalarWhereWithAggregatesInput | sp_user_check_inScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"sp_user_check_in"> | number
    user_id?: BigIntWithAggregatesFilter<"sp_user_check_in"> | bigint | number
    bonus?: IntNullableWithAggregatesFilter<"sp_user_check_in"> | number | null
    days?: IntWithAggregatesFilter<"sp_user_check_in"> | number
    type?: BoolNullableWithAggregatesFilter<"sp_user_check_in"> | boolean | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"sp_user_check_in"> | Date | string | null
    created_at?: DateTimeWithAggregatesFilter<"sp_user_check_in"> | Date | string
    deleted_at?: DateTimeNullableWithAggregatesFilter<"sp_user_check_in"> | Date | string | null
  }

  export type sp_user_collectionsWhereInput = {
    AND?: sp_user_collectionsWhereInput | sp_user_collectionsWhereInput[]
    OR?: sp_user_collectionsWhereInput[]
    NOT?: sp_user_collectionsWhereInput | sp_user_collectionsWhereInput[]
    id?: IntFilter<"sp_user_collections"> | number
    user_id?: BigIntFilter<"sp_user_collections"> | bigint | number
    video_id?: BigIntFilter<"sp_user_collections"> | bigint | number
    video_group_id?: BigIntFilter<"sp_user_collections"> | bigint | number
    status?: BoolFilter<"sp_user_collections"> | boolean
    created_at?: DateTimeFilter<"sp_user_collections"> | Date | string
    updated_at?: DateTimeNullableFilter<"sp_user_collections"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_user_collections"> | Date | string | null
  }

  export type sp_user_collectionsOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    video_id?: SortOrder
    video_group_id?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
  }

  export type sp_user_collectionsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: sp_user_collectionsWhereInput | sp_user_collectionsWhereInput[]
    OR?: sp_user_collectionsWhereInput[]
    NOT?: sp_user_collectionsWhereInput | sp_user_collectionsWhereInput[]
    user_id?: BigIntFilter<"sp_user_collections"> | bigint | number
    video_id?: BigIntFilter<"sp_user_collections"> | bigint | number
    video_group_id?: BigIntFilter<"sp_user_collections"> | bigint | number
    status?: BoolFilter<"sp_user_collections"> | boolean
    created_at?: DateTimeFilter<"sp_user_collections"> | Date | string
    updated_at?: DateTimeNullableFilter<"sp_user_collections"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_user_collections"> | Date | string | null
  }, "id">

  export type sp_user_collectionsOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    video_id?: SortOrder
    video_group_id?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: sp_user_collectionsCountOrderByAggregateInput
    _avg?: sp_user_collectionsAvgOrderByAggregateInput
    _max?: sp_user_collectionsMaxOrderByAggregateInput
    _min?: sp_user_collectionsMinOrderByAggregateInput
    _sum?: sp_user_collectionsSumOrderByAggregateInput
  }

  export type sp_user_collectionsScalarWhereWithAggregatesInput = {
    AND?: sp_user_collectionsScalarWhereWithAggregatesInput | sp_user_collectionsScalarWhereWithAggregatesInput[]
    OR?: sp_user_collectionsScalarWhereWithAggregatesInput[]
    NOT?: sp_user_collectionsScalarWhereWithAggregatesInput | sp_user_collectionsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"sp_user_collections"> | number
    user_id?: BigIntWithAggregatesFilter<"sp_user_collections"> | bigint | number
    video_id?: BigIntWithAggregatesFilter<"sp_user_collections"> | bigint | number
    video_group_id?: BigIntWithAggregatesFilter<"sp_user_collections"> | bigint | number
    status?: BoolWithAggregatesFilter<"sp_user_collections"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"sp_user_collections"> | Date | string
    updated_at?: DateTimeNullableWithAggregatesFilter<"sp_user_collections"> | Date | string | null
    deleted_at?: DateTimeNullableWithAggregatesFilter<"sp_user_collections"> | Date | string | null
  }

  export type sp_user_likesWhereInput = {
    AND?: sp_user_likesWhereInput | sp_user_likesWhereInput[]
    OR?: sp_user_likesWhereInput[]
    NOT?: sp_user_likesWhereInput | sp_user_likesWhereInput[]
    id?: IntFilter<"sp_user_likes"> | number
    user_id?: BigIntFilter<"sp_user_likes"> | bigint | number
    video_id?: BigIntFilter<"sp_user_likes"> | bigint | number
    video_group_id?: BigIntFilter<"sp_user_likes"> | bigint | number
    status?: BoolFilter<"sp_user_likes"> | boolean
    created_at?: DateTimeFilter<"sp_user_likes"> | Date | string
    updated_at?: DateTimeNullableFilter<"sp_user_likes"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_user_likes"> | Date | string | null
  }

  export type sp_user_likesOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    video_id?: SortOrder
    video_group_id?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
  }

  export type sp_user_likesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: sp_user_likesWhereInput | sp_user_likesWhereInput[]
    OR?: sp_user_likesWhereInput[]
    NOT?: sp_user_likesWhereInput | sp_user_likesWhereInput[]
    user_id?: BigIntFilter<"sp_user_likes"> | bigint | number
    video_id?: BigIntFilter<"sp_user_likes"> | bigint | number
    video_group_id?: BigIntFilter<"sp_user_likes"> | bigint | number
    status?: BoolFilter<"sp_user_likes"> | boolean
    created_at?: DateTimeFilter<"sp_user_likes"> | Date | string
    updated_at?: DateTimeNullableFilter<"sp_user_likes"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_user_likes"> | Date | string | null
  }, "id">

  export type sp_user_likesOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    video_id?: SortOrder
    video_group_id?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: sp_user_likesCountOrderByAggregateInput
    _avg?: sp_user_likesAvgOrderByAggregateInput
    _max?: sp_user_likesMaxOrderByAggregateInput
    _min?: sp_user_likesMinOrderByAggregateInput
    _sum?: sp_user_likesSumOrderByAggregateInput
  }

  export type sp_user_likesScalarWhereWithAggregatesInput = {
    AND?: sp_user_likesScalarWhereWithAggregatesInput | sp_user_likesScalarWhereWithAggregatesInput[]
    OR?: sp_user_likesScalarWhereWithAggregatesInput[]
    NOT?: sp_user_likesScalarWhereWithAggregatesInput | sp_user_likesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"sp_user_likes"> | number
    user_id?: BigIntWithAggregatesFilter<"sp_user_likes"> | bigint | number
    video_id?: BigIntWithAggregatesFilter<"sp_user_likes"> | bigint | number
    video_group_id?: BigIntWithAggregatesFilter<"sp_user_likes"> | bigint | number
    status?: BoolWithAggregatesFilter<"sp_user_likes"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"sp_user_likes"> | Date | string
    updated_at?: DateTimeNullableWithAggregatesFilter<"sp_user_likes"> | Date | string | null
    deleted_at?: DateTimeNullableWithAggregatesFilter<"sp_user_likes"> | Date | string | null
  }

  export type sp_user_my_listsWhereInput = {
    AND?: sp_user_my_listsWhereInput | sp_user_my_listsWhereInput[]
    OR?: sp_user_my_listsWhereInput[]
    NOT?: sp_user_my_listsWhereInput | sp_user_my_listsWhereInput[]
    id?: BigIntFilter<"sp_user_my_lists"> | bigint | number
    user_id?: BigIntFilter<"sp_user_my_lists"> | bigint | number
    video_group_id?: IntFilter<"sp_user_my_lists"> | number
    created_at?: DateTimeNullableFilter<"sp_user_my_lists"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"sp_user_my_lists"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_user_my_lists"> | Date | string | null
  }

  export type sp_user_my_listsOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    video_group_id?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
  }

  export type sp_user_my_listsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: sp_user_my_listsWhereInput | sp_user_my_listsWhereInput[]
    OR?: sp_user_my_listsWhereInput[]
    NOT?: sp_user_my_listsWhereInput | sp_user_my_listsWhereInput[]
    user_id?: BigIntFilter<"sp_user_my_lists"> | bigint | number
    video_group_id?: IntFilter<"sp_user_my_lists"> | number
    created_at?: DateTimeNullableFilter<"sp_user_my_lists"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"sp_user_my_lists"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_user_my_lists"> | Date | string | null
  }, "id">

  export type sp_user_my_listsOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    video_group_id?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: sp_user_my_listsCountOrderByAggregateInput
    _avg?: sp_user_my_listsAvgOrderByAggregateInput
    _max?: sp_user_my_listsMaxOrderByAggregateInput
    _min?: sp_user_my_listsMinOrderByAggregateInput
    _sum?: sp_user_my_listsSumOrderByAggregateInput
  }

  export type sp_user_my_listsScalarWhereWithAggregatesInput = {
    AND?: sp_user_my_listsScalarWhereWithAggregatesInput | sp_user_my_listsScalarWhereWithAggregatesInput[]
    OR?: sp_user_my_listsScalarWhereWithAggregatesInput[]
    NOT?: sp_user_my_listsScalarWhereWithAggregatesInput | sp_user_my_listsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"sp_user_my_lists"> | bigint | number
    user_id?: BigIntWithAggregatesFilter<"sp_user_my_lists"> | bigint | number
    video_group_id?: IntWithAggregatesFilter<"sp_user_my_lists"> | number
    created_at?: DateTimeNullableWithAggregatesFilter<"sp_user_my_lists"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"sp_user_my_lists"> | Date | string | null
    deleted_at?: DateTimeNullableWithAggregatesFilter<"sp_user_my_lists"> | Date | string | null
  }

  export type sp_user_suggestsWhereInput = {
    AND?: sp_user_suggestsWhereInput | sp_user_suggestsWhereInput[]
    OR?: sp_user_suggestsWhereInput[]
    NOT?: sp_user_suggestsWhereInput | sp_user_suggestsWhereInput[]
    id?: BigIntFilter<"sp_user_suggests"> | bigint | number
    user_id?: BigIntFilter<"sp_user_suggests"> | bigint | number
    title?: StringFilter<"sp_user_suggests"> | string
    content?: StringFilter<"sp_user_suggests"> | string
    created_at?: DateTimeFilter<"sp_user_suggests"> | Date | string
    updated_at?: DateTimeNullableFilter<"sp_user_suggests"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_user_suggests"> | Date | string | null
    email?: StringNullableFilter<"sp_user_suggests"> | string | null
  }

  export type sp_user_suggestsOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    _relevance?: sp_user_suggestsOrderByRelevanceInput
  }

  export type sp_user_suggestsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: sp_user_suggestsWhereInput | sp_user_suggestsWhereInput[]
    OR?: sp_user_suggestsWhereInput[]
    NOT?: sp_user_suggestsWhereInput | sp_user_suggestsWhereInput[]
    user_id?: BigIntFilter<"sp_user_suggests"> | bigint | number
    title?: StringFilter<"sp_user_suggests"> | string
    content?: StringFilter<"sp_user_suggests"> | string
    created_at?: DateTimeFilter<"sp_user_suggests"> | Date | string
    updated_at?: DateTimeNullableFilter<"sp_user_suggests"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_user_suggests"> | Date | string | null
    email?: StringNullableFilter<"sp_user_suggests"> | string | null
  }, "id">

  export type sp_user_suggestsOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    _count?: sp_user_suggestsCountOrderByAggregateInput
    _avg?: sp_user_suggestsAvgOrderByAggregateInput
    _max?: sp_user_suggestsMaxOrderByAggregateInput
    _min?: sp_user_suggestsMinOrderByAggregateInput
    _sum?: sp_user_suggestsSumOrderByAggregateInput
  }

  export type sp_user_suggestsScalarWhereWithAggregatesInput = {
    AND?: sp_user_suggestsScalarWhereWithAggregatesInput | sp_user_suggestsScalarWhereWithAggregatesInput[]
    OR?: sp_user_suggestsScalarWhereWithAggregatesInput[]
    NOT?: sp_user_suggestsScalarWhereWithAggregatesInput | sp_user_suggestsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"sp_user_suggests"> | bigint | number
    user_id?: BigIntWithAggregatesFilter<"sp_user_suggests"> | bigint | number
    title?: StringWithAggregatesFilter<"sp_user_suggests"> | string
    content?: StringWithAggregatesFilter<"sp_user_suggests"> | string
    created_at?: DateTimeWithAggregatesFilter<"sp_user_suggests"> | Date | string
    updated_at?: DateTimeNullableWithAggregatesFilter<"sp_user_suggests"> | Date | string | null
    deleted_at?: DateTimeNullableWithAggregatesFilter<"sp_user_suggests"> | Date | string | null
    email?: StringNullableWithAggregatesFilter<"sp_user_suggests"> | string | null
  }

  export type sp_usersWhereInput = {
    AND?: sp_usersWhereInput | sp_usersWhereInput[]
    OR?: sp_usersWhereInput[]
    NOT?: sp_usersWhereInput | sp_usersWhereInput[]
    id?: BigIntFilter<"sp_users"> | bigint | number
    user_id?: BigIntFilter<"sp_users"> | bigint | number
    open_id?: StringNullableFilter<"sp_users"> | string | null
    bonus?: IntNullableFilter<"sp_users"> | number | null
    coins?: IntFilter<"sp_users"> | number
    email?: StringNullableFilter<"sp_users"> | string | null
    avatar?: StringNullableFilter<"sp_users"> | string | null
    nickname?: StringNullableFilter<"sp_users"> | string | null
    age?: IntFilter<"sp_users"> | number
    gender?: IntFilter<"sp_users"> | number
    login_type?: IntFilter<"sp_users"> | number
    last_login_time?: DateTimeNullableFilter<"sp_users"> | Date | string | null
    register_ip?: StringNullableFilter<"sp_users"> | string | null
    login_ip?: StringNullableFilter<"sp_users"> | string | null
    register_country?: StringNullableFilter<"sp_users"> | string | null
    login_country?: StringNullableFilter<"sp_users"> | string | null
    register_dev_no?: StringNullableFilter<"sp_users"> | string | null
    login_dev_no?: StringNullableFilter<"sp_users"> | string | null
    register_os_type?: BoolNullableFilter<"sp_users"> | boolean | null
    login_os_type?: BoolNullableFilter<"sp_users"> | boolean | null
    is_disable?: IntFilter<"sp_users"> | number
    created_at?: DateTimeNullableFilter<"sp_users"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"sp_users"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_users"> | Date | string | null
  }

  export type sp_usersOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    open_id?: SortOrderInput | SortOrder
    bonus?: SortOrderInput | SortOrder
    coins?: SortOrder
    email?: SortOrderInput | SortOrder
    avatar?: SortOrderInput | SortOrder
    nickname?: SortOrderInput | SortOrder
    age?: SortOrder
    gender?: SortOrder
    login_type?: SortOrder
    last_login_time?: SortOrderInput | SortOrder
    register_ip?: SortOrderInput | SortOrder
    login_ip?: SortOrderInput | SortOrder
    register_country?: SortOrderInput | SortOrder
    login_country?: SortOrderInput | SortOrder
    register_dev_no?: SortOrderInput | SortOrder
    login_dev_no?: SortOrderInput | SortOrder
    register_os_type?: SortOrderInput | SortOrder
    login_os_type?: SortOrderInput | SortOrder
    is_disable?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _relevance?: sp_usersOrderByRelevanceInput
  }

  export type sp_usersWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: sp_usersWhereInput | sp_usersWhereInput[]
    OR?: sp_usersWhereInput[]
    NOT?: sp_usersWhereInput | sp_usersWhereInput[]
    user_id?: BigIntFilter<"sp_users"> | bigint | number
    open_id?: StringNullableFilter<"sp_users"> | string | null
    bonus?: IntNullableFilter<"sp_users"> | number | null
    coins?: IntFilter<"sp_users"> | number
    email?: StringNullableFilter<"sp_users"> | string | null
    avatar?: StringNullableFilter<"sp_users"> | string | null
    nickname?: StringNullableFilter<"sp_users"> | string | null
    age?: IntFilter<"sp_users"> | number
    gender?: IntFilter<"sp_users"> | number
    login_type?: IntFilter<"sp_users"> | number
    last_login_time?: DateTimeNullableFilter<"sp_users"> | Date | string | null
    register_ip?: StringNullableFilter<"sp_users"> | string | null
    login_ip?: StringNullableFilter<"sp_users"> | string | null
    register_country?: StringNullableFilter<"sp_users"> | string | null
    login_country?: StringNullableFilter<"sp_users"> | string | null
    register_dev_no?: StringNullableFilter<"sp_users"> | string | null
    login_dev_no?: StringNullableFilter<"sp_users"> | string | null
    register_os_type?: BoolNullableFilter<"sp_users"> | boolean | null
    login_os_type?: BoolNullableFilter<"sp_users"> | boolean | null
    is_disable?: IntFilter<"sp_users"> | number
    created_at?: DateTimeNullableFilter<"sp_users"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"sp_users"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_users"> | Date | string | null
  }, "id">

  export type sp_usersOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    open_id?: SortOrderInput | SortOrder
    bonus?: SortOrderInput | SortOrder
    coins?: SortOrder
    email?: SortOrderInput | SortOrder
    avatar?: SortOrderInput | SortOrder
    nickname?: SortOrderInput | SortOrder
    age?: SortOrder
    gender?: SortOrder
    login_type?: SortOrder
    last_login_time?: SortOrderInput | SortOrder
    register_ip?: SortOrderInput | SortOrder
    login_ip?: SortOrderInput | SortOrder
    register_country?: SortOrderInput | SortOrder
    login_country?: SortOrderInput | SortOrder
    register_dev_no?: SortOrderInput | SortOrder
    login_dev_no?: SortOrderInput | SortOrder
    register_os_type?: SortOrderInput | SortOrder
    login_os_type?: SortOrderInput | SortOrder
    is_disable?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: sp_usersCountOrderByAggregateInput
    _avg?: sp_usersAvgOrderByAggregateInput
    _max?: sp_usersMaxOrderByAggregateInput
    _min?: sp_usersMinOrderByAggregateInput
    _sum?: sp_usersSumOrderByAggregateInput
  }

  export type sp_usersScalarWhereWithAggregatesInput = {
    AND?: sp_usersScalarWhereWithAggregatesInput | sp_usersScalarWhereWithAggregatesInput[]
    OR?: sp_usersScalarWhereWithAggregatesInput[]
    NOT?: sp_usersScalarWhereWithAggregatesInput | sp_usersScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"sp_users"> | bigint | number
    user_id?: BigIntWithAggregatesFilter<"sp_users"> | bigint | number
    open_id?: StringNullableWithAggregatesFilter<"sp_users"> | string | null
    bonus?: IntNullableWithAggregatesFilter<"sp_users"> | number | null
    coins?: IntWithAggregatesFilter<"sp_users"> | number
    email?: StringNullableWithAggregatesFilter<"sp_users"> | string | null
    avatar?: StringNullableWithAggregatesFilter<"sp_users"> | string | null
    nickname?: StringNullableWithAggregatesFilter<"sp_users"> | string | null
    age?: IntWithAggregatesFilter<"sp_users"> | number
    gender?: IntWithAggregatesFilter<"sp_users"> | number
    login_type?: IntWithAggregatesFilter<"sp_users"> | number
    last_login_time?: DateTimeNullableWithAggregatesFilter<"sp_users"> | Date | string | null
    register_ip?: StringNullableWithAggregatesFilter<"sp_users"> | string | null
    login_ip?: StringNullableWithAggregatesFilter<"sp_users"> | string | null
    register_country?: StringNullableWithAggregatesFilter<"sp_users"> | string | null
    login_country?: StringNullableWithAggregatesFilter<"sp_users"> | string | null
    register_dev_no?: StringNullableWithAggregatesFilter<"sp_users"> | string | null
    login_dev_no?: StringNullableWithAggregatesFilter<"sp_users"> | string | null
    register_os_type?: BoolNullableWithAggregatesFilter<"sp_users"> | boolean | null
    login_os_type?: BoolNullableWithAggregatesFilter<"sp_users"> | boolean | null
    is_disable?: IntWithAggregatesFilter<"sp_users"> | number
    created_at?: DateTimeNullableWithAggregatesFilter<"sp_users"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"sp_users"> | Date | string | null
    deleted_at?: DateTimeNullableWithAggregatesFilter<"sp_users"> | Date | string | null
  }

  export type sp_video_categoriesWhereInput = {
    AND?: sp_video_categoriesWhereInput | sp_video_categoriesWhereInput[]
    OR?: sp_video_categoriesWhereInput[]
    NOT?: sp_video_categoriesWhereInput | sp_video_categoriesWhereInput[]
    id?: IntFilter<"sp_video_categories"> | number
    name?: StringFilter<"sp_video_categories"> | string
    desc?: StringFilter<"sp_video_categories"> | string
    status?: BoolNullableFilter<"sp_video_categories"> | boolean | null
    created_at?: DateTimeNullableFilter<"sp_video_categories"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"sp_video_categories"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_video_categories"> | Date | string | null
  }

  export type sp_video_categoriesOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    desc?: SortOrder
    status?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _relevance?: sp_video_categoriesOrderByRelevanceInput
  }

  export type sp_video_categoriesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: sp_video_categoriesWhereInput | sp_video_categoriesWhereInput[]
    OR?: sp_video_categoriesWhereInput[]
    NOT?: sp_video_categoriesWhereInput | sp_video_categoriesWhereInput[]
    name?: StringFilter<"sp_video_categories"> | string
    desc?: StringFilter<"sp_video_categories"> | string
    status?: BoolNullableFilter<"sp_video_categories"> | boolean | null
    created_at?: DateTimeNullableFilter<"sp_video_categories"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"sp_video_categories"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_video_categories"> | Date | string | null
  }, "id">

  export type sp_video_categoriesOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    desc?: SortOrder
    status?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: sp_video_categoriesCountOrderByAggregateInput
    _avg?: sp_video_categoriesAvgOrderByAggregateInput
    _max?: sp_video_categoriesMaxOrderByAggregateInput
    _min?: sp_video_categoriesMinOrderByAggregateInput
    _sum?: sp_video_categoriesSumOrderByAggregateInput
  }

  export type sp_video_categoriesScalarWhereWithAggregatesInput = {
    AND?: sp_video_categoriesScalarWhereWithAggregatesInput | sp_video_categoriesScalarWhereWithAggregatesInput[]
    OR?: sp_video_categoriesScalarWhereWithAggregatesInput[]
    NOT?: sp_video_categoriesScalarWhereWithAggregatesInput | sp_video_categoriesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"sp_video_categories"> | number
    name?: StringWithAggregatesFilter<"sp_video_categories"> | string
    desc?: StringWithAggregatesFilter<"sp_video_categories"> | string
    status?: BoolNullableWithAggregatesFilter<"sp_video_categories"> | boolean | null
    created_at?: DateTimeNullableWithAggregatesFilter<"sp_video_categories"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"sp_video_categories"> | Date | string | null
    deleted_at?: DateTimeNullableWithAggregatesFilter<"sp_video_categories"> | Date | string | null
  }

  export type sp_video_group_categoriesWhereInput = {
    AND?: sp_video_group_categoriesWhereInput | sp_video_group_categoriesWhereInput[]
    OR?: sp_video_group_categoriesWhereInput[]
    NOT?: sp_video_group_categoriesWhereInput | sp_video_group_categoriesWhereInput[]
    id?: BigIntFilter<"sp_video_group_categories"> | bigint | number
    video_group_id?: IntFilter<"sp_video_group_categories"> | number
    category_id?: IntFilter<"sp_video_group_categories"> | number
    created_at?: DateTimeNullableFilter<"sp_video_group_categories"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"sp_video_group_categories"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_video_group_categories"> | Date | string | null
  }

  export type sp_video_group_categoriesOrderByWithRelationInput = {
    id?: SortOrder
    video_group_id?: SortOrder
    category_id?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
  }

  export type sp_video_group_categoriesWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: sp_video_group_categoriesWhereInput | sp_video_group_categoriesWhereInput[]
    OR?: sp_video_group_categoriesWhereInput[]
    NOT?: sp_video_group_categoriesWhereInput | sp_video_group_categoriesWhereInput[]
    video_group_id?: IntFilter<"sp_video_group_categories"> | number
    category_id?: IntFilter<"sp_video_group_categories"> | number
    created_at?: DateTimeNullableFilter<"sp_video_group_categories"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"sp_video_group_categories"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_video_group_categories"> | Date | string | null
  }, "id">

  export type sp_video_group_categoriesOrderByWithAggregationInput = {
    id?: SortOrder
    video_group_id?: SortOrder
    category_id?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: sp_video_group_categoriesCountOrderByAggregateInput
    _avg?: sp_video_group_categoriesAvgOrderByAggregateInput
    _max?: sp_video_group_categoriesMaxOrderByAggregateInput
    _min?: sp_video_group_categoriesMinOrderByAggregateInput
    _sum?: sp_video_group_categoriesSumOrderByAggregateInput
  }

  export type sp_video_group_categoriesScalarWhereWithAggregatesInput = {
    AND?: sp_video_group_categoriesScalarWhereWithAggregatesInput | sp_video_group_categoriesScalarWhereWithAggregatesInput[]
    OR?: sp_video_group_categoriesScalarWhereWithAggregatesInput[]
    NOT?: sp_video_group_categoriesScalarWhereWithAggregatesInput | sp_video_group_categoriesScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"sp_video_group_categories"> | bigint | number
    video_group_id?: IntWithAggregatesFilter<"sp_video_group_categories"> | number
    category_id?: IntWithAggregatesFilter<"sp_video_group_categories"> | number
    created_at?: DateTimeNullableWithAggregatesFilter<"sp_video_group_categories"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"sp_video_group_categories"> | Date | string | null
    deleted_at?: DateTimeNullableWithAggregatesFilter<"sp_video_group_categories"> | Date | string | null
  }

  export type sp_video_groupsWhereInput = {
    AND?: sp_video_groupsWhereInput | sp_video_groupsWhereInput[]
    OR?: sp_video_groupsWhereInput[]
    NOT?: sp_video_groupsWhereInput | sp_video_groupsWhereInput[]
    id?: IntFilter<"sp_video_groups"> | number
    series_id?: IntFilter<"sp_video_groups"> | number
    category_id?: IntNullableFilter<"sp_video_groups"> | number | null
    title?: StringFilter<"sp_video_groups"> | string
    desc?: StringNullableFilter<"sp_video_groups"> | string | null
    count?: IntFilter<"sp_video_groups"> | number
    status?: BoolNullableFilter<"sp_video_groups"> | boolean | null
    cover_id?: IntFilter<"sp_video_groups"> | number
    costs?: IntFilter<"sp_video_groups"> | number
    pay_type?: BoolNullableFilter<"sp_video_groups"> | boolean | null
    free_count?: IntFilter<"sp_video_groups"> | number
    is_hot?: BoolNullableFilter<"sp_video_groups"> | boolean | null
    sort?: IntFilter<"sp_video_groups"> | number
    total_nums?: IntNullableFilter<"sp_video_groups"> | number | null
    updated_nums?: IntNullableFilter<"sp_video_groups"> | number | null
    created_at?: DateTimeNullableFilter<"sp_video_groups"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"sp_video_groups"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_video_groups"> | Date | string | null
  }

  export type sp_video_groupsOrderByWithRelationInput = {
    id?: SortOrder
    series_id?: SortOrder
    category_id?: SortOrderInput | SortOrder
    title?: SortOrder
    desc?: SortOrderInput | SortOrder
    count?: SortOrder
    status?: SortOrderInput | SortOrder
    cover_id?: SortOrder
    costs?: SortOrder
    pay_type?: SortOrderInput | SortOrder
    free_count?: SortOrder
    is_hot?: SortOrderInput | SortOrder
    sort?: SortOrder
    total_nums?: SortOrderInput | SortOrder
    updated_nums?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _relevance?: sp_video_groupsOrderByRelevanceInput
  }

  export type sp_video_groupsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: sp_video_groupsWhereInput | sp_video_groupsWhereInput[]
    OR?: sp_video_groupsWhereInput[]
    NOT?: sp_video_groupsWhereInput | sp_video_groupsWhereInput[]
    series_id?: IntFilter<"sp_video_groups"> | number
    category_id?: IntNullableFilter<"sp_video_groups"> | number | null
    title?: StringFilter<"sp_video_groups"> | string
    desc?: StringNullableFilter<"sp_video_groups"> | string | null
    count?: IntFilter<"sp_video_groups"> | number
    status?: BoolNullableFilter<"sp_video_groups"> | boolean | null
    cover_id?: IntFilter<"sp_video_groups"> | number
    costs?: IntFilter<"sp_video_groups"> | number
    pay_type?: BoolNullableFilter<"sp_video_groups"> | boolean | null
    free_count?: IntFilter<"sp_video_groups"> | number
    is_hot?: BoolNullableFilter<"sp_video_groups"> | boolean | null
    sort?: IntFilter<"sp_video_groups"> | number
    total_nums?: IntNullableFilter<"sp_video_groups"> | number | null
    updated_nums?: IntNullableFilter<"sp_video_groups"> | number | null
    created_at?: DateTimeNullableFilter<"sp_video_groups"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"sp_video_groups"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_video_groups"> | Date | string | null
  }, "id">

  export type sp_video_groupsOrderByWithAggregationInput = {
    id?: SortOrder
    series_id?: SortOrder
    category_id?: SortOrderInput | SortOrder
    title?: SortOrder
    desc?: SortOrderInput | SortOrder
    count?: SortOrder
    status?: SortOrderInput | SortOrder
    cover_id?: SortOrder
    costs?: SortOrder
    pay_type?: SortOrderInput | SortOrder
    free_count?: SortOrder
    is_hot?: SortOrderInput | SortOrder
    sort?: SortOrder
    total_nums?: SortOrderInput | SortOrder
    updated_nums?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: sp_video_groupsCountOrderByAggregateInput
    _avg?: sp_video_groupsAvgOrderByAggregateInput
    _max?: sp_video_groupsMaxOrderByAggregateInput
    _min?: sp_video_groupsMinOrderByAggregateInput
    _sum?: sp_video_groupsSumOrderByAggregateInput
  }

  export type sp_video_groupsScalarWhereWithAggregatesInput = {
    AND?: sp_video_groupsScalarWhereWithAggregatesInput | sp_video_groupsScalarWhereWithAggregatesInput[]
    OR?: sp_video_groupsScalarWhereWithAggregatesInput[]
    NOT?: sp_video_groupsScalarWhereWithAggregatesInput | sp_video_groupsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"sp_video_groups"> | number
    series_id?: IntWithAggregatesFilter<"sp_video_groups"> | number
    category_id?: IntNullableWithAggregatesFilter<"sp_video_groups"> | number | null
    title?: StringWithAggregatesFilter<"sp_video_groups"> | string
    desc?: StringNullableWithAggregatesFilter<"sp_video_groups"> | string | null
    count?: IntWithAggregatesFilter<"sp_video_groups"> | number
    status?: BoolNullableWithAggregatesFilter<"sp_video_groups"> | boolean | null
    cover_id?: IntWithAggregatesFilter<"sp_video_groups"> | number
    costs?: IntWithAggregatesFilter<"sp_video_groups"> | number
    pay_type?: BoolNullableWithAggregatesFilter<"sp_video_groups"> | boolean | null
    free_count?: IntWithAggregatesFilter<"sp_video_groups"> | number
    is_hot?: BoolNullableWithAggregatesFilter<"sp_video_groups"> | boolean | null
    sort?: IntWithAggregatesFilter<"sp_video_groups"> | number
    total_nums?: IntNullableWithAggregatesFilter<"sp_video_groups"> | number | null
    updated_nums?: IntNullableWithAggregatesFilter<"sp_video_groups"> | number | null
    created_at?: DateTimeNullableWithAggregatesFilter<"sp_video_groups"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"sp_video_groups"> | Date | string | null
    deleted_at?: DateTimeNullableWithAggregatesFilter<"sp_video_groups"> | Date | string | null
  }

  export type sp_videosWhereInput = {
    AND?: sp_videosWhereInput | sp_videosWhereInput[]
    OR?: sp_videosWhereInput[]
    NOT?: sp_videosWhereInput | sp_videosWhereInput[]
    id?: BigIntFilter<"sp_videos"> | bigint | number
    group_id?: IntFilter<"sp_videos"> | number
    file_id?: IntFilter<"sp_videos"> | number
    title?: StringFilter<"sp_videos"> | string
    cover?: StringNullableFilter<"sp_videos"> | string | null
    desc?: StringFilter<"sp_videos"> | string
    sort?: IntFilter<"sp_videos"> | number
    created_at?: DateTimeNullableFilter<"sp_videos"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"sp_videos"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_videos"> | Date | string | null
  }

  export type sp_videosOrderByWithRelationInput = {
    id?: SortOrder
    group_id?: SortOrder
    file_id?: SortOrder
    title?: SortOrder
    cover?: SortOrderInput | SortOrder
    desc?: SortOrder
    sort?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _relevance?: sp_videosOrderByRelevanceInput
  }

  export type sp_videosWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: sp_videosWhereInput | sp_videosWhereInput[]
    OR?: sp_videosWhereInput[]
    NOT?: sp_videosWhereInput | sp_videosWhereInput[]
    group_id?: IntFilter<"sp_videos"> | number
    file_id?: IntFilter<"sp_videos"> | number
    title?: StringFilter<"sp_videos"> | string
    cover?: StringNullableFilter<"sp_videos"> | string | null
    desc?: StringFilter<"sp_videos"> | string
    sort?: IntFilter<"sp_videos"> | number
    created_at?: DateTimeNullableFilter<"sp_videos"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"sp_videos"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_videos"> | Date | string | null
  }, "id">

  export type sp_videosOrderByWithAggregationInput = {
    id?: SortOrder
    group_id?: SortOrder
    file_id?: SortOrder
    title?: SortOrder
    cover?: SortOrderInput | SortOrder
    desc?: SortOrder
    sort?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: sp_videosCountOrderByAggregateInput
    _avg?: sp_videosAvgOrderByAggregateInput
    _max?: sp_videosMaxOrderByAggregateInput
    _min?: sp_videosMinOrderByAggregateInput
    _sum?: sp_videosSumOrderByAggregateInput
  }

  export type sp_videosScalarWhereWithAggregatesInput = {
    AND?: sp_videosScalarWhereWithAggregatesInput | sp_videosScalarWhereWithAggregatesInput[]
    OR?: sp_videosScalarWhereWithAggregatesInput[]
    NOT?: sp_videosScalarWhereWithAggregatesInput | sp_videosScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"sp_videos"> | bigint | number
    group_id?: IntWithAggregatesFilter<"sp_videos"> | number
    file_id?: IntWithAggregatesFilter<"sp_videos"> | number
    title?: StringWithAggregatesFilter<"sp_videos"> | string
    cover?: StringNullableWithAggregatesFilter<"sp_videos"> | string | null
    desc?: StringWithAggregatesFilter<"sp_videos"> | string
    sort?: IntWithAggregatesFilter<"sp_videos"> | number
    created_at?: DateTimeNullableWithAggregatesFilter<"sp_videos"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"sp_videos"> | Date | string | null
    deleted_at?: DateTimeNullableWithAggregatesFilter<"sp_videos"> | Date | string | null
  }

  export type sp_view_historiesWhereInput = {
    AND?: sp_view_historiesWhereInput | sp_view_historiesWhereInput[]
    OR?: sp_view_historiesWhereInput[]
    NOT?: sp_view_historiesWhereInput | sp_view_historiesWhereInput[]
    id?: BigIntFilter<"sp_view_histories"> | bigint | number
    user_id?: BigIntFilter<"sp_view_histories"> | bigint | number
    video_id?: BigIntFilter<"sp_view_histories"> | bigint | number
    is_finished?: BoolFilter<"sp_view_histories"> | boolean
    video_group_id?: BigIntFilter<"sp_view_histories"> | bigint | number
    created_at?: DateTimeFilter<"sp_view_histories"> | Date | string
    updated_at?: DateTimeNullableFilter<"sp_view_histories"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_view_histories"> | Date | string | null
  }

  export type sp_view_historiesOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    video_id?: SortOrder
    is_finished?: SortOrder
    video_group_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
  }

  export type sp_view_historiesWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: sp_view_historiesWhereInput | sp_view_historiesWhereInput[]
    OR?: sp_view_historiesWhereInput[]
    NOT?: sp_view_historiesWhereInput | sp_view_historiesWhereInput[]
    user_id?: BigIntFilter<"sp_view_histories"> | bigint | number
    video_id?: BigIntFilter<"sp_view_histories"> | bigint | number
    is_finished?: BoolFilter<"sp_view_histories"> | boolean
    video_group_id?: BigIntFilter<"sp_view_histories"> | bigint | number
    created_at?: DateTimeFilter<"sp_view_histories"> | Date | string
    updated_at?: DateTimeNullableFilter<"sp_view_histories"> | Date | string | null
    deleted_at?: DateTimeNullableFilter<"sp_view_histories"> | Date | string | null
  }, "id">

  export type sp_view_historiesOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    video_id?: SortOrder
    is_finished?: SortOrder
    video_group_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: sp_view_historiesCountOrderByAggregateInput
    _avg?: sp_view_historiesAvgOrderByAggregateInput
    _max?: sp_view_historiesMaxOrderByAggregateInput
    _min?: sp_view_historiesMinOrderByAggregateInput
    _sum?: sp_view_historiesSumOrderByAggregateInput
  }

  export type sp_view_historiesScalarWhereWithAggregatesInput = {
    AND?: sp_view_historiesScalarWhereWithAggregatesInput | sp_view_historiesScalarWhereWithAggregatesInput[]
    OR?: sp_view_historiesScalarWhereWithAggregatesInput[]
    NOT?: sp_view_historiesScalarWhereWithAggregatesInput | sp_view_historiesScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"sp_view_histories"> | bigint | number
    user_id?: BigIntWithAggregatesFilter<"sp_view_histories"> | bigint | number
    video_id?: BigIntWithAggregatesFilter<"sp_view_histories"> | bigint | number
    is_finished?: BoolWithAggregatesFilter<"sp_view_histories"> | boolean
    video_group_id?: BigIntWithAggregatesFilter<"sp_view_histories"> | bigint | number
    created_at?: DateTimeWithAggregatesFilter<"sp_view_histories"> | Date | string
    updated_at?: DateTimeNullableWithAggregatesFilter<"sp_view_histories"> | Date | string | null
    deleted_at?: DateTimeNullableWithAggregatesFilter<"sp_view_histories"> | Date | string | null
  }

  export type sp_admin_menusCreateInput = {
    parent_id?: number
    path?: string
    name?: string
    type_name?: string
    component?: string
    sort?: number
    icon?: string
    created_at?: Date | string
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_admin_menusUncheckedCreateInput = {
    id?: number
    parent_id?: number
    path?: string
    name?: string
    type_name?: string
    component?: string
    sort?: number
    icon?: string
    created_at?: Date | string
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_admin_menusUpdateInput = {
    parent_id?: IntFieldUpdateOperationsInput | number
    path?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type_name?: StringFieldUpdateOperationsInput | string
    component?: StringFieldUpdateOperationsInput | string
    sort?: IntFieldUpdateOperationsInput | number
    icon?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_admin_menusUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    parent_id?: IntFieldUpdateOperationsInput | number
    path?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type_name?: StringFieldUpdateOperationsInput | string
    component?: StringFieldUpdateOperationsInput | string
    sort?: IntFieldUpdateOperationsInput | number
    icon?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_admin_menusCreateManyInput = {
    id?: number
    parent_id?: number
    path?: string
    name?: string
    type_name?: string
    component?: string
    sort?: number
    icon?: string
    created_at?: Date | string
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_admin_menusUpdateManyMutationInput = {
    parent_id?: IntFieldUpdateOperationsInput | number
    path?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type_name?: StringFieldUpdateOperationsInput | string
    component?: StringFieldUpdateOperationsInput | string
    sort?: IntFieldUpdateOperationsInput | number
    icon?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_admin_menusUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    parent_id?: IntFieldUpdateOperationsInput | number
    path?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type_name?: StringFieldUpdateOperationsInput | string
    component?: StringFieldUpdateOperationsInput | string
    sort?: IntFieldUpdateOperationsInput | number
    icon?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_admin_rolesCreateInput = {
    name?: string
    status?: boolean | null
    desc?: string
    rules?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_admin_rolesUncheckedCreateInput = {
    id?: number
    name?: string
    status?: boolean | null
    desc?: string
    rules?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_admin_rolesUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    desc?: StringFieldUpdateOperationsInput | string
    rules?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_admin_rolesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    desc?: StringFieldUpdateOperationsInput | string
    rules?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_admin_rolesCreateManyInput = {
    id?: number
    name?: string
    status?: boolean | null
    desc?: string
    rules?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_admin_rolesUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    desc?: StringFieldUpdateOperationsInput | string
    rules?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_admin_rolesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    desc?: StringFieldUpdateOperationsInput | string
    rules?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_admin_tokensCreateInput = {
    id?: bigint | number
    user_id: number
    token?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_admin_tokensUncheckedCreateInput = {
    id?: bigint | number
    user_id: number
    token?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_admin_tokensUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: IntFieldUpdateOperationsInput | number
    token?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_admin_tokensUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: IntFieldUpdateOperationsInput | number
    token?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_admin_tokensCreateManyInput = {
    id?: bigint | number
    user_id: number
    token?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_admin_tokensUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: IntFieldUpdateOperationsInput | number
    token?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_admin_tokensUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: IntFieldUpdateOperationsInput | number
    token?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_adminsCreateInput = {
    username?: string
    password: string
    password_modify?: number
    roles?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
    status?: boolean
  }

  export type sp_adminsUncheckedCreateInput = {
    id?: number
    username?: string
    password: string
    password_modify?: number
    roles?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
    status?: boolean
  }

  export type sp_adminsUpdateInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    password_modify?: IntFieldUpdateOperationsInput | number
    roles?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
  }

  export type sp_adminsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    password_modify?: IntFieldUpdateOperationsInput | number
    roles?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
  }

  export type sp_adminsCreateManyInput = {
    id?: number
    username?: string
    password: string
    password_modify?: number
    roles?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
    status?: boolean
  }

  export type sp_adminsUpdateManyMutationInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    password_modify?: IntFieldUpdateOperationsInput | number
    roles?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
  }

  export type sp_adminsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    password_modify?: IntFieldUpdateOperationsInput | number
    roles?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
  }

  export type sp_failed_jobsCreateInput = {
    id?: bigint | number
    uuid: string
    connection: string
    queue: string
    payload: string
    exception: string
    failed_at?: Date | string
  }

  export type sp_failed_jobsUncheckedCreateInput = {
    id?: bigint | number
    uuid: string
    connection: string
    queue: string
    payload: string
    exception: string
    failed_at?: Date | string
  }

  export type sp_failed_jobsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    uuid?: StringFieldUpdateOperationsInput | string
    connection?: StringFieldUpdateOperationsInput | string
    queue?: StringFieldUpdateOperationsInput | string
    payload?: StringFieldUpdateOperationsInput | string
    exception?: StringFieldUpdateOperationsInput | string
    failed_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sp_failed_jobsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    uuid?: StringFieldUpdateOperationsInput | string
    connection?: StringFieldUpdateOperationsInput | string
    queue?: StringFieldUpdateOperationsInput | string
    payload?: StringFieldUpdateOperationsInput | string
    exception?: StringFieldUpdateOperationsInput | string
    failed_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sp_failed_jobsCreateManyInput = {
    id?: bigint | number
    uuid: string
    connection: string
    queue: string
    payload: string
    exception: string
    failed_at?: Date | string
  }

  export type sp_failed_jobsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    uuid?: StringFieldUpdateOperationsInput | string
    connection?: StringFieldUpdateOperationsInput | string
    queue?: StringFieldUpdateOperationsInput | string
    payload?: StringFieldUpdateOperationsInput | string
    exception?: StringFieldUpdateOperationsInput | string
    failed_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sp_failed_jobsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    uuid?: StringFieldUpdateOperationsInput | string
    connection?: StringFieldUpdateOperationsInput | string
    queue?: StringFieldUpdateOperationsInput | string
    payload?: StringFieldUpdateOperationsInput | string
    exception?: StringFieldUpdateOperationsInput | string
    failed_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sp_filesCreateInput = {
    file_id?: string
    url?: string
    title?: string
    type?: number
    group_id?: number
    sort?: number | null
    cover?: string | null
    info?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_filesUncheckedCreateInput = {
    id?: number
    file_id?: string
    url?: string
    title?: string
    type?: number
    group_id?: number
    sort?: number | null
    cover?: string | null
    info?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_filesUpdateInput = {
    file_id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    type?: IntFieldUpdateOperationsInput | number
    group_id?: IntFieldUpdateOperationsInput | number
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    cover?: NullableStringFieldUpdateOperationsInput | string | null
    info?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_filesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    file_id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    type?: IntFieldUpdateOperationsInput | number
    group_id?: IntFieldUpdateOperationsInput | number
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    cover?: NullableStringFieldUpdateOperationsInput | string | null
    info?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_filesCreateManyInput = {
    id?: number
    file_id?: string
    url?: string
    title?: string
    type?: number
    group_id?: number
    sort?: number | null
    cover?: string | null
    info?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_filesUpdateManyMutationInput = {
    file_id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    type?: IntFieldUpdateOperationsInput | number
    group_id?: IntFieldUpdateOperationsInput | number
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    cover?: NullableStringFieldUpdateOperationsInput | string | null
    info?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_filesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    file_id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    type?: IntFieldUpdateOperationsInput | number
    group_id?: IntFieldUpdateOperationsInput | number
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    cover?: NullableStringFieldUpdateOperationsInput | string | null
    info?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_goodsCreateInput = {
    id?: bigint | number
    type?: number
    name?: string
    price?: Decimal | DecimalJsLike | number | string
    coins?: number
    product_tier?: string | null
    bonus?: number
    sort?: number | null
    desc?: string
    created_at?: Date | string
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_goodsUncheckedCreateInput = {
    id?: bigint | number
    type?: number
    name?: string
    price?: Decimal | DecimalJsLike | number | string
    coins?: number
    product_tier?: string | null
    bonus?: number
    sort?: number | null
    desc?: string
    created_at?: Date | string
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_goodsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    type?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    coins?: IntFieldUpdateOperationsInput | number
    product_tier?: NullableStringFieldUpdateOperationsInput | string | null
    bonus?: IntFieldUpdateOperationsInput | number
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    desc?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_goodsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    type?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    coins?: IntFieldUpdateOperationsInput | number
    product_tier?: NullableStringFieldUpdateOperationsInput | string | null
    bonus?: IntFieldUpdateOperationsInput | number
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    desc?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_goodsCreateManyInput = {
    id?: bigint | number
    type?: number
    name?: string
    price?: Decimal | DecimalJsLike | number | string
    coins?: number
    product_tier?: string | null
    bonus?: number
    sort?: number | null
    desc?: string
    created_at?: Date | string
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_goodsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    type?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    coins?: IntFieldUpdateOperationsInput | number
    product_tier?: NullableStringFieldUpdateOperationsInput | string | null
    bonus?: IntFieldUpdateOperationsInput | number
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    desc?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_goodsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    type?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    coins?: IntFieldUpdateOperationsInput | number
    product_tier?: NullableStringFieldUpdateOperationsInput | string | null
    bonus?: IntFieldUpdateOperationsInput | number
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    desc?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_home_seriesCreateInput = {
    title?: string
    icon?: string
    desc?: string
    sort?: number
    is_more?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_home_seriesUncheckedCreateInput = {
    id?: number
    title?: string
    icon?: string
    desc?: string
    sort?: number
    is_more?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_home_seriesUpdateInput = {
    title?: StringFieldUpdateOperationsInput | string
    icon?: StringFieldUpdateOperationsInput | string
    desc?: StringFieldUpdateOperationsInput | string
    sort?: IntFieldUpdateOperationsInput | number
    is_more?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_home_seriesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    icon?: StringFieldUpdateOperationsInput | string
    desc?: StringFieldUpdateOperationsInput | string
    sort?: IntFieldUpdateOperationsInput | number
    is_more?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_home_seriesCreateManyInput = {
    id?: number
    title?: string
    icon?: string
    desc?: string
    sort?: number
    is_more?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_home_seriesUpdateManyMutationInput = {
    title?: StringFieldUpdateOperationsInput | string
    icon?: StringFieldUpdateOperationsInput | string
    desc?: StringFieldUpdateOperationsInput | string
    sort?: IntFieldUpdateOperationsInput | number
    is_more?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_home_seriesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    icon?: StringFieldUpdateOperationsInput | string
    desc?: StringFieldUpdateOperationsInput | string
    sort?: IntFieldUpdateOperationsInput | number
    is_more?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_login_logsCreateInput = {
    id?: bigint | number
    user_id: bigint | number
    logs?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_login_logsUncheckedCreateInput = {
    id?: bigint | number
    user_id: bigint | number
    logs?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_login_logsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    logs?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_login_logsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    logs?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_login_logsCreateManyInput = {
    id?: bigint | number
    user_id: bigint | number
    logs?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_login_logsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    logs?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_login_logsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    logs?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_migrationsCreateInput = {
    migration: string
    batch: number
  }

  export type sp_migrationsUncheckedCreateInput = {
    id?: number
    migration: string
    batch: number
  }

  export type sp_migrationsUpdateInput = {
    migration?: StringFieldUpdateOperationsInput | string
    batch?: IntFieldUpdateOperationsInput | number
  }

  export type sp_migrationsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    migration?: StringFieldUpdateOperationsInput | string
    batch?: IntFieldUpdateOperationsInput | number
  }

  export type sp_migrationsCreateManyInput = {
    id?: number
    migration: string
    batch: number
  }

  export type sp_migrationsUpdateManyMutationInput = {
    migration?: StringFieldUpdateOperationsInput | string
    batch?: IntFieldUpdateOperationsInput | number
  }

  export type sp_migrationsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    migration?: StringFieldUpdateOperationsInput | string
    batch?: IntFieldUpdateOperationsInput | number
  }

  export type sp_ordersCreateInput = {
    id?: bigint | number
    order_id?: string
    pay_order_id?: string | null
    user_id: bigint | number
    goods_id: number
    total_amount: Decimal | DecimalJsLike | number | string
    actual_amount?: Decimal | DecimalJsLike | number | string
    pay_type: boolean
    callback_status?: boolean | null
    status?: boolean
    os_type?: boolean | null
    dev_no?: string
    order_ip?: string
    order_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_ordersUncheckedCreateInput = {
    id?: bigint | number
    order_id?: string
    pay_order_id?: string | null
    user_id: bigint | number
    goods_id: number
    total_amount: Decimal | DecimalJsLike | number | string
    actual_amount?: Decimal | DecimalJsLike | number | string
    pay_type: boolean
    callback_status?: boolean | null
    status?: boolean
    os_type?: boolean | null
    dev_no?: string
    order_ip?: string
    order_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_ordersUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    order_id?: StringFieldUpdateOperationsInput | string
    pay_order_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    goods_id?: IntFieldUpdateOperationsInput | number
    total_amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    actual_amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pay_type?: BoolFieldUpdateOperationsInput | boolean
    callback_status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    status?: BoolFieldUpdateOperationsInput | boolean
    os_type?: NullableBoolFieldUpdateOperationsInput | boolean | null
    dev_no?: StringFieldUpdateOperationsInput | string
    order_ip?: StringFieldUpdateOperationsInput | string
    order_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_ordersUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    order_id?: StringFieldUpdateOperationsInput | string
    pay_order_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    goods_id?: IntFieldUpdateOperationsInput | number
    total_amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    actual_amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pay_type?: BoolFieldUpdateOperationsInput | boolean
    callback_status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    status?: BoolFieldUpdateOperationsInput | boolean
    os_type?: NullableBoolFieldUpdateOperationsInput | boolean | null
    dev_no?: StringFieldUpdateOperationsInput | string
    order_ip?: StringFieldUpdateOperationsInput | string
    order_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_ordersCreateManyInput = {
    id?: bigint | number
    order_id?: string
    pay_order_id?: string | null
    user_id: bigint | number
    goods_id: number
    total_amount: Decimal | DecimalJsLike | number | string
    actual_amount?: Decimal | DecimalJsLike | number | string
    pay_type: boolean
    callback_status?: boolean | null
    status?: boolean
    os_type?: boolean | null
    dev_no?: string
    order_ip?: string
    order_country?: string | null
    created_at?: Date | string
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_ordersUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    order_id?: StringFieldUpdateOperationsInput | string
    pay_order_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    goods_id?: IntFieldUpdateOperationsInput | number
    total_amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    actual_amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pay_type?: BoolFieldUpdateOperationsInput | boolean
    callback_status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    status?: BoolFieldUpdateOperationsInput | boolean
    os_type?: NullableBoolFieldUpdateOperationsInput | boolean | null
    dev_no?: StringFieldUpdateOperationsInput | string
    order_ip?: StringFieldUpdateOperationsInput | string
    order_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_ordersUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    order_id?: StringFieldUpdateOperationsInput | string
    pay_order_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    goods_id?: IntFieldUpdateOperationsInput | number
    total_amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    actual_amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pay_type?: BoolFieldUpdateOperationsInput | boolean
    callback_status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    status?: BoolFieldUpdateOperationsInput | boolean
    os_type?: NullableBoolFieldUpdateOperationsInput | boolean | null
    dev_no?: StringFieldUpdateOperationsInput | string
    order_ip?: StringFieldUpdateOperationsInput | string
    order_country?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_payment_recordsCreateInput = {
    id?: bigint | number
    order_id?: string
    user_id: bigint | number
    amount?: Decimal | DecimalJsLike | number | string | null
    coins?: number | null
    bonus?: number | null
    type?: boolean | null
    created_at?: Date | string
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_payment_recordsUncheckedCreateInput = {
    id?: bigint | number
    order_id?: string
    user_id: bigint | number
    amount?: Decimal | DecimalJsLike | number | string | null
    coins?: number | null
    bonus?: number | null
    type?: boolean | null
    created_at?: Date | string
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_payment_recordsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    order_id?: StringFieldUpdateOperationsInput | string
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    coins?: NullableIntFieldUpdateOperationsInput | number | null
    bonus?: NullableIntFieldUpdateOperationsInput | number | null
    type?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_payment_recordsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    order_id?: StringFieldUpdateOperationsInput | string
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    coins?: NullableIntFieldUpdateOperationsInput | number | null
    bonus?: NullableIntFieldUpdateOperationsInput | number | null
    type?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_payment_recordsCreateManyInput = {
    id?: bigint | number
    order_id?: string
    user_id: bigint | number
    amount?: Decimal | DecimalJsLike | number | string | null
    coins?: number | null
    bonus?: number | null
    type?: boolean | null
    created_at?: Date | string
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_payment_recordsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    order_id?: StringFieldUpdateOperationsInput | string
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    coins?: NullableIntFieldUpdateOperationsInput | number | null
    bonus?: NullableIntFieldUpdateOperationsInput | number | null
    type?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_payment_recordsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    order_id?: StringFieldUpdateOperationsInput | string
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    coins?: NullableIntFieldUpdateOperationsInput | number | null
    bonus?: NullableIntFieldUpdateOperationsInput | number | null
    type?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_privacy_settingsCreateInput = {
    id?: bigint | number
    title?: string | null
    type?: number
    content?: string | null
    created_at?: Date | string
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_privacy_settingsUncheckedCreateInput = {
    id?: bigint | number
    title?: string | null
    type?: number
    content?: string | null
    created_at?: Date | string
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_privacy_settingsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    type?: IntFieldUpdateOperationsInput | number
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_privacy_settingsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    type?: IntFieldUpdateOperationsInput | number
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_privacy_settingsCreateManyInput = {
    id?: bigint | number
    title?: string | null
    type?: number
    content?: string | null
    created_at?: Date | string
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_privacy_settingsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    type?: IntFieldUpdateOperationsInput | number
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_privacy_settingsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    type?: IntFieldUpdateOperationsInput | number
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_purchase_recordsCreateInput = {
    id?: bigint | number
    user_id: bigint | number
    video_group_id: number
    video_id: number
    costs?: number | null
    pay_type?: number | null
    created_at?: Date | string
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_purchase_recordsUncheckedCreateInput = {
    id?: bigint | number
    user_id: bigint | number
    video_group_id: number
    video_id: number
    costs?: number | null
    pay_type?: number | null
    created_at?: Date | string
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_purchase_recordsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    video_group_id?: IntFieldUpdateOperationsInput | number
    video_id?: IntFieldUpdateOperationsInput | number
    costs?: NullableIntFieldUpdateOperationsInput | number | null
    pay_type?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_purchase_recordsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    video_group_id?: IntFieldUpdateOperationsInput | number
    video_id?: IntFieldUpdateOperationsInput | number
    costs?: NullableIntFieldUpdateOperationsInput | number | null
    pay_type?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_purchase_recordsCreateManyInput = {
    id?: bigint | number
    user_id: bigint | number
    video_group_id: number
    video_id: number
    costs?: number | null
    pay_type?: number | null
    created_at?: Date | string
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_purchase_recordsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    video_group_id?: IntFieldUpdateOperationsInput | number
    video_id?: IntFieldUpdateOperationsInput | number
    costs?: NullableIntFieldUpdateOperationsInput | number | null
    pay_type?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_purchase_recordsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    video_group_id?: IntFieldUpdateOperationsInput | number
    video_id?: IntFieldUpdateOperationsInput | number
    costs?: NullableIntFieldUpdateOperationsInput | number | null
    pay_type?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_reward_recordsCreateInput = {
    user_id: bigint | number
    reward_id: number
    updated_at?: Date | string | null
    created_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type sp_reward_recordsUncheckedCreateInput = {
    id?: number
    user_id: bigint | number
    reward_id: number
    updated_at?: Date | string | null
    created_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type sp_reward_recordsUpdateInput = {
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    reward_id?: IntFieldUpdateOperationsInput | number
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_reward_recordsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    reward_id?: IntFieldUpdateOperationsInput | number
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_reward_recordsCreateManyInput = {
    id?: number
    user_id: bigint | number
    reward_id: number
    updated_at?: Date | string | null
    created_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type sp_reward_recordsUpdateManyMutationInput = {
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    reward_id?: IntFieldUpdateOperationsInput | number
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_reward_recordsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    reward_id?: IntFieldUpdateOperationsInput | number
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_rewards_listCreateInput = {
    type: boolean
    is_once?: boolean
    max_nums?: number
    sort?: number | null
    bonus?: number
    updated_at?: Date | string | null
    created_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type sp_rewards_listUncheckedCreateInput = {
    id?: number
    type: boolean
    is_once?: boolean
    max_nums?: number
    sort?: number | null
    bonus?: number
    updated_at?: Date | string | null
    created_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type sp_rewards_listUpdateInput = {
    type?: BoolFieldUpdateOperationsInput | boolean
    is_once?: BoolFieldUpdateOperationsInput | boolean
    max_nums?: IntFieldUpdateOperationsInput | number
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    bonus?: IntFieldUpdateOperationsInput | number
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_rewards_listUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: BoolFieldUpdateOperationsInput | boolean
    is_once?: BoolFieldUpdateOperationsInput | boolean
    max_nums?: IntFieldUpdateOperationsInput | number
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    bonus?: IntFieldUpdateOperationsInput | number
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_rewards_listCreateManyInput = {
    id?: number
    type: boolean
    is_once?: boolean
    max_nums?: number
    sort?: number | null
    bonus?: number
    updated_at?: Date | string | null
    created_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type sp_rewards_listUpdateManyMutationInput = {
    type?: BoolFieldUpdateOperationsInput | boolean
    is_once?: BoolFieldUpdateOperationsInput | boolean
    max_nums?: IntFieldUpdateOperationsInput | number
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    bonus?: IntFieldUpdateOperationsInput | number
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_rewards_listUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: BoolFieldUpdateOperationsInput | boolean
    is_once?: BoolFieldUpdateOperationsInput | boolean
    max_nums?: IntFieldUpdateOperationsInput | number
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    bonus?: IntFieldUpdateOperationsInput | number
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_rewards_typeCreateInput = {
    name?: string
    status?: boolean
    updated_at?: Date | string | null
    created_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type sp_rewards_typeUncheckedCreateInput = {
    id?: number
    name?: string
    status?: boolean
    updated_at?: Date | string | null
    created_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type sp_rewards_typeUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_rewards_typeUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_rewards_typeCreateManyInput = {
    id?: number
    name?: string
    status?: boolean
    updated_at?: Date | string | null
    created_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type sp_rewards_typeUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_rewards_typeUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    status?: BoolFieldUpdateOperationsInput | boolean
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_tokensCreateInput = {
    id?: bigint | number
    user_id: bigint | number
    token?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_tokensUncheckedCreateInput = {
    id?: bigint | number
    user_id: bigint | number
    token?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_tokensUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    token?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_tokensUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    token?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_tokensCreateManyInput = {
    id?: bigint | number
    user_id: bigint | number
    token?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_tokensUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    token?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_tokensUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    token?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_upload_logsCreateInput = {
    id?: bigint | number
    user_id: bigint | number
    sid: bigint | number
    name: string
    file_id?: string
    created_at?: Date | string
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_upload_logsUncheckedCreateInput = {
    id?: bigint | number
    user_id: bigint | number
    sid: bigint | number
    name: string
    file_id?: string
    created_at?: Date | string
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_upload_logsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    sid?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    file_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_upload_logsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    sid?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    file_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_upload_logsCreateManyInput = {
    id?: bigint | number
    user_id: bigint | number
    sid: bigint | number
    name: string
    file_id?: string
    created_at?: Date | string
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_upload_logsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    sid?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    file_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_upload_logsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    sid?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    file_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_user_check_inCreateInput = {
    user_id: bigint | number
    bonus?: number | null
    days?: number
    type?: boolean | null
    updated_at?: Date | string | null
    created_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type sp_user_check_inUncheckedCreateInput = {
    id?: number
    user_id: bigint | number
    bonus?: number | null
    days?: number
    type?: boolean | null
    updated_at?: Date | string | null
    created_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type sp_user_check_inUpdateInput = {
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    bonus?: NullableIntFieldUpdateOperationsInput | number | null
    days?: IntFieldUpdateOperationsInput | number
    type?: NullableBoolFieldUpdateOperationsInput | boolean | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_user_check_inUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    bonus?: NullableIntFieldUpdateOperationsInput | number | null
    days?: IntFieldUpdateOperationsInput | number
    type?: NullableBoolFieldUpdateOperationsInput | boolean | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_user_check_inCreateManyInput = {
    id?: number
    user_id: bigint | number
    bonus?: number | null
    days?: number
    type?: boolean | null
    updated_at?: Date | string | null
    created_at?: Date | string
    deleted_at?: Date | string | null
  }

  export type sp_user_check_inUpdateManyMutationInput = {
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    bonus?: NullableIntFieldUpdateOperationsInput | number | null
    days?: IntFieldUpdateOperationsInput | number
    type?: NullableBoolFieldUpdateOperationsInput | boolean | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_user_check_inUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    bonus?: NullableIntFieldUpdateOperationsInput | number | null
    days?: IntFieldUpdateOperationsInput | number
    type?: NullableBoolFieldUpdateOperationsInput | boolean | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_user_collectionsCreateInput = {
    user_id: bigint | number
    video_id: bigint | number
    video_group_id: bigint | number
    status: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_user_collectionsUncheckedCreateInput = {
    id?: number
    user_id: bigint | number
    video_id: bigint | number
    video_group_id: bigint | number
    status: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_user_collectionsUpdateInput = {
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    video_id?: BigIntFieldUpdateOperationsInput | bigint | number
    video_group_id?: BigIntFieldUpdateOperationsInput | bigint | number
    status?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_user_collectionsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    video_id?: BigIntFieldUpdateOperationsInput | bigint | number
    video_group_id?: BigIntFieldUpdateOperationsInput | bigint | number
    status?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_user_collectionsCreateManyInput = {
    id?: number
    user_id: bigint | number
    video_id: bigint | number
    video_group_id: bigint | number
    status: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_user_collectionsUpdateManyMutationInput = {
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    video_id?: BigIntFieldUpdateOperationsInput | bigint | number
    video_group_id?: BigIntFieldUpdateOperationsInput | bigint | number
    status?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_user_collectionsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    video_id?: BigIntFieldUpdateOperationsInput | bigint | number
    video_group_id?: BigIntFieldUpdateOperationsInput | bigint | number
    status?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_user_likesCreateInput = {
    user_id: bigint | number
    video_id: bigint | number
    video_group_id: bigint | number
    status: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_user_likesUncheckedCreateInput = {
    id?: number
    user_id: bigint | number
    video_id: bigint | number
    video_group_id: bigint | number
    status: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_user_likesUpdateInput = {
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    video_id?: BigIntFieldUpdateOperationsInput | bigint | number
    video_group_id?: BigIntFieldUpdateOperationsInput | bigint | number
    status?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_user_likesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    video_id?: BigIntFieldUpdateOperationsInput | bigint | number
    video_group_id?: BigIntFieldUpdateOperationsInput | bigint | number
    status?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_user_likesCreateManyInput = {
    id?: number
    user_id: bigint | number
    video_id: bigint | number
    video_group_id: bigint | number
    status: boolean
    created_at?: Date | string
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_user_likesUpdateManyMutationInput = {
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    video_id?: BigIntFieldUpdateOperationsInput | bigint | number
    video_group_id?: BigIntFieldUpdateOperationsInput | bigint | number
    status?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_user_likesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    video_id?: BigIntFieldUpdateOperationsInput | bigint | number
    video_group_id?: BigIntFieldUpdateOperationsInput | bigint | number
    status?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_user_my_listsCreateInput = {
    id?: bigint | number
    user_id: bigint | number
    video_group_id: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_user_my_listsUncheckedCreateInput = {
    id?: bigint | number
    user_id: bigint | number
    video_group_id: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_user_my_listsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    video_group_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_user_my_listsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    video_group_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_user_my_listsCreateManyInput = {
    id?: bigint | number
    user_id: bigint | number
    video_group_id: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_user_my_listsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    video_group_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_user_my_listsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    video_group_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_user_suggestsCreateInput = {
    id?: bigint | number
    user_id: bigint | number
    title?: string
    content: string
    created_at?: Date | string
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
    email?: string | null
  }

  export type sp_user_suggestsUncheckedCreateInput = {
    id?: bigint | number
    user_id: bigint | number
    title?: string
    content: string
    created_at?: Date | string
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
    email?: string | null
  }

  export type sp_user_suggestsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type sp_user_suggestsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type sp_user_suggestsCreateManyInput = {
    id?: bigint | number
    user_id: bigint | number
    title?: string
    content: string
    created_at?: Date | string
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
    email?: string | null
  }

  export type sp_user_suggestsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type sp_user_suggestsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type sp_usersCreateInput = {
    id?: bigint | number
    user_id: bigint | number
    open_id?: string | null
    bonus?: number | null
    coins?: number
    email?: string | null
    avatar?: string | null
    nickname?: string | null
    age?: number
    gender?: number
    login_type?: number
    last_login_time?: Date | string | null
    register_ip?: string | null
    login_ip?: string | null
    register_country?: string | null
    login_country?: string | null
    register_dev_no?: string | null
    login_dev_no?: string | null
    register_os_type?: boolean | null
    login_os_type?: boolean | null
    is_disable?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_usersUncheckedCreateInput = {
    id?: bigint | number
    user_id: bigint | number
    open_id?: string | null
    bonus?: number | null
    coins?: number
    email?: string | null
    avatar?: string | null
    nickname?: string | null
    age?: number
    gender?: number
    login_type?: number
    last_login_time?: Date | string | null
    register_ip?: string | null
    login_ip?: string | null
    register_country?: string | null
    login_country?: string | null
    register_dev_no?: string | null
    login_dev_no?: string | null
    register_os_type?: boolean | null
    login_os_type?: boolean | null
    is_disable?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_usersUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    open_id?: NullableStringFieldUpdateOperationsInput | string | null
    bonus?: NullableIntFieldUpdateOperationsInput | number | null
    coins?: IntFieldUpdateOperationsInput | number
    email?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    age?: IntFieldUpdateOperationsInput | number
    gender?: IntFieldUpdateOperationsInput | number
    login_type?: IntFieldUpdateOperationsInput | number
    last_login_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    register_ip?: NullableStringFieldUpdateOperationsInput | string | null
    login_ip?: NullableStringFieldUpdateOperationsInput | string | null
    register_country?: NullableStringFieldUpdateOperationsInput | string | null
    login_country?: NullableStringFieldUpdateOperationsInput | string | null
    register_dev_no?: NullableStringFieldUpdateOperationsInput | string | null
    login_dev_no?: NullableStringFieldUpdateOperationsInput | string | null
    register_os_type?: NullableBoolFieldUpdateOperationsInput | boolean | null
    login_os_type?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_disable?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_usersUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    open_id?: NullableStringFieldUpdateOperationsInput | string | null
    bonus?: NullableIntFieldUpdateOperationsInput | number | null
    coins?: IntFieldUpdateOperationsInput | number
    email?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    age?: IntFieldUpdateOperationsInput | number
    gender?: IntFieldUpdateOperationsInput | number
    login_type?: IntFieldUpdateOperationsInput | number
    last_login_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    register_ip?: NullableStringFieldUpdateOperationsInput | string | null
    login_ip?: NullableStringFieldUpdateOperationsInput | string | null
    register_country?: NullableStringFieldUpdateOperationsInput | string | null
    login_country?: NullableStringFieldUpdateOperationsInput | string | null
    register_dev_no?: NullableStringFieldUpdateOperationsInput | string | null
    login_dev_no?: NullableStringFieldUpdateOperationsInput | string | null
    register_os_type?: NullableBoolFieldUpdateOperationsInput | boolean | null
    login_os_type?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_disable?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_usersCreateManyInput = {
    id?: bigint | number
    user_id: bigint | number
    open_id?: string | null
    bonus?: number | null
    coins?: number
    email?: string | null
    avatar?: string | null
    nickname?: string | null
    age?: number
    gender?: number
    login_type?: number
    last_login_time?: Date | string | null
    register_ip?: string | null
    login_ip?: string | null
    register_country?: string | null
    login_country?: string | null
    register_dev_no?: string | null
    login_dev_no?: string | null
    register_os_type?: boolean | null
    login_os_type?: boolean | null
    is_disable?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_usersUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    open_id?: NullableStringFieldUpdateOperationsInput | string | null
    bonus?: NullableIntFieldUpdateOperationsInput | number | null
    coins?: IntFieldUpdateOperationsInput | number
    email?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    age?: IntFieldUpdateOperationsInput | number
    gender?: IntFieldUpdateOperationsInput | number
    login_type?: IntFieldUpdateOperationsInput | number
    last_login_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    register_ip?: NullableStringFieldUpdateOperationsInput | string | null
    login_ip?: NullableStringFieldUpdateOperationsInput | string | null
    register_country?: NullableStringFieldUpdateOperationsInput | string | null
    login_country?: NullableStringFieldUpdateOperationsInput | string | null
    register_dev_no?: NullableStringFieldUpdateOperationsInput | string | null
    login_dev_no?: NullableStringFieldUpdateOperationsInput | string | null
    register_os_type?: NullableBoolFieldUpdateOperationsInput | boolean | null
    login_os_type?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_disable?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_usersUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    open_id?: NullableStringFieldUpdateOperationsInput | string | null
    bonus?: NullableIntFieldUpdateOperationsInput | number | null
    coins?: IntFieldUpdateOperationsInput | number
    email?: NullableStringFieldUpdateOperationsInput | string | null
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    age?: IntFieldUpdateOperationsInput | number
    gender?: IntFieldUpdateOperationsInput | number
    login_type?: IntFieldUpdateOperationsInput | number
    last_login_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    register_ip?: NullableStringFieldUpdateOperationsInput | string | null
    login_ip?: NullableStringFieldUpdateOperationsInput | string | null
    register_country?: NullableStringFieldUpdateOperationsInput | string | null
    login_country?: NullableStringFieldUpdateOperationsInput | string | null
    register_dev_no?: NullableStringFieldUpdateOperationsInput | string | null
    login_dev_no?: NullableStringFieldUpdateOperationsInput | string | null
    register_os_type?: NullableBoolFieldUpdateOperationsInput | boolean | null
    login_os_type?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_disable?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_video_categoriesCreateInput = {
    name?: string
    desc?: string
    status?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_video_categoriesUncheckedCreateInput = {
    id?: number
    name?: string
    desc?: string
    status?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_video_categoriesUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    desc?: StringFieldUpdateOperationsInput | string
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_video_categoriesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    desc?: StringFieldUpdateOperationsInput | string
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_video_categoriesCreateManyInput = {
    id?: number
    name?: string
    desc?: string
    status?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_video_categoriesUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    desc?: StringFieldUpdateOperationsInput | string
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_video_categoriesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    desc?: StringFieldUpdateOperationsInput | string
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_video_group_categoriesCreateInput = {
    id?: bigint | number
    video_group_id: number
    category_id: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_video_group_categoriesUncheckedCreateInput = {
    id?: bigint | number
    video_group_id: number
    category_id: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_video_group_categoriesUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    video_group_id?: IntFieldUpdateOperationsInput | number
    category_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_video_group_categoriesUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    video_group_id?: IntFieldUpdateOperationsInput | number
    category_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_video_group_categoriesCreateManyInput = {
    id?: bigint | number
    video_group_id: number
    category_id: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_video_group_categoriesUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    video_group_id?: IntFieldUpdateOperationsInput | number
    category_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_video_group_categoriesUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    video_group_id?: IntFieldUpdateOperationsInput | number
    category_id?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_video_groupsCreateInput = {
    series_id?: number
    category_id?: number | null
    title?: string
    desc?: string | null
    count?: number
    status?: boolean | null
    cover_id?: number
    costs?: number
    pay_type?: boolean | null
    free_count?: number
    is_hot?: boolean | null
    sort?: number
    total_nums?: number | null
    updated_nums?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_video_groupsUncheckedCreateInput = {
    id?: number
    series_id?: number
    category_id?: number | null
    title?: string
    desc?: string | null
    count?: number
    status?: boolean | null
    cover_id?: number
    costs?: number
    pay_type?: boolean | null
    free_count?: number
    is_hot?: boolean | null
    sort?: number
    total_nums?: number | null
    updated_nums?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_video_groupsUpdateInput = {
    series_id?: IntFieldUpdateOperationsInput | number
    category_id?: NullableIntFieldUpdateOperationsInput | number | null
    title?: StringFieldUpdateOperationsInput | string
    desc?: NullableStringFieldUpdateOperationsInput | string | null
    count?: IntFieldUpdateOperationsInput | number
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    cover_id?: IntFieldUpdateOperationsInput | number
    costs?: IntFieldUpdateOperationsInput | number
    pay_type?: NullableBoolFieldUpdateOperationsInput | boolean | null
    free_count?: IntFieldUpdateOperationsInput | number
    is_hot?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: IntFieldUpdateOperationsInput | number
    total_nums?: NullableIntFieldUpdateOperationsInput | number | null
    updated_nums?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_video_groupsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    series_id?: IntFieldUpdateOperationsInput | number
    category_id?: NullableIntFieldUpdateOperationsInput | number | null
    title?: StringFieldUpdateOperationsInput | string
    desc?: NullableStringFieldUpdateOperationsInput | string | null
    count?: IntFieldUpdateOperationsInput | number
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    cover_id?: IntFieldUpdateOperationsInput | number
    costs?: IntFieldUpdateOperationsInput | number
    pay_type?: NullableBoolFieldUpdateOperationsInput | boolean | null
    free_count?: IntFieldUpdateOperationsInput | number
    is_hot?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: IntFieldUpdateOperationsInput | number
    total_nums?: NullableIntFieldUpdateOperationsInput | number | null
    updated_nums?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_video_groupsCreateManyInput = {
    id?: number
    series_id?: number
    category_id?: number | null
    title?: string
    desc?: string | null
    count?: number
    status?: boolean | null
    cover_id?: number
    costs?: number
    pay_type?: boolean | null
    free_count?: number
    is_hot?: boolean | null
    sort?: number
    total_nums?: number | null
    updated_nums?: number | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_video_groupsUpdateManyMutationInput = {
    series_id?: IntFieldUpdateOperationsInput | number
    category_id?: NullableIntFieldUpdateOperationsInput | number | null
    title?: StringFieldUpdateOperationsInput | string
    desc?: NullableStringFieldUpdateOperationsInput | string | null
    count?: IntFieldUpdateOperationsInput | number
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    cover_id?: IntFieldUpdateOperationsInput | number
    costs?: IntFieldUpdateOperationsInput | number
    pay_type?: NullableBoolFieldUpdateOperationsInput | boolean | null
    free_count?: IntFieldUpdateOperationsInput | number
    is_hot?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: IntFieldUpdateOperationsInput | number
    total_nums?: NullableIntFieldUpdateOperationsInput | number | null
    updated_nums?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_video_groupsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    series_id?: IntFieldUpdateOperationsInput | number
    category_id?: NullableIntFieldUpdateOperationsInput | number | null
    title?: StringFieldUpdateOperationsInput | string
    desc?: NullableStringFieldUpdateOperationsInput | string | null
    count?: IntFieldUpdateOperationsInput | number
    status?: NullableBoolFieldUpdateOperationsInput | boolean | null
    cover_id?: IntFieldUpdateOperationsInput | number
    costs?: IntFieldUpdateOperationsInput | number
    pay_type?: NullableBoolFieldUpdateOperationsInput | boolean | null
    free_count?: IntFieldUpdateOperationsInput | number
    is_hot?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: IntFieldUpdateOperationsInput | number
    total_nums?: NullableIntFieldUpdateOperationsInput | number | null
    updated_nums?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_videosCreateInput = {
    id?: bigint | number
    group_id: number
    file_id?: number
    title?: string
    cover?: string | null
    desc?: string
    sort?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_videosUncheckedCreateInput = {
    id?: bigint | number
    group_id: number
    file_id?: number
    title?: string
    cover?: string | null
    desc?: string
    sort?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_videosUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    group_id?: IntFieldUpdateOperationsInput | number
    file_id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    cover?: NullableStringFieldUpdateOperationsInput | string | null
    desc?: StringFieldUpdateOperationsInput | string
    sort?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_videosUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    group_id?: IntFieldUpdateOperationsInput | number
    file_id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    cover?: NullableStringFieldUpdateOperationsInput | string | null
    desc?: StringFieldUpdateOperationsInput | string
    sort?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_videosCreateManyInput = {
    id?: bigint | number
    group_id: number
    file_id?: number
    title?: string
    cover?: string | null
    desc?: string
    sort?: number
    created_at?: Date | string | null
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_videosUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    group_id?: IntFieldUpdateOperationsInput | number
    file_id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    cover?: NullableStringFieldUpdateOperationsInput | string | null
    desc?: StringFieldUpdateOperationsInput | string
    sort?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_videosUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    group_id?: IntFieldUpdateOperationsInput | number
    file_id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    cover?: NullableStringFieldUpdateOperationsInput | string | null
    desc?: StringFieldUpdateOperationsInput | string
    sort?: IntFieldUpdateOperationsInput | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_view_historiesCreateInput = {
    id?: bigint | number
    user_id: bigint | number
    video_id: bigint | number
    is_finished?: boolean
    video_group_id: bigint | number
    created_at?: Date | string
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_view_historiesUncheckedCreateInput = {
    id?: bigint | number
    user_id: bigint | number
    video_id: bigint | number
    is_finished?: boolean
    video_group_id: bigint | number
    created_at?: Date | string
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_view_historiesUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    video_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_finished?: BoolFieldUpdateOperationsInput | boolean
    video_group_id?: BigIntFieldUpdateOperationsInput | bigint | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_view_historiesUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    video_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_finished?: BoolFieldUpdateOperationsInput | boolean
    video_group_id?: BigIntFieldUpdateOperationsInput | bigint | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_view_historiesCreateManyInput = {
    id?: bigint | number
    user_id: bigint | number
    video_id: bigint | number
    is_finished?: boolean
    video_group_id: bigint | number
    created_at?: Date | string
    updated_at?: Date | string | null
    deleted_at?: Date | string | null
  }

  export type sp_view_historiesUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    video_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_finished?: BoolFieldUpdateOperationsInput | boolean
    video_group_id?: BigIntFieldUpdateOperationsInput | bigint | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sp_view_historiesUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    video_id?: BigIntFieldUpdateOperationsInput | bigint | number
    is_finished?: BoolFieldUpdateOperationsInput | boolean
    video_group_id?: BigIntFieldUpdateOperationsInput | bigint | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type sp_admin_menusOrderByRelevanceInput = {
    fields: sp_admin_menusOrderByRelevanceFieldEnum | sp_admin_menusOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sp_admin_menusCountOrderByAggregateInput = {
    id?: SortOrder
    parent_id?: SortOrder
    path?: SortOrder
    name?: SortOrder
    type_name?: SortOrder
    component?: SortOrder
    sort?: SortOrder
    icon?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_admin_menusAvgOrderByAggregateInput = {
    id?: SortOrder
    parent_id?: SortOrder
    sort?: SortOrder
  }

  export type sp_admin_menusMaxOrderByAggregateInput = {
    id?: SortOrder
    parent_id?: SortOrder
    path?: SortOrder
    name?: SortOrder
    type_name?: SortOrder
    component?: SortOrder
    sort?: SortOrder
    icon?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_admin_menusMinOrderByAggregateInput = {
    id?: SortOrder
    parent_id?: SortOrder
    path?: SortOrder
    name?: SortOrder
    type_name?: SortOrder
    component?: SortOrder
    sort?: SortOrder
    icon?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_admin_menusSumOrderByAggregateInput = {
    id?: SortOrder
    parent_id?: SortOrder
    sort?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }
  export type JsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type sp_admin_rolesOrderByRelevanceInput = {
    fields: sp_admin_rolesOrderByRelevanceFieldEnum | sp_admin_rolesOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sp_admin_rolesCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    status?: SortOrder
    desc?: SortOrder
    rules?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_admin_rolesAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type sp_admin_rolesMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    status?: SortOrder
    desc?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_admin_rolesMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    status?: SortOrder
    desc?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_admin_rolesSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type BigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[]
    notIn?: bigint[] | number[]
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type sp_admin_tokensOrderByRelevanceInput = {
    fields: sp_admin_tokensOrderByRelevanceFieldEnum | sp_admin_tokensOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sp_admin_tokensCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    token?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_admin_tokensAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
  }

  export type sp_admin_tokensMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    token?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_admin_tokensMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    token?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_admin_tokensSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
  }

  export type BigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[]
    notIn?: bigint[] | number[]
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type sp_adminsOrderByRelevanceInput = {
    fields: sp_adminsOrderByRelevanceFieldEnum | sp_adminsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sp_adminsCountOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    password_modify?: SortOrder
    roles?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    status?: SortOrder
  }

  export type sp_adminsAvgOrderByAggregateInput = {
    id?: SortOrder
    password_modify?: SortOrder
  }

  export type sp_adminsMaxOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    password_modify?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    status?: SortOrder
  }

  export type sp_adminsMinOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    password_modify?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    status?: SortOrder
  }

  export type sp_adminsSumOrderByAggregateInput = {
    id?: SortOrder
    password_modify?: SortOrder
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type sp_failed_jobsOrderByRelevanceInput = {
    fields: sp_failed_jobsOrderByRelevanceFieldEnum | sp_failed_jobsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sp_failed_jobsCountOrderByAggregateInput = {
    id?: SortOrder
    uuid?: SortOrder
    connection?: SortOrder
    queue?: SortOrder
    payload?: SortOrder
    exception?: SortOrder
    failed_at?: SortOrder
  }

  export type sp_failed_jobsAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type sp_failed_jobsMaxOrderByAggregateInput = {
    id?: SortOrder
    uuid?: SortOrder
    connection?: SortOrder
    queue?: SortOrder
    payload?: SortOrder
    exception?: SortOrder
    failed_at?: SortOrder
  }

  export type sp_failed_jobsMinOrderByAggregateInput = {
    id?: SortOrder
    uuid?: SortOrder
    connection?: SortOrder
    queue?: SortOrder
    payload?: SortOrder
    exception?: SortOrder
    failed_at?: SortOrder
  }

  export type sp_failed_jobsSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type sp_filesOrderByRelevanceInput = {
    fields: sp_filesOrderByRelevanceFieldEnum | sp_filesOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sp_filesCountOrderByAggregateInput = {
    id?: SortOrder
    file_id?: SortOrder
    url?: SortOrder
    title?: SortOrder
    type?: SortOrder
    group_id?: SortOrder
    sort?: SortOrder
    cover?: SortOrder
    info?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_filesAvgOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    group_id?: SortOrder
    sort?: SortOrder
  }

  export type sp_filesMaxOrderByAggregateInput = {
    id?: SortOrder
    file_id?: SortOrder
    url?: SortOrder
    title?: SortOrder
    type?: SortOrder
    group_id?: SortOrder
    sort?: SortOrder
    cover?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_filesMinOrderByAggregateInput = {
    id?: SortOrder
    file_id?: SortOrder
    url?: SortOrder
    title?: SortOrder
    type?: SortOrder
    group_id?: SortOrder
    sort?: SortOrder
    cover?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_filesSumOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    group_id?: SortOrder
    sort?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type sp_goodsOrderByRelevanceInput = {
    fields: sp_goodsOrderByRelevanceFieldEnum | sp_goodsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sp_goodsCountOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    name?: SortOrder
    price?: SortOrder
    coins?: SortOrder
    product_tier?: SortOrder
    bonus?: SortOrder
    sort?: SortOrder
    desc?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_goodsAvgOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    price?: SortOrder
    coins?: SortOrder
    bonus?: SortOrder
    sort?: SortOrder
  }

  export type sp_goodsMaxOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    name?: SortOrder
    price?: SortOrder
    coins?: SortOrder
    product_tier?: SortOrder
    bonus?: SortOrder
    sort?: SortOrder
    desc?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_goodsMinOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    name?: SortOrder
    price?: SortOrder
    coins?: SortOrder
    product_tier?: SortOrder
    bonus?: SortOrder
    sort?: SortOrder
    desc?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_goodsSumOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    price?: SortOrder
    coins?: SortOrder
    bonus?: SortOrder
    sort?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type sp_home_seriesOrderByRelevanceInput = {
    fields: sp_home_seriesOrderByRelevanceFieldEnum | sp_home_seriesOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sp_home_seriesCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    icon?: SortOrder
    desc?: SortOrder
    sort?: SortOrder
    is_more?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_home_seriesAvgOrderByAggregateInput = {
    id?: SortOrder
    sort?: SortOrder
  }

  export type sp_home_seriesMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    icon?: SortOrder
    desc?: SortOrder
    sort?: SortOrder
    is_more?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_home_seriesMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    icon?: SortOrder
    desc?: SortOrder
    sort?: SortOrder
    is_more?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_home_seriesSumOrderByAggregateInput = {
    id?: SortOrder
    sort?: SortOrder
  }

  export type sp_login_logsCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    logs?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_login_logsAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
  }

  export type sp_login_logsMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_login_logsMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_login_logsSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
  }

  export type sp_migrationsOrderByRelevanceInput = {
    fields: sp_migrationsOrderByRelevanceFieldEnum | sp_migrationsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sp_migrationsCountOrderByAggregateInput = {
    id?: SortOrder
    migration?: SortOrder
    batch?: SortOrder
  }

  export type sp_migrationsAvgOrderByAggregateInput = {
    id?: SortOrder
    batch?: SortOrder
  }

  export type sp_migrationsMaxOrderByAggregateInput = {
    id?: SortOrder
    migration?: SortOrder
    batch?: SortOrder
  }

  export type sp_migrationsMinOrderByAggregateInput = {
    id?: SortOrder
    migration?: SortOrder
    batch?: SortOrder
  }

  export type sp_migrationsSumOrderByAggregateInput = {
    id?: SortOrder
    batch?: SortOrder
  }

  export type sp_ordersOrderByRelevanceInput = {
    fields: sp_ordersOrderByRelevanceFieldEnum | sp_ordersOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sp_ordersCountOrderByAggregateInput = {
    id?: SortOrder
    order_id?: SortOrder
    pay_order_id?: SortOrder
    user_id?: SortOrder
    goods_id?: SortOrder
    total_amount?: SortOrder
    actual_amount?: SortOrder
    pay_type?: SortOrder
    callback_status?: SortOrder
    status?: SortOrder
    os_type?: SortOrder
    dev_no?: SortOrder
    order_ip?: SortOrder
    order_country?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_ordersAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    goods_id?: SortOrder
    total_amount?: SortOrder
    actual_amount?: SortOrder
  }

  export type sp_ordersMaxOrderByAggregateInput = {
    id?: SortOrder
    order_id?: SortOrder
    pay_order_id?: SortOrder
    user_id?: SortOrder
    goods_id?: SortOrder
    total_amount?: SortOrder
    actual_amount?: SortOrder
    pay_type?: SortOrder
    callback_status?: SortOrder
    status?: SortOrder
    os_type?: SortOrder
    dev_no?: SortOrder
    order_ip?: SortOrder
    order_country?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_ordersMinOrderByAggregateInput = {
    id?: SortOrder
    order_id?: SortOrder
    pay_order_id?: SortOrder
    user_id?: SortOrder
    goods_id?: SortOrder
    total_amount?: SortOrder
    actual_amount?: SortOrder
    pay_type?: SortOrder
    callback_status?: SortOrder
    status?: SortOrder
    os_type?: SortOrder
    dev_no?: SortOrder
    order_ip?: SortOrder
    order_country?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_ordersSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    goods_id?: SortOrder
    total_amount?: SortOrder
    actual_amount?: SortOrder
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type sp_payment_recordsOrderByRelevanceInput = {
    fields: sp_payment_recordsOrderByRelevanceFieldEnum | sp_payment_recordsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sp_payment_recordsCountOrderByAggregateInput = {
    id?: SortOrder
    order_id?: SortOrder
    user_id?: SortOrder
    amount?: SortOrder
    coins?: SortOrder
    bonus?: SortOrder
    type?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_payment_recordsAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    amount?: SortOrder
    coins?: SortOrder
    bonus?: SortOrder
  }

  export type sp_payment_recordsMaxOrderByAggregateInput = {
    id?: SortOrder
    order_id?: SortOrder
    user_id?: SortOrder
    amount?: SortOrder
    coins?: SortOrder
    bonus?: SortOrder
    type?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_payment_recordsMinOrderByAggregateInput = {
    id?: SortOrder
    order_id?: SortOrder
    user_id?: SortOrder
    amount?: SortOrder
    coins?: SortOrder
    bonus?: SortOrder
    type?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_payment_recordsSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    amount?: SortOrder
    coins?: SortOrder
    bonus?: SortOrder
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type sp_privacy_settingsOrderByRelevanceInput = {
    fields: sp_privacy_settingsOrderByRelevanceFieldEnum | sp_privacy_settingsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sp_privacy_settingsCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    type?: SortOrder
    content?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_privacy_settingsAvgOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
  }

  export type sp_privacy_settingsMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    type?: SortOrder
    content?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_privacy_settingsMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    type?: SortOrder
    content?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_privacy_settingsSumOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
  }

  export type sp_purchase_recordsCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    video_group_id?: SortOrder
    video_id?: SortOrder
    costs?: SortOrder
    pay_type?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_purchase_recordsAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    video_group_id?: SortOrder
    video_id?: SortOrder
    costs?: SortOrder
    pay_type?: SortOrder
  }

  export type sp_purchase_recordsMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    video_group_id?: SortOrder
    video_id?: SortOrder
    costs?: SortOrder
    pay_type?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_purchase_recordsMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    video_group_id?: SortOrder
    video_id?: SortOrder
    costs?: SortOrder
    pay_type?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_purchase_recordsSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    video_group_id?: SortOrder
    video_id?: SortOrder
    costs?: SortOrder
    pay_type?: SortOrder
  }

  export type sp_reward_recordsCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    reward_id?: SortOrder
    updated_at?: SortOrder
    created_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_reward_recordsAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    reward_id?: SortOrder
  }

  export type sp_reward_recordsMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    reward_id?: SortOrder
    updated_at?: SortOrder
    created_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_reward_recordsMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    reward_id?: SortOrder
    updated_at?: SortOrder
    created_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_reward_recordsSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    reward_id?: SortOrder
  }

  export type sp_rewards_listCountOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    is_once?: SortOrder
    max_nums?: SortOrder
    sort?: SortOrder
    bonus?: SortOrder
    updated_at?: SortOrder
    created_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_rewards_listAvgOrderByAggregateInput = {
    id?: SortOrder
    max_nums?: SortOrder
    sort?: SortOrder
    bonus?: SortOrder
  }

  export type sp_rewards_listMaxOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    is_once?: SortOrder
    max_nums?: SortOrder
    sort?: SortOrder
    bonus?: SortOrder
    updated_at?: SortOrder
    created_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_rewards_listMinOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    is_once?: SortOrder
    max_nums?: SortOrder
    sort?: SortOrder
    bonus?: SortOrder
    updated_at?: SortOrder
    created_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_rewards_listSumOrderByAggregateInput = {
    id?: SortOrder
    max_nums?: SortOrder
    sort?: SortOrder
    bonus?: SortOrder
  }

  export type sp_rewards_typeOrderByRelevanceInput = {
    fields: sp_rewards_typeOrderByRelevanceFieldEnum | sp_rewards_typeOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sp_rewards_typeCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    status?: SortOrder
    updated_at?: SortOrder
    created_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_rewards_typeAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type sp_rewards_typeMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    status?: SortOrder
    updated_at?: SortOrder
    created_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_rewards_typeMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    status?: SortOrder
    updated_at?: SortOrder
    created_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_rewards_typeSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type sp_tokensOrderByRelevanceInput = {
    fields: sp_tokensOrderByRelevanceFieldEnum | sp_tokensOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sp_tokensCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    token?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_tokensAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
  }

  export type sp_tokensMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    token?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_tokensMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    token?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_tokensSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
  }

  export type sp_upload_logsOrderByRelevanceInput = {
    fields: sp_upload_logsOrderByRelevanceFieldEnum | sp_upload_logsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sp_upload_logsCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    sid?: SortOrder
    name?: SortOrder
    file_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_upload_logsAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    sid?: SortOrder
  }

  export type sp_upload_logsMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    sid?: SortOrder
    name?: SortOrder
    file_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_upload_logsMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    sid?: SortOrder
    name?: SortOrder
    file_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_upload_logsSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    sid?: SortOrder
  }

  export type sp_user_check_inCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    bonus?: SortOrder
    days?: SortOrder
    type?: SortOrder
    updated_at?: SortOrder
    created_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_user_check_inAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    bonus?: SortOrder
    days?: SortOrder
  }

  export type sp_user_check_inMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    bonus?: SortOrder
    days?: SortOrder
    type?: SortOrder
    updated_at?: SortOrder
    created_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_user_check_inMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    bonus?: SortOrder
    days?: SortOrder
    type?: SortOrder
    updated_at?: SortOrder
    created_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_user_check_inSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    bonus?: SortOrder
    days?: SortOrder
  }

  export type sp_user_collectionsCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    video_id?: SortOrder
    video_group_id?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_user_collectionsAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    video_id?: SortOrder
    video_group_id?: SortOrder
  }

  export type sp_user_collectionsMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    video_id?: SortOrder
    video_group_id?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_user_collectionsMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    video_id?: SortOrder
    video_group_id?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_user_collectionsSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    video_id?: SortOrder
    video_group_id?: SortOrder
  }

  export type sp_user_likesCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    video_id?: SortOrder
    video_group_id?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_user_likesAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    video_id?: SortOrder
    video_group_id?: SortOrder
  }

  export type sp_user_likesMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    video_id?: SortOrder
    video_group_id?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_user_likesMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    video_id?: SortOrder
    video_group_id?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_user_likesSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    video_id?: SortOrder
    video_group_id?: SortOrder
  }

  export type sp_user_my_listsCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    video_group_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_user_my_listsAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    video_group_id?: SortOrder
  }

  export type sp_user_my_listsMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    video_group_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_user_my_listsMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    video_group_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_user_my_listsSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    video_group_id?: SortOrder
  }

  export type sp_user_suggestsOrderByRelevanceInput = {
    fields: sp_user_suggestsOrderByRelevanceFieldEnum | sp_user_suggestsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sp_user_suggestsCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    email?: SortOrder
  }

  export type sp_user_suggestsAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
  }

  export type sp_user_suggestsMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    email?: SortOrder
  }

  export type sp_user_suggestsMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
    email?: SortOrder
  }

  export type sp_user_suggestsSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
  }

  export type sp_usersOrderByRelevanceInput = {
    fields: sp_usersOrderByRelevanceFieldEnum | sp_usersOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sp_usersCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    open_id?: SortOrder
    bonus?: SortOrder
    coins?: SortOrder
    email?: SortOrder
    avatar?: SortOrder
    nickname?: SortOrder
    age?: SortOrder
    gender?: SortOrder
    login_type?: SortOrder
    last_login_time?: SortOrder
    register_ip?: SortOrder
    login_ip?: SortOrder
    register_country?: SortOrder
    login_country?: SortOrder
    register_dev_no?: SortOrder
    login_dev_no?: SortOrder
    register_os_type?: SortOrder
    login_os_type?: SortOrder
    is_disable?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_usersAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    bonus?: SortOrder
    coins?: SortOrder
    age?: SortOrder
    gender?: SortOrder
    login_type?: SortOrder
    is_disable?: SortOrder
  }

  export type sp_usersMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    open_id?: SortOrder
    bonus?: SortOrder
    coins?: SortOrder
    email?: SortOrder
    avatar?: SortOrder
    nickname?: SortOrder
    age?: SortOrder
    gender?: SortOrder
    login_type?: SortOrder
    last_login_time?: SortOrder
    register_ip?: SortOrder
    login_ip?: SortOrder
    register_country?: SortOrder
    login_country?: SortOrder
    register_dev_no?: SortOrder
    login_dev_no?: SortOrder
    register_os_type?: SortOrder
    login_os_type?: SortOrder
    is_disable?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_usersMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    open_id?: SortOrder
    bonus?: SortOrder
    coins?: SortOrder
    email?: SortOrder
    avatar?: SortOrder
    nickname?: SortOrder
    age?: SortOrder
    gender?: SortOrder
    login_type?: SortOrder
    last_login_time?: SortOrder
    register_ip?: SortOrder
    login_ip?: SortOrder
    register_country?: SortOrder
    login_country?: SortOrder
    register_dev_no?: SortOrder
    login_dev_no?: SortOrder
    register_os_type?: SortOrder
    login_os_type?: SortOrder
    is_disable?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_usersSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    bonus?: SortOrder
    coins?: SortOrder
    age?: SortOrder
    gender?: SortOrder
    login_type?: SortOrder
    is_disable?: SortOrder
  }

  export type sp_video_categoriesOrderByRelevanceInput = {
    fields: sp_video_categoriesOrderByRelevanceFieldEnum | sp_video_categoriesOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sp_video_categoriesCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    desc?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_video_categoriesAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type sp_video_categoriesMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    desc?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_video_categoriesMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    desc?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_video_categoriesSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type sp_video_group_categoriesCountOrderByAggregateInput = {
    id?: SortOrder
    video_group_id?: SortOrder
    category_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_video_group_categoriesAvgOrderByAggregateInput = {
    id?: SortOrder
    video_group_id?: SortOrder
    category_id?: SortOrder
  }

  export type sp_video_group_categoriesMaxOrderByAggregateInput = {
    id?: SortOrder
    video_group_id?: SortOrder
    category_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_video_group_categoriesMinOrderByAggregateInput = {
    id?: SortOrder
    video_group_id?: SortOrder
    category_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_video_group_categoriesSumOrderByAggregateInput = {
    id?: SortOrder
    video_group_id?: SortOrder
    category_id?: SortOrder
  }

  export type sp_video_groupsOrderByRelevanceInput = {
    fields: sp_video_groupsOrderByRelevanceFieldEnum | sp_video_groupsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sp_video_groupsCountOrderByAggregateInput = {
    id?: SortOrder
    series_id?: SortOrder
    category_id?: SortOrder
    title?: SortOrder
    desc?: SortOrder
    count?: SortOrder
    status?: SortOrder
    cover_id?: SortOrder
    costs?: SortOrder
    pay_type?: SortOrder
    free_count?: SortOrder
    is_hot?: SortOrder
    sort?: SortOrder
    total_nums?: SortOrder
    updated_nums?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_video_groupsAvgOrderByAggregateInput = {
    id?: SortOrder
    series_id?: SortOrder
    category_id?: SortOrder
    count?: SortOrder
    cover_id?: SortOrder
    costs?: SortOrder
    free_count?: SortOrder
    sort?: SortOrder
    total_nums?: SortOrder
    updated_nums?: SortOrder
  }

  export type sp_video_groupsMaxOrderByAggregateInput = {
    id?: SortOrder
    series_id?: SortOrder
    category_id?: SortOrder
    title?: SortOrder
    desc?: SortOrder
    count?: SortOrder
    status?: SortOrder
    cover_id?: SortOrder
    costs?: SortOrder
    pay_type?: SortOrder
    free_count?: SortOrder
    is_hot?: SortOrder
    sort?: SortOrder
    total_nums?: SortOrder
    updated_nums?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_video_groupsMinOrderByAggregateInput = {
    id?: SortOrder
    series_id?: SortOrder
    category_id?: SortOrder
    title?: SortOrder
    desc?: SortOrder
    count?: SortOrder
    status?: SortOrder
    cover_id?: SortOrder
    costs?: SortOrder
    pay_type?: SortOrder
    free_count?: SortOrder
    is_hot?: SortOrder
    sort?: SortOrder
    total_nums?: SortOrder
    updated_nums?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_video_groupsSumOrderByAggregateInput = {
    id?: SortOrder
    series_id?: SortOrder
    category_id?: SortOrder
    count?: SortOrder
    cover_id?: SortOrder
    costs?: SortOrder
    free_count?: SortOrder
    sort?: SortOrder
    total_nums?: SortOrder
    updated_nums?: SortOrder
  }

  export type sp_videosOrderByRelevanceInput = {
    fields: sp_videosOrderByRelevanceFieldEnum | sp_videosOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sp_videosCountOrderByAggregateInput = {
    id?: SortOrder
    group_id?: SortOrder
    file_id?: SortOrder
    title?: SortOrder
    cover?: SortOrder
    desc?: SortOrder
    sort?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_videosAvgOrderByAggregateInput = {
    id?: SortOrder
    group_id?: SortOrder
    file_id?: SortOrder
    sort?: SortOrder
  }

  export type sp_videosMaxOrderByAggregateInput = {
    id?: SortOrder
    group_id?: SortOrder
    file_id?: SortOrder
    title?: SortOrder
    cover?: SortOrder
    desc?: SortOrder
    sort?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_videosMinOrderByAggregateInput = {
    id?: SortOrder
    group_id?: SortOrder
    file_id?: SortOrder
    title?: SortOrder
    cover?: SortOrder
    desc?: SortOrder
    sort?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_videosSumOrderByAggregateInput = {
    id?: SortOrder
    group_id?: SortOrder
    file_id?: SortOrder
    sort?: SortOrder
  }

  export type sp_view_historiesCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    video_id?: SortOrder
    is_finished?: SortOrder
    video_group_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_view_historiesAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    video_id?: SortOrder
    video_group_id?: SortOrder
  }

  export type sp_view_historiesMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    video_id?: SortOrder
    is_finished?: SortOrder
    video_group_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_view_historiesMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    video_id?: SortOrder
    is_finished?: SortOrder
    video_group_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    deleted_at?: SortOrder
  }

  export type sp_view_historiesSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    video_id?: SortOrder
    video_group_id?: SortOrder
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type BigIntFieldUpdateOperationsInput = {
    set?: bigint | number
    increment?: bigint | number
    decrement?: bigint | number
    multiply?: bigint | number
    divide?: bigint | number
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedBigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[]
    notIn?: bigint[] | number[]
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedBigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[]
    notIn?: bigint[] | number[]
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}